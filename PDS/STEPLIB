STEPLIB  TITLE '- STEPLIB - COMMAND PROCESSOR'
*---------------------------------------------------------------------*
*                                                                     *
*        Support Email Address: zOS.JES2@Gmail.com                    *
*                                                                     *
*---------------------------------------------------------------------*

*---------------------------------------------------------------------*
*                 |                                                   *
*  S T E P L I B  |       TSO STEPLIB COMMAND PROCESSOR               *
*                 |                                                   *
*------------------                                                   *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* COMMNAD SYNTAX:                                                     *
*                                                                     *
*        STEPLIB ADD DATASETS(DSNAME LIST) FIRST|LAST NOMSGS          *
*        - ADDS THE DSNAME LIST TO THE EXISTING STEPLIB.              *
*                                                                     *
*        STEPLIB ALLOCATE DATASETS(DSNAME LIST) SHR REUSE NOMSGS      *
*        - ALLOCATES A NEW STEPLIB & CLOSES/FREES THE OLD.            *
*                                                                     *
*        STEPLIB FREE NOMSGS                                          *
*        - CLOSES/FREES THE OLD STEPLIB.                              *
*                                                                     *
*        STEPLIB LIST                                                 *
*        - DISPLAYS THE STEPLIB DDNAME AND DATASETS.                  *
*                                                                     *
*        STEPLIB REMOVE DATASETS(DSNAME LIST) NOMSGS                  *
*        - REMOVES THE DSNAME LIST FROM THE EXISTING STEPLIB.         *
*                                                                     *
*        STEPLIB SAVE                                                 *
*        - CREATES A CLIST VARIABLE (&STEPLIB) TO BE USED TO SAVE     *
*          THE CURRENT STEPLIB'S DATASET NAME LIST.                   *
*                                                                     *
*        STEPLIB STACK DATASETS(DSNAME LIST) FIRST|LAST NOMSGS        *
*        - ADDS THE DSNAME TO THE STEPLIB, EVEN IF IT IS ALREADY      *
*          PART OF THE CONCATENATION.                                 *
*                                                                     *
*        STEPLIB DESTACK DATASETS(DSNAME LIST) NOMSGS                 *
*        - REMOVES THE 1ST OCCUANCE OF A DSNAME FROM THE STEPLIB.     *
*                                                                     *
*        STEPLIB ... APFCHK                                           *
*        - AFTER THE FUNCTION IS PERFORMED, CHECK IF THE LIBRARIES    *
*          WITHIN THE STEPLIB ARE IN THE APF LIST.                    *
*                                                                     *
*---------------------------------------------------------------------*

*---------------------------------------------------------------------*
*                                                                     *
*     HISTORY:          - JAN 13,1996 -  RE-WRITTEN FROM OLD "MODS"   *
*              #DD99244 - SEP 01,1999 -  VARIOUS BUG FIXES:           *
*              - IF OLD STEPLIB DDNAME IS "STEPLIB" BYPASS "UNALLOC". *
*              - GET "REAL" NAME FROM CATALOG IN CASE AN ALIAS WAS    *
*                SPECIFIED ON THE "STEPLIB REMOVE".                   *
*              - FIX REMOVAL OF "LAST" DATASET FROM LIST.             *
*              #DD99245 - SEP 02,1999 -  IF THE ORIGINAL DDNAME       *
*                FOR A STEPLIB IS NOT A "$TEP" PREFIX, IT IS FREE'D   *
*                AND RE-ALLOCATED WITH THE $TEP000# DDNAME.           *
*              #DD01068 - MAR 09,2001 -  RECOGNIZE LIBRARIES THAT     *
*                ARE ALREADY IN THE CURRENT STEPLIB WHEN PERFORMING   *
*                AN "ADD" FUNCTION.                                   *
*              #DD01072 - MAR 13,2001 -  ADD "STACK"/"DESTACK".       *
*              #DD01073 - MAR 14,2001 -  ADD "APFCHK".                *
*              #DD01095 - APR  5,2001 -  CORRECTIVE FIXES.            *
*              #DD01250 - SEP  7,2001 -  FIX "DESTACK" PROCESSING.    *
*              #DD04108 - APR 17,2004 -  ADD ESTAE AROUND OPEN        *
*                                        TO PROTECT AGAINST ABENDS,   *
*                                        ESPECIALLY S913'S.           *
*              #DD05026 - JAN 26,2005 -  CHECK FOR A REAL "JOBLIB".   *
*              #DD05031 - JAN 31,2005 -  CORRECT NULL STEPLIB DDNAME. *
*              #DD08098 - APR  7,2008 -  STEPLIB "VERSION" FUNCTION.  *
*              #DD08099 - APR  8,2008 -  ISSUE OPEN FAILED MSG FOR    *
*                                        EACH FAILED DSN.             *
*              #DD08112 - APR 21,2008 -  CORRECT APF/SMS CHECK.       *
*              #DD08268 - SEP 24,2008 -  ALLOW FOR BATCH TMP.         *
*                                     -  ADD DEBUG CODE.              *
*              #DD08350 - DEC 15,2008 -  NO TRACE WHEN PARSE ERROR    *
*              #DD09027 - JAN 27,2009 -  PAUSE BEFORE BATCH EXIT.     *
*              #DD09101 - APR 11,2009 -  USE BRANCH ENTRY CIRB.       *
*                                        FIX FOR Z11 PMR 49446,756    *
*                                        (D78 abend).                 *
*              #DD09103   APR 13,2009 -  CHANGE TO USE SCHEDIRB.      *
*              #DD09199   JUL 18,2009 -  LEAVE NON-ZERO TCBJLIB ALONE.*
*   1.16 -     #DD10050   Feb 19,2010 -  Build DCB/DCBE for >= r1.12  *
*                       (Thanks to Jan Ott for heads up & assistance).*
*   1.17 -     #DD10106   Apr 16,2010 -  JES3 Support.                *
*   1.18 -     #DD10177   Jun 10,2010 -  Create &STEPLIB Variable.    *
*   1.19 -     #DD12060   Feb 29,2012 -  Correction for EAV support.  *
*   1.20 -     #JR14048   Feb 17,2014 -  Use 24-bit address for RBCDE.*
*                                                                     *
*---------------------------------------------------------------------*

         ACONTROL OPTABLE(ZS3)     ASSEMBLY OPTCDE TABLE
         SPLEVEL  SET=6            SPECIFY OS/390 R2 MACRO FORMAT
         SYSSTATE ARCHLVL=2        ASSEMBLY REQUIRES Z/ARCHITECTURE
         SYSSTATE OSREL=ZOSV1R13   ASSEMBLY REQUIRES Z/OS 1.13 & HIGHER

STEPLIB  #START ,                  START PROCEDURE                     *
               AMODE=CAP31,        EXECUTE IN 31-BIT ADDRESSING MODE   *
               APARS=,             NO NEED FOR APAR "ZAP" SLOTS        *
               RMODE=24,           EXECUTE IN 24-BIT RESIDENCY MODE    *
               BASE=(R12,R11),     DEFINE BASE REGISTER(S)             *
               COPY=YES,           INSERT COPYRIGHT NOTICE             *
               COPYYR=1996,        COPYRIGHT YEAR                      *
               WKDSECT=STEPWRK,    DEFINE WORKAREA NAME                *
               LEVEL=#V001R20                                  #DD14048

         USING PSA,0

         ST    R1,WRKCPPL@         Save CPPL Address           #DD10106
         LR    R8,R1               A(CPPL)
         USING CPPL,R8

         MVC   WRKUPT@,CPPLUPT     SAVE A(UPT)
         MVC   WRKECT@,CPPLECT     SAVE A(ECT)

         L     R15,PSATOLD         LOAD TCB  ADDRESS           #DD08268
         USING TCB,R15                                         #DD08268
         MVC   WRKJSTCB,TCBJSTCB   SAVE JOBSTEP TCB ADDRESS    #DD08268
         L     R14,TCBJSCB         LOAD JSCB ADDRESS           #DD08268
         USING IEZJSCB,R14                                     #DD08268
         L     R14,JSCBACT         LOAD ACTIVE JSCB ADDRESS    #DD08268
         L     R14,JSCBSSIB        LOAD SSIB ADDRESS           #DD08268
         USING SSIB,R14                                        #DD08268
         MVC   WRKTYPE,SSIBJBID    "J", "T" OR "S"             #DD08268
         MVC   WRKSSID,SSIBSSID    Save Subsystem Identifier   #DD10106
         DROP  R14,R15                                         #DD08268

*        SSIBJBID is unreliable when running under JES3.       #DD10106
         CLI   WRKSSID,SSIBJES2    Check For JES2 Subsystem    #DD10106
         BE    STEP0100            B. If Yes (JBID Is Reliable)#DD10106
         L     R14,PSAAOLD         A(ASCB)                     #DD10106
         USING ASCB,R14                                        #DD10106
         ICM   R14,15,ASCBOUCB     A(OUCB)                     #DD10106
         USING OUCB,R14                                        #DD10106
         MVI   WRKTYPE,C'S'                                    #DD10106
         TM    OUCBYFL,OUCBSTT+OUCBMNT Started Task Or Mount?  #DD10106
         BNZ   STEP0100            B. If Yes                   #DD10106
         MVI   WRKTYPE,C'T'                                    #DD10106
         TM    OUCBYFL,OUCBLOG     Check For Logon             #DD10106
         BO    STEP0100            B. If Yes                   #DD10106
         MVI   WRKTYPE,C'J'        Treat All Others As Jobs    #DD10106
         DROP  R14                                             #DD10106

STEP0100 DS    0H                                              #DD10106
         L     R2,CVTPTR           A(CVT)                      #DD10050
         USING CVTMAP,R2                                       #DD10050
         TM    CVTOSLV5,CVTZOS_V1R12                           #DD10050
         BZ    STEP0200            B. If Not z/OS R1.12 or >   #DD10050
         OI    WRKFLAG1,WRK$R112   Set z/OS R1.12 flag         #DD10050
         DROP  R2                                              #DD10050

*---------------------------------------------------------------------*
*                                                                     *
*        FIND THE NEXT "$TEP####" TO USE AS THE NEW STEPLIB DDNAME    *
*        NOTE: THIS DDNAME IS USED TO ALLOCATE THE DATASETS WITHIN    *
*              THE IKJPARS VALIDATION SUBROUTINE.                     *
*                                                                     *
*---------------------------------------------------------------------*

STEP0200 DS    0H                                              #DD10050
         MVC   WRKDDNEW,=CL8'$TEP0001'
STEP0300 DS    0H                                              #DD99245
         LA    R2,WRKDDNEW         A("NEW" FAKE STEPLIB DDNAME)#DD99245
         TIOTSCAN DDN=(R2),NOK=STEP0400  SCAN THE TIOT         #DD99245
         PACK  WRKDBL1,WRKDDNEW+4(4)                           #DD99245
         AP    WRKDBL1,=P'+1'      INCREMENT STEPLIB DD NUMBER #DD99245
         OI    WRKDBL1+7,X'0F'                                 #DD99245
         UNPK  WRKDDNEW+4(4),WRKDBL1                           #DD99245
         B     STEP0300                                        #DD99245

*---------------------------------------------------------------------*
*                                                                     *
*        CLOSE & RE-OPEN THE STEPLIB TO RETRIEVE THE DDNAME           *
*                                                                     *
*---------------------------------------------------------------------*

STEP0400 DS    0H                                              #DD99245
         L     R4,PSATOLD          A(TCB)                      #DD99245
         USING TCB,R4                                          #DD99245
         L     R5,TCBTCT           A(TCT)                      #DD99245
         USING SMFTCT,R5                                       #DD99245
         L     R6,TCTLCTAD         A(LCT)                      #DD99245
         ST    R6,WRKLCT@          SAVE LCT ADDRESS            #DD99245

         L     R5,TCBJSCB          A(JSCB)                     #DD01068
         USING IEZJSCB,R5                                      #DD01068
         L     R5,JSCBACT          A(ACTIVE JSCB)              #DD01068
         L     R5,JSCDSABQ         A(QDB)                      #DD01068
         USING QDB,R5                                          #DD01068
         MVC   WRKDSAB@,QDBFELMP   SAVE DSAB ADDRESS           #DD01068
         DROP  R4,R5                                           #DD01068

         LA    R0,CLOSEIRB         A(STEPLIB CLOSE ROUTINE)    #DD01068
         LA    R1,WRKDDOLD         A(OLD DDNAME RETURN ADDRESS)#DD01068
         BAL   R14,SENDIRB         PERFORM ASYNCHRONOUSLY      #DD01068

         LA    R0,OPENIRB          A(STEPLIB OPEN ROUTINE)     #DD01068
         LA    R1,WRKDDOLD         A(OLD STEPLIB DDNAME)       #DD01068
         BAL   R14,SENDIRB         PERFORM ASYNCHRONOUSLY      #DD01068

*---------------------------------------------------------------------*
*                                                                     *
*        PARSE THE STEPLIB COMMAND BUFFER                             *
*                                                                     *
*---------------------------------------------------------------------*

         LA    R1,WRKPPL           LOAD PPL ADDRESS
         USING PPL,R1
         MVC   PPLUPT,CPPLUPT      SET UPT ADDRESS
         MVC   PPLECT,CPPLECT      SET ECT ADDRESS
         LA    R15,WRKECB
         ST    R15,PPLECB          SET ECB ADDRESS
         XC    WRKECB,WRKECB
         MVC   PPLPCL,=A(STEPPCL)  SET PCL ADDRESS
         LA    R15,WRKANS@
         ST    R15,PPLANS          SET PDL ADDRESS
         MVC   PPLCBUF,CPPLCBUF    SET COMMAND BUFFER ADDRESS
         ST    R13,PPLUWA          PASS WRKDSECT TO VALIDATION EXIT
         DROP  R1,R8                                           #DD10106

         CALLTSSR EP=IKJPARS,MF=(E,WRKPPL)
         L     R8,WRKANS@          LOAD PDL ADDRESS
         USING IKJPARMD,R8
         #SETRC (R15)              SET RETURN CODE
         LTR   R15,R15             CHECK PARSE RETURN CODE
         BZ    STEP0500            B. IF SUCCESSFUL            #DD99245

*-------
*        FREE ANY ALLOCATED DATASETS IF THE PARSE ROUTINE FAILED
*-------
         TM    WRKFLAG1,WRK$1STD   CHECK IF 1ST DATASET ALLOCATED
         BZ    STEPEXIT            B. IF NOT                   #DD08350
         LA    R0,WRKDDNEW         A(STEPLIB DDNAME)
         ST    R0,WRKDDN@
         LA    R0,L'WRKDDNEW       L(STEPLIB DDNAME)
         STH   R0,WRKDDN@+4
         FREE  PERM,DDN=WRKDDN@    FREE THE "NEW" STEPLIB DATASETS
         B     STEPEXIT                                        #DD08350

*---------------------------------------------------------------------*
*                                                                     *
*        RE-ALLOCATE THE CURRENT STEPLIB IF THE OLD STEPLIB WAS       *
*        A "REAL" STEPLIB. (IE. //STEPLIB WITHIN THE LOGON PROC)      *
*                                                                     *
*---------------------------------------------------------------------*

STEP0500 DS    0H                                              #DD99245
         TM    WRKFLAG1,WRK$ABND   CHECK FOR "OPEN" ABEND      #DD08099
         BO    STEP6000            B. IF YES                   #DD08268

         CLI   $TEPFUNC+1,$VERSION CHECK FOR "VERSION" FUNC.   #DD08098
         BE    STEP5900            B. IF YES                   #DD08098

         CLI   $TEPFUNC+1,$FREE    CHECK FOR "FREE" FUNCTION   #DD99245
         BE    STEP1500            B. IF YES                   #DD99245
         CLI   $TEPFUNC+1,$LIST    CHECK FOR "LIST" FUNCTION   #DD99245
         BE    STEP2500            B. IF YES                   #DD05031

         MVC   WRKDDTMP,=CL8'$TEP0001'                         #DD99245
STEP0600 DS    0H                                              #DD99245
         LA    R2,WRKDDTMP         A("NEW" FAKE STEPLIB DDNAME)#DD99245
         TIOTSCAN DDN=(R2),NOK=STEP0700  SCAN THE TIOT         #DD99245
         PACK  WRKDBL1,WRKDDTMP+4(4)                           #DD99245
         AP    WRKDBL1,=P'+1'      INCREMENT STEPLIB NUMBER    #DD99245
         OI    WRKDBL1+7,X'0F'                                 #DD99245
         UNPK  WRKDDTMP+4(4),WRKDBL1                           #DD99245
         B     STEP0600                                        #DD99245

*-------
*        CLOSE THE PREVIOUSLY ALLOCATED "REAL" STEPLIB
*-------
STEP0700 DS    0H                                              #DD99245
         CLC   =C'JOBLIB ',WRKDDOLD CHECK FOR "REAL" JOBLIB DD #DD05026
         BE    STEP0800            B. IF YES                   #DD05026
         CLC   =C'STEP',WRKDDOLD   CHECK FOR "REAL" STEPLIB DD #DD01068
         BNE   STEP1500            B. IF NOT                   #DD01068
STEP0800 DS    0H                                              #DD05026
         LA    R0,CLOSEIRB         A(STEPLIB CLOSE ROUTINE)    #DD99245
         LA    R1,WRKDDOLD         A(OLD DDNAME RETURN ADDRESS)#DD99245
         BAL   R14,SENDIRB         PERFORM ASYNCHRONOUSLY      #DD99245

*-------
*        SCAN THE DSAB CHAIN FOR THE OLD STEPLIB DDNAME
*-------
         NI    WRKFLAG1,255-WRK$1STD                           #DD99245

         ICM   R5,15,WRKDSAB@      A(DSAB)                     #DD01068
         BZ    STEP1500            B. IF CHAIN DOES NOT EXIST  #DD99245
         USING DSABID,R5                                       #DD99245

STEP0900 DS    0H                                              #DD99245
         L     R4,DSABSIOT         A(SIOT)                     #DD99245
         USING INDMSIOT,R4                                     #DD99245
         CLC   SCTDDNAM,WRKDDOLD   CHECK PREV. STEPLIB DDNAME  #DD99245
         BE    STEP1000            B. IF FOUND                 #DD99245
         ICM   R5,15,DSABFCHN      A(NEXT DSAB)                #DD99245
         BNZ   STEP0900            B. IF ANOTHER DSAB EXISTS   #DD99245
         B     STEP1500            ELSE. UNABLE TO FIND DDNAME #DD99245

*-------
*        ALLOCATE THE 1ST DSNAME TO THE NEW STEPLIB DDNAME
*-------
STEP1000 DS    0H                                              #DD99245
         L     R1,SJFCBPTR         A(JFCB)                     #DD99245
         USING INFMJFCB,R1                                     #DD99245
         MVC   WRKDSN1,JFCBDSNM    SAVE THE CURRENT DSN        #DD99245
         DROP  R1                                              #DD99245
         LA    R0,WRKDSN1                                      #DD99245
         ST    R0,WRKDSN@          A(CURRENT STEPLIB DSNAME)   #DD99245
         LA    R0,L'WRKDSN1                                    #DD99245
         STH   R0,WRKDSN@+4        L(CURRENT STEPLIB DSNAME)   #DD99245

         TM    WRKFLAG1,WRK$1STD   CHECK IF 1ST DSN ALLOCATED  #DD99245
         BO    STEP1100            B. IF YES                   #DD99245
         OI    WRKFLAG1,WRK$1STD   REMEMBER 1ST DSN ALLOCATED  #DD99245
         LA    R0,WRKDDTMP                                     #DD99245
         ST    R0,WRKDDN@          A(CURRENT STEPLIB DDNAME)   #DD99245
         LA    R0,L'WRKDDTMP                                   #DD99245
         STH   R0,WRKDDN@+4        L(CURRENT STEPLIB DDNAME)   #DD99245
         ALLOC PERM,DSN=WRKDSN@,DISP=SHR,                      #DD99245*
               DDN=WRKDDN@,FLAG1=S99NOCNV+S99NOMNT             #DD99245
         LTR   R15,R15             CHECK ALLOCATION RETURN CODE#DD99245
         BZ    STEP1300            B. IF SUCCESSFUL            #DD99245
         B     STEP1200            ELSE. ISSUE ALLOC ERROR MSG #DD99245

*-------
*        CONCATENATE THE REMAINING DSNAMES TO THE NEW STEPLIB DDNAME
*-------
STEP1100 DS    0H                                              #DD99245
         ALLOC PERM,DSN=WRKDSN@,DISP=SHR,                      #DD99245*
               DDNTO=WRKDDRET,FLAG1=S99NOCNV+S99NOMNT          #DD99245
         LTR   R15,R15             CHECK ALLOCATION RETURN CODE#DD99245
         BNZ   STEP1200            B. IF ALLOCATION FAILED     #DD99245

         MVC   WRKCCTU1(4),=AL2(DCCDDNAM,2)                    #DD99245
         MVC   WRKCCDD1(2),=AL2(8) SET LENGTH OF DDNAME        #DD99245
         MVC   WRKCCDD2(2),=AL2(8) SET LENGTH OF DDNAME        #DD99245
         MVC   WRKCCTU2(4),=AL2(DCCPERMC,0)                    #DD99245
         MVC   WRKCCDD1+2(8),WRKDDTMP                          #DD99245
         MVC   WRKCCDD2+2(8),WRKDDRET                          #DD99245
         ALLOC VERB=S99VRBCC,TU=(WRKCCTU1,WRKCCTU2)            #DD99245
         LTR   R15,R15             CHECK CONCAT RETURN CODE    #DD99245
         BZ    STEP1300            B. IF CONCAT SUCCEEDED      #DD99245

*-------
*        PROCESS ALLOCATION/CONCATENATION ERRORS
*-------
STEP1200 DS    0H                                              #DD99245
         L     R2,WRKCPPL@         A(CPPL)                     #DD10106
         S99FAIL CP=YES,CPPL=(R2), ISSUE ALLOC FAILURE MESSAGE #DD10106*
               MF=(E,WRKFAIL)                                  #DD10106
         #SETRC 8                  INDICATE AN ERROR OCCURRED  #DD01073
         B     STEP6000                                        #DD08268

*-------
*        CHECK IF NEXT DSAB IS A CONCATENATION OF THE STEPLIB
*-------
STEP1300 DS    0H                                              #DD99245
         ICM   R5,15,DSABFCHN      A(NEXT DSAB)                #DD99245
         BZ    STEP1400            B. IF END OF DSAB CHAIN     #DD99245
         L     R4,DSABSIOT         A(SIOT)                     #DD99245
         CLC   SCTDDNAM,BLANKS     CHECK FOR CONCATENATION     #DD99245
         BE    STEP1000            B. IF YES                   #DD99245
         DROP  R4,R5                                           #DD99245

*-------
*        OPEN THE NEWLY ALLOCATED STEPLIB
*-------
STEP1400 DS    0H                                              #DD99245
         LA    R0,OPENIRB          A(STEPLIB OPEN ROUTINE)     #DD99245
         LA    R1,WRKDDTMP         A(NEW STEPLIB DDNAME)       #DD99245
         BAL   R14,SENDIRB         PERFORM ASYNCHRONOUSLY      #DD99245

*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS THE "STEPLIB ADD" FUNCTION                           *
*             OR THE "STEPLIB STACK" FUNCTION                         *
*                                                                     *
*---------------------------------------------------------------------*

STEP1500 DS    0H                                              #DD01073
         L     R15,=A(MSG008I6)                                #DD10177
         MVC   WRKFUNC,0(R15)                                  #DD10177
         CLI   $TEPFUNC+1,$STACK   CHECK FOR "STACK" FUNCTION  #DD01072
         BE    STEP1600            B. IF YES                   #DD01072
         CLI   $TEPFUNC+1,$ADD     CHECK FOR "ADD" FUNCTION
         BNE   STEP2100            B. IF NOT
         L     R15,=A(MSG008I1)                                #DD10177
         MVC   WRKFUNC,0(R15)                                  #DD10177
STEP1600 DS    0H                                              #DD01072
         CLI   $TEPDSNS+1,$DSNS    CHECK IF DATASET NAMES SPECIFIED
         BNE   STEPERR1            B. IF NOT
         TM    WRKFLAG1,WRK$1STD   CHECK IF ANY DSNS TO ADD    #DD01095
         BO    STEP1700            B. IF YES                   #DD01095
         CLI   $TEPMSGS+1,$NOMSGS  CHECK FOR "NOMSGS" OPTION   #DD01095
         BE    STEP5200            B. IF YES (DO "APFCHK")     #DD01095
         LA    R0,1                SET NUMBER OF SEGMENTS      #DD01095
         L     R1,=A(MSG010I)      'DATASET ALREADY IN STEPLIB'#DD10106
         SLR   R2,R2                                           #DD01095
         BAL   R14,ISSUEMSG        ISSUE MESSAGE               #DD01095
         B     STEP5200                                        #DD01095
STEP1700 DS    0H                                              #DD01095
         L     R4,PSATOLD          A(TCB)
         USING TCB,R4
         ICM   R2,15,TCBJLB        A(STEPLIB DCB)
         BZ    STEP2200            B. IF ONE DOES NOT EXIST (ALLOCATE)
         DROP  R4
         TM    WRKDDOLD,X'BF'      CHECK IF A STEPLIB EXISTS   #DD05031
         BZ    STEP2200            B. IF NOT                   #DD05031

*-------
*        CLOSE THE PREVIOUSLY ALLOCATED STEPLIB
*-------
         LA    R0,CLOSEIRB         A(STEPLIB CLOSE ROUTINE)
         LA    R1,WRKDDOLD         A(OLD DDNAME RETURN ADDRESS)
         BAL   R14,SENDIRB         PERFORM ASYNCHRONOUSLY
         LTR   R15,R15             CHECK IF CLOSE WAS SUCCESSFUL
         BNZ   STEP6000            B. IF NOT                   #DD08268

*-------
*        CONCATENATE THE NEW DATASET(S) WITH THE OLD STEPLIB DATASETS
*-------
         MVC   WRKCCTU1(4),=AL2(DCCDDNAM,2)
         MVC   WRKCCDD1(2),=AL2(8) SET LENGTH OF DDNAME
         MVC   WRKCCDD2(2),=AL2(8) SET LENGTH OF DDNAME
         MVC   WRKCCTU2(4),=AL2(DCCPERMC,0)
         MVC   WRKCCDD1+2(8),WRKDDNEW
         MVC   WRKCCDD2+2(8),WRKDDOLD
         CLI   $TEPOPTS+1,$FIRST   CHECK FOR "FIRST" OPTION
         BE    STEP1800            B. IF YES
         MVC   WRKCCDD1+2(8),WRKDDOLD
         MVC   WRKCCDD2+2(8),WRKDDNEW
STEP1800 DS    0H
         ALLOC VERB=S99VRBCC,TU=(WRKCCTU1,WRKCCTU2)
         LTR   R15,R15             CHECK CONCATENATION RETURN CODE
         BZ    STEP1900            B. IF CONCATENATION SUCCEEDED

*-------
*        IF CONCATENATION FAILS, ISSUE MESSAGE & REINSTATE OLD STEPLIB
*-------
         L     R2,WRKCPPL@         A(CPPL)                     #DD10106
         S99FAIL CP=YES,CPPL=(R2), ISSUE ALLOC FAILURE MESSAGE #DD10106*
               MF=(E,WRKFAIL)                                  #DD10106
         LA    R0,OPENIRB          A(STEPLIB OPEN ROUTINE)
         LA    R1,WRKDDOLD         A(OLD STEPLIB DDNAME)
         BAL   R14,SENDIRB         PERFORM ASYNCHRONOUSLY
         TM    WRKFLAG1,WRK$1STD   CHECK IF 1ST DATASET ALLOCATED
         BZ    STEP6000            B. IF NOT                   #DD08268
         LA    R0,WRKDDNEW         A(STEPLIB DDNAME)
         ST    R0,WRKDDN@
         LA    R0,L'WRKDDNEW       L(STEPLIB DDNAME)
         STH   R0,WRKDDN@+4
         FREE  PERM,DDN=WRKDDN@    FREE THE STEPLIB DDNAME
         #SETRC 8                  INDICATE AN ERROR OCCURRED  #DD01073
         B     STEP6000                                        #DD08268

*-------
*        RE-OPEN THE CONCATENATED STEPLIB
*-------
STEP1900 DS    0H
         CLI   $TEPOPTS+1,$FIRST   CHECK FOR "FIRST" OPTION
         BE    STEP2000            B. IF YES
         MVC   WRKDDNEW,WRKDDOLD   NEW STEPLIB DDNAME TO SAME AS BEFORE

STEP2000 DS    0H
         LA    R0,OPENIRB          A(STEPLIB OPEN ROUTINE)
         LA    R1,WRKDDNEW         A(NEW STEPLIB DDNAME)
         BAL   R14,SENDIRB         PERFORM ASYNCHRONOUSLY
         LTR   R15,R15             CHECK IF OPEN SUCCEEDED
         BNZ   STEPERR3            B. IF NOT                   #DD08099

         CLI   $TEPMSGS+1,$NOMSGS  CHECK FOR "NOMSGS" OPTION
         BE    STEP6000            B. IF YES                   #DD08268
         LA    R0,1                SET NUMBER OF SEGMENTS
         L     R1,=A(MSG001I)      'STEPLIB EXTENDED'          #DD10106
         SLR   R2,R2
         BAL   R14,ISSUEMSG        ISSUE MESSAGE
         B     STEP5200                                        #DD01073

*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS THE "STEPLIB ALLOCATE" FUNCTION                      *
*                                                                     *
*---------------------------------------------------------------------*

STEP2100 DS    0H
         L     R15,=A(MSG008I2)                                #DD10177
         MVC   WRKFUNC,0(R15)                                  #DD10177
         CLI   $TEPFUNC+1,$ALLOC   CHECK FOR "ALLOCATE" FUNCTION
         BNE   STEP2300            B. IF NOT
         CLI   $TEPDSNS+1,$DSNS    CHECK IF DATASET NAMES SPECIFIED
         BNE   STEPERR1            B. IF NOT
         L     R4,PSATOLD          A(TCB)
         USING TCB,R4
         ICM   R2,15,TCBJLB        A(STEPLIB DCB)
         BZ    STEP2200            B. IF ONE DOES NOT EXIST
         DROP  R4
         TM    WRKDDOLD,X'BF'      CHECK IF A STEPLIB EXISTS   #DD05031
         BZ    STEP2200            B. IF NOT                   #DD05031

*-------
*        CLOSE & FREE THE PREVIOUSLY ALLOCATED STEPLIB
*-------
         LA    R0,CLOSEIRB         A(STEPLIB CLOSE ROUTINE)
         LA    R1,WRKDDOLD         A(OLD DDNAME RETURN ADDRESS)
         BAL   R14,SENDIRB         PERFORM ASYNCHRONOUSLY
         LTR   R15,R15             CHECK IF CLOSE WAS SUCCESSFUL
         BNZ   STEP6000            B. IF NOT                   #DD08268
         LA    R0,WRKDDOLD         A(OLD STEPLIB DDNAME)
         ST    R0,WRKDDN@
         LA    R0,L'WRKDDOLD       L(OLD STEPLIB DDNAME)
         STH   R0,WRKDDN@+4
         CLC   =C'$TEP',WRKDDOLD   CHECK FOR "FAKE" STEPLIB DD #DD99244
         BNE   STEP2200            B. IF NOT                   #DD99244
         FREE  PERM,DDN=WRKDDN@    FREE THE OLD STEPLIB DDNAME

*-------
*        OPEN THE NEWLY ALLOCATED STEPLIB
*-------
STEP2200 DS    0H
         LA    R0,OPENIRB          A(STEPLIB OPEN ROUTINE)
         LA    R1,WRKDDNEW         A(NEW STEPLIB DDNAME)
         BAL   R14,SENDIRB         PERFORM ASYNCHRONOUSLY
         LTR   R15,R15             CHECK IF OPEN SUCCEEDED
         BNZ   STEPERR3            B. IF NOT                   #DD08099

         CLI   $TEPMSGS+1,$NOMSGS  CHECK FOR "NOMSGS" OPTION
         BE    STEP6000            B. IF YES                   #DD08268
         LA    R0,1                SET NUMBER OF SEGMENTS
         L     R1,=A(MSG002I)      'STEPLIB ALLOCATED'         #DD10106
         SLR   R2,R2
         BAL   R14,ISSUEMSG        ISSUE MESSAGE
         B     STEP5200                                        #DD01073

*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS THE "STEPLIB FREE" FUNCTION                          *
*                                                                     *
*---------------------------------------------------------------------*

STEP2300 DS    0H
         L     R15,=A(MSG008I3)                                #DD10177
         MVC   WRKFUNC,0(R15)                                  #DD10177
         CLI   $TEPFUNC+1,$FREE    CHECK FOR "FREE" FUNCTION
         BNE   STEP2500            B. IF NOT
         L     R4,PSATOLD          A(TCB)
         USING TCB,R4
         ICM   R2,15,TCBJLB        A(STEPLIB DCB)
         BZ    STEPERR2            B. IF ONE DOES NOT EXIST    #DD01072
         DROP  R4
         TM    WRKDDOLD,X'BF'      CHECK IF A STEPLIB EXISTS   #DD05031
         BZ    STEPERR2            B. IF NOT                   #DD05031

*-------
*        CLOSE & FREE THE PREVIOUSLY ALLOCATED STEPLIB
*-------
         LA    R0,CLOSEIRB         A(STEPLIB CLOSE ROUTINE)
         LA    R1,WRKDDOLD         A(OLD DDNAME RETURN ADDRESS)
         BAL   R14,SENDIRB         PERFORM ASYNCHRONOUSLY
         LTR   R15,R15             CHECK IF CLOSE WAS SUCCESSFUL
         BNZ   STEP6000            B. IF NOT                   #DD08268

         LA    R0,WRKDDOLD         A(OLD STEPLIB DDNAME)
         ST    R0,WRKDDN@
         LA    R0,L'WRKDDOLD       L(OLD STEPLIB DDNAME)
         STH   R0,WRKDDN@+4
         CLC   =C'$TEP',WRKDDOLD   CHECK FOR "FAKE" STEPLIB DD #DD99244
         BNE   STEP2400            B. IF NOT                   #DD99244
         FREE  PERM,DDN=WRKDDN@    FREE THE OLD STEPLIB DDNAME

STEP2400 DS    0H
         CLI   $TEPMSGS+1,$NOMSGS  CHECK FOR "NOMSGS" OPTION
         BE    STEP6000            B. IF YES                   #DD08268
         LA    R0,1                SET NUMBER OF SEGMENTS
         L     R1,=A(MSG003I)      'STEPLIB FREED'             #DD10106
         SLR   R2,R2
         BAL   R14,ISSUEMSG        ISSUE MESSAGE
         B     STEP5200                                        #DD01073

*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS THE "STEPLIB LIST" FUNCTION                          *
*                                                                     *
*---------------------------------------------------------------------*

STEP2500 DS    0H
         L     R15,=A(MSG008I4)                                #DD10177
         MVC   WRKFUNC,0(R15)                                  #DD10177
         CLI   $TEPFUNC+1,$LIST    CHECK FOR "LIST" FUNCTION
         BNE   STEP2900            B. IF NOT                   #DD10177

*-------
*        CHECK IF THERE IS CURRENTLY A STEPLIB
*-------
         L     R4,PSATOLD          A(TCB)
         USING TCB,R4
         ICM   R2,15,TCBJLB        A(STEPLIB DCB)
         BZ    STEPERR2            B. IF ONE DOES NOT EXIST    #DD01072
         DROP  R4
         TM    WRKDDOLD,X'BF'      CHECK IF A STEPLIB EXISTS   #DD05031
         BZ    STEPERR2            B. IF NOT                   #DD05031

*-------
*        SCAN THE DSAB CHAIN FOR THE START OF THE STEPLIB DD
*-------
         ICM   R5,15,WRKDSAB@      A(DSAB)                     #DD01068
         BZ    STEP6000            B. IF CHAIN DOES NOT EXIST  #DD08268
         USING DSABID,R5

STEP2600 DS    0H
         L     R4,DSABSIOT         A(SIOT)
         USING INDMSIOT,R4
         CLC   SCTDDNAM,WRKDDOLD   CHECK FOR THE STEPLIB DDNAME
         BE    STEP2700            B. IF FOUND
         ICM   R5,15,DSABFCHN      A(NEXT DSAB)
         BNZ   STEP2600            B. IF ANOTHER DSAB EXISTS
         B     STEP6000            ELSE. UNABLE TO FIND OLD DDN#DD08268

*-------
*        ONCE 1ST DSAB ENTRY FOUND DISPLAY ASSOCIATED DSNAMES
*-------
STEP2700 DS    0H
         MVC   WRKINSRT(4),=AL2(12,39)   LENGTH+4/OFFSET       #DD01095
         MVC   WRKINSRT+4(8),WRKDDOLD
         LA    R0,2                SET NUMBER OF SEGMENTS
         L     R1,=A(MSG006I)      '$TEPNNNN LIST:'            #DD10106
         LA    R2,WRKINSRT
         BAL   R14,ISSUEMSG        ISSUE MESSAGE

STEP2800 DS    0H
         L     R1,SJFCBPTR         A(JFCB)
         USING INFMJFCB,R1
         MVC   WRKINSRT(4),=AL2(48,11)   LENGTH+4/OFFSET       #DD01095
         MVC   WRKINSRT+4(44),JFCBDSNM
         DROP  R1
         LA    R0,2                SET NUMBER OF SEGMENTS
         L     R1,=A(MSG007I)      '- DSNAME'                  #DD10106
         LA    R2,WRKINSRT
         BAL   R14,ISSUEMSG        ISSUE MESSAGE

*-------
*        CONTINUE PROCESSING DSAB'S TILL NON STEPLIB DD FOUND
*-------
         ICM   R5,15,DSABFCHN      A(NEXT DSAB)
         BZ    STEP5200            B. IF END OF DSAB CHAIN     #DD01073
         L     R4,DSABSIOT         A(SIOT)
         CLC   SCTDDNAM,BLANKS     CHECK IF NEXT IS A CONCATENATION
         BE    STEP2800            B. IF YES
         DROP  R4,R5
         B     STEP5200            ELSE. END OF LIST           #DD01073

*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS THE "STEPLIB SAVE" FUNCTION                          *
*                                                                     *
*---------------------------------------------------------------------*

STEP2900 DS    0H                                              #DD10177
         CLI   $TEPFUNC+1,$SAVE    CHECK FOR "SAVE" FUNCTION   #DD10177
         BNE   STEP3800            B. IF NOT                   #DD10177

*-------
*        Create Blank &STEPLIB Variable
*-------
         MVC   CVARCODE,=A(TSVEUPDT)  "Update"                 #DD10177
         LA    R0,CVARCODE                                     #DD10177
         ST    R0,CVAREC@                                      #DD10177
         MVC   CVARN,=CL8'STEPLIB' Set Variable Name           #DD10177
         LA    R0,CVARN            A(Variable Name)            #DD10177
         ST    R0,CVARN@                                       #DD10177
         LA    R0,CVARN@                                       #DD10177
         ST    R0,CVARNPT@                                     #DD10177
         MVC   CVARL,=F'7'         Set Variable Name Length    #DD10177
         LA    R0,CVARL            A(Variable Name Length)     #DD10177
         ST    R0,CVARNLN@                                     #DD10177
         LA    R0,BLANKS           A(Variable Data)            #DD10177
         ST    R0,CVARD@                                       #DD10177
         LA    R0,CVARD@                                       #DD10177
         ST    R0,CVARDPT@                                     #DD10177
         XC    CVARDL,CVARDL                                   #DD10177
         LA    R0,CVARDL           A(Variable Data Length)     #DD10177
         ST    R0,CVARDLN@                                     #DD10177
         LA    R0,CVARTKN          A(Token)                    #DD10177
         ST    R0,CVARTKN@                                     #DD10177
         OI    CVARTKN@,X'80'      Set End Of List             #DD10177
         l     R15,CVTPTR          A(CVT)                      #DD10177
         USING CVTMAP,R15                                      #DD10177
         L     R15,CVTTVT          A(TVT)                      #DD10177
         USING TSVT,R15                                        #DD10177
         L     R15,TSVTVACC        A(IKJCT441)                 #DD10177
         DROP  R15                                             #DD10177
         LA    R1,CVARPARM         A(IKJCT441 Parameter List)  #DD10177
         BALR  R14,R15             Call IKJCT441               #DD10177

*-------
*        Count The Number Of STEPLIB Data Sets
*-------
         L     R4,PSATOLD          A(TCB)                      #DD10177
         USING TCB,R4                                          #DD10177
         ICM   R2,15,TCBJLB        A(STEPLIB DCB)              #DD10177
         BZ    STEPERR2            B. IF ONE DOES NOT EXIST    #DD10177
         DROP  R4                                              #DD10177
         TM    WRKDDOLD,X'BF'      CHECK IF A STEPLIB EXISTS   #DD10177
         BZ    STEPERR2            B. IF NOT                   #DD10177

         ICM   R5,15,WRKDSAB@      A(DSAB)                     #DD10177
         BZ    STEPERR2            B. IF CHAIN DOES NOT EXIST  #DD10177
         USING DSABID,R5                                       #DD10177

         SLR   R6,R6               Initialize STEPLIB Counter  #DD10177
STEP3000 DS    0H                                              #DD10177
         L     R4,DSABSIOT         A(SIOT)                     #DD10177
         USING INDMSIOT,R4                                     #DD10177
         ST    R4,WRKSTEP@         Save SIOT Address           #DD10177
         CLC   SCTDDNAM,WRKDDOLD   CHECK FOR THE STEPLIB       #DD10177
         BE    STEP3100            B. IF FOUND                 #DD10177
         ICM   R5,15,DSABFCHN      A(NEXT DSAB)                #DD10177
         BNZ   STEP3000            B. IF ANOTHER DSAB EXISTS   #DD10177
         B     STEPERR2            ELSE. UNABLE TO FIND STEPLIB#DD10177

STEP3100 DS    0H                                              #DD10177
         AHI   R6,1                Increment DataSet Counter   #DD10177

         ICM   R5,15,DSABFCHN      A(NEXT DSAB)                #DD10177
         BZ    STEP3200            B. IF END OF DSAB CHAIN     #DD10177
         L     R4,DSABSIOT         A(SIOT)                     #DD10177
         CLC   SCTDDNAM,BLANKS     CHECK IF NEXT IS A CONCATENATION 177
         BE    STEP3100            B. IF YES                   #DD10177
         DROP  R4,R5                                           #DD10177

*-------
*        Allocate Storage For &STEPLIB Variable
*-------
STEP3200 DS    0H                                              #DD10177
         MHI   R6,47               Calculate Space Required    #DD10177
         ST    R6,WRKVARL          Save Length Of Buffer       #DD10177
         GETMAIN RU,LV=(R6),LOC=BELOW                          #DD10177
         ST    R1,WRKVAR@          Save Buffer Address         #DD10177
         ST    R1,WRKVARC@                                     #DD10177
         #BLANK (R1),LEN=(R6)      Blank The Entire Buffer     #DD10177

*-------
*        Save The STEPLIB DataSet Names
*-------
         L     R5,WRKVAR@          A(Beginning Of Buffer)      #DD10177

         L     R4,WRKSTEP@         A(1st STEPLIB SIOT)         #DD10177
         USING INDMSIOT,R4                                     #DD10177
STEP3300 DS    0H                                              #DD10177
         L     R1,SJFCBPTR         A(JFCB)                     #DD10177
         USING INFMJFCB,R1                                     #DD10177
         MVI   WRKINSRT,C''''      Insert Leading Quote        #DD10177
         MVC   WRKINSRT+1(44),JFCBDSNM                         #DD10177
         DROP  R1                                              #DD10177
         MVC   0(45,R5),WRKINSRT   Save Current DataSet Name   #DD10177
         AHI   R5,44               A(Last Possible Position)   #DD10177
STEP3400 DS    0H                                              #DD10177
         CLI   0(R5),C' '          Check For End Of Dsname     #DD10177
         BNE   STEP3500            B. If End Found             #DD10177
         BCT   R5,STEP3400         Back Up & Keep Checking     #DD10177

STEP3500 DS    0H                                              #DD10177
         MVI   1(R5),C''''         Insert Trailing Quote       #DD10177
         AHI   R5,3                Point Past Inserted Dsname  #DD10177

STEP3600 DS    0H                                              #DD10177
         ICM   R4,15,SIOTNPTR      A(Next SIOT)                #DD10177
         BZ    STEP3700            B. If No More SIOTs         #DD10177
         CLC   SCTDDNAM,BLANKS     Check If Another STEPLIB    #DD10177
         BE    STEP3300            B. If Yes                   #DD10177
         DROP  R4                                              #DD10177

STEP3700 DS    0H                                              #DD10177
         SL    R5,WRKVAR@          Calculate Total Length      #DD10177

         MVC   CVARD@,WRKVAR@      A(Variable Data)            #DD10177
         ST    R5,CVARDL           Save Variable Length        #DD10177

         l     R15,CVTPTR          A(CVT)                      #DD10177
         USING CVTMAP,R15                                      #DD10177
         L     R15,CVTTVT          A(TVT)                      #DD10177
         USING TSVT,R15                                        #DD10177
         L     R15,TSVTVACC        A(IKJCT441)                 #DD10177
         DROP  R15                                             #DD10177
         LA    R1,CVARPARM         A(IKJCT441 Parameter List)  #DD10177
         BALR  R14,R15             Call IKJCT441               #DD10177

*-------
*        Release Storage Used For &STEPLIB Variable
*-------
         L     R5,WRKVAR@                                      #DD10177
         L     R6,WRKVARL                                      #DD10177
         FREEMAIN RU,A=(R5),LV=(R6)                            #DD10177

*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS THE "STEPLIB REMOVE" FUNCTION                        *
*             OR THE "STEPLIB DESTACK" FUNCTION                       *
*                                                                     *
*---------------------------------------------------------------------*

STEP3800 DS    0H
         L     R15,=A(MSG008I7)                                #DD10177
         MVC   WRKFUNC,0(R15)                                  #DD10177
         CLI   $TEPFUNC+1,$DESTACK CHECK FOR "DESTACK" FUNCTION#DD01072
         BE    STEP3900            B. IF YES                   #DD01072
         CLI   $TEPFUNC+1,$REMOVE  CHECK FOR "REMOVE" FUNCTION
         BNE   STEP5200            B. IF NOT                   #DD01073
         L     R15,=A(MSG008I5)                                #DD10177
         MVC   WRKFUNC,0(R15)                                  #DD10177
STEP3900 DS    0H                                              #DD01072
         CLI   $TEPDSNS+1,$DSNS    CHECK IF DATASET NAMES SPECIFIED
         BNE   STEPERR1            B. IF NOT

*-------
*        CHECK IF THERE IS CURRENTLY A STEPLIB
*-------
         L     R4,PSATOLD          A(TCB)
         USING TCB,R4
         ICM   R2,15,TCBJLB        A(STEPLIB DCB)
         BZ    STEPERR2            B. IF ONE DOES NOT EXIST    #DD01072
         DROP  R4
         TM    WRKDDOLD,X'BF'      CHECK IF A STEPLIB EXISTS   #DD05031
         BZ    STEPERR2            B. IF NOT                   #DD05031

*-------
*        CLOSE THE PREVIOUSLY ALLOCATED STEPLIB
*-------
         LA    R0,CLOSEIRB         A(STEPLIB CLOSE ROUTINE)
         LA    R1,WRKDDOLD         A(OLD DDNAME RETURN ADDRESS)
         BAL   R14,SENDIRB         PERFORM ASYNCHRONOUSLY
         LTR   R15,R15             CHECK IF CLOSE WAS SUCCESSFUL
         BNZ   STEP6000            B. IF NOT                   #DD08268

*-------
*        SCAN THE DSAB CHAIN FOR THE OLD STEPLIB DDNAME
*-------
         NI    WRKFLAG1,255-WRK$1STD

         ICM   R5,15,WRKDSAB@      A(DSAB)                     #DD01068
         BZ    STEP6000            B. IF CHAIN DOES NOT EXIST  #DD08268
         USING DSABID,R5

STEP4000 DS    0H
         L     R4,DSABSIOT         A(SIOT)
         USING INDMSIOT,R4
         CLC   SCTDDNAM,WRKDDOLD   CHECK FOR PREVIOUS STEPLIB DDNAME
         BE    STEP4100            B. IF FOUND
         ICM   R5,15,DSABFCHN      A(NEXT DSAB)
         BNZ   STEP4000            B. IF ANOTHER DSAB EXISTS
         B     STEP5200            ELSE. CAN'T FIND STEPLIB    #DD01073

*-------
*        SCAN THE USER SPECIFIED LIST FOR A MATCHING STEPLIB DSNAME
*-------
STEP4100 DS    0H
         L     R1,SJFCBPTR         A(JFCB)
         USING INFMJFCB,R1
         MVC   WRKDSN1,JFCBDSNM    SAVE THE CURRENT DATASET NAME
         DROP  R1

         LA    R3,$TEPLIST         A(1ST USER SPECIFIED DSNAME)
STEP4200 DS    0H
         L     R2,0(,R3)           A(SPECIFIED DSNAME)
         LH    R1,4(,R3)           L(SPECIFIED DSNAME)
         MVC   WRKDSN2,BLANKS      CLEAR DSNAME AREA           #DD99244
         #EXEC -R1,MVC,WRKDSN2(*-*),0(R2)                      #DD99244
STEP4300 DS    0H                                              #DD01072
         MVC   WRKLOCAT(MODLLOCL),MODLLOC                      #DD99244
         LA    R0,WRKDSN2                                      #DD99244
         ST    R0,WRKLOCAT+4       SAVE DSNAME ADDRESS         #DD99244
         LA    R0,WRKAREA                                      #DD99244
         ST    R0,WRKLOCAT+12      SAVE WORK AREA ADDRESS      #DD99244
         LOCATE WRKLOCAT           CONVERT ALIAS TO REAL NAME  #DD99244
         CLC   WRKDSN1,WRKDSN2     COMPARE DSNAMES             #DD99244
         BNE   STEP4400            B. IF MATCH NOT FOUND       #DD01250
         CLI   $TEPFUNC+1,$DESTACK CHECK FOR "DESTACK" FUNCTION#DD01250
         BNE   STEP4800            B. IF NOT                   #DD01250
         MVI   0(R2),X'FF'         DESTROY DSNAME SO THAT ONLY #DD01250
*                                  1ST OCCURANCE IS REMOVED.   #DD01250
         B     STEP4800                                        #DD01250
STEP4400 DS    0H                                              #DD01250
         CLI   24(R3),X'FF'        CHECK FOR END OF LIST
         BE    STEP4500            B. IF YES
         L     R3,24(,R3)          A(NEXT DSNAME PDE)
         B     STEP4200            SCAN TILL END OF LIST

*-------
*        ALLOCATE THE DSNAME TO THE NEW STEPLIB DDNAME
*-------
STEP4500 DS    0H
         LA    R0,WRKDSN1
         ST    R0,WRKDSN@          A(CURRENT STEPLIB DSNAME)
         LA    R0,L'WRKDSN1
         STH   R0,WRKDSN@+4        L(CURRENT STEPLIB DSNAME)

         TM    WRKFLAG1,WRK$1STD   CHECK IF 1ST DATASET ALLOCATED
         BO    STEP4600            B. IF YES
         OI    WRKFLAG1,WRK$1STD   REMEMBER 1ST DATASET WAS ALLOCATED
         LA    R0,WRKDDNEW
         ST    R0,WRKDDN@          A(CURRENT STEPLIB DDNAME)
         LA    R0,L'WRKDDNEW
         STH   R0,WRKDDN@+4        L(CURRENT STEPLIB DDNAME)
         ALLOC PERM,DSN=WRKDSN@,DISP=SHR,                              *
               DDN=WRKDDN@,FLAG1=S99NOCNV+S99NOMNT
         LTR   R15,R15             CHECK ALLOCATION RETURN CODE
         BZ    STEP4800            B. IF SUCCESSFUL
         B     STEP4700            ELSE. ISSUE ALLOCATION ERROR MSG

*-------
*        CONCATENATE THE DSNAME TO THE NEW STEPLIB DDNAME
*-------
STEP4600 DS    0H
         ALLOC PERM,DSN=WRKDSN@,DISP=SHR,                              *
               DDNTO=WRKDDRET,FLAG1=S99NOCNV+S99NOMNT
         LTR   R15,R15             CHECK ALLOCATION RETURN CODE
         BNZ   STEP4700            B. IF ALLOCATION FAILED

         MVC   WRKCCTU1(4),=AL2(DCCDDNAM,2)
         MVC   WRKCCDD1(2),=AL2(8) SET LENGTH OF DDNAME
         MVC   WRKCCDD2(2),=AL2(8) SET LENGTH OF DDNAME
         MVC   WRKCCTU2(4),=AL2(DCCPERMC,0)
         MVC   WRKCCDD1+2(8),WRKDDNEW
         MVC   WRKCCDD2+2(8),WRKDDRET
         ALLOC VERB=S99VRBCC,TU=(WRKCCTU1,WRKCCTU2)
         LTR   R15,R15             CHECK CONCATENATION RETURN CODE
         BZ    STEP4800            B. IF CONCATENATION SUCCEEDED

*-------
*        PROCESS ALLOCATION/CONCATENATION ERRORS
*-------
STEP4700 DS    0H
         L     R2,WRKCPPL@         A(CPPL)                     #DD10106
         S99FAIL CP=YES,CPPL=(R2), ISSUE ALLOC FAILURE MESSAGE #DD10106*
               MF=(E,WRKFAIL)                                  #DD10106
         #SETRC 8                  INDICATE AN ERROR OCCURRED  #DD01073
         B     STEP6000                                        #DD08268

*-------
*        CHECK IF NEXT DSAB IS A CONCATENATION OF THE STEPLIB
*-------
STEP4800 DS    0H
         ICM   R5,15,DSABFCHN      A(NEXT DSAB)
         BZ    STEP4900            B. IF END OF DSAB CHAIN     #DD99244
         L     R4,DSABSIOT         A(SIOT)
         CLC   SCTDDNAM,BLANKS     CHECK IF NEXT IS A CONCATENATION
         BE    STEP4100            B. IF YES
         DROP  R4,R5

*-------
*        OPEN THE NEWLY ALLOCATED STEPLIB
*-------
STEP4900 DS    0H                                              #DD99244
         LA    R0,WRKDDOLD         A(OLD STEPLIB DDNAME)
         ST    R0,WRKDDN@
         LA    R0,L'WRKDDOLD       L(OLD STEPLIB DDNAME)
         STH   R0,WRKDDN@+4
         CLC   =C'$TEP',WRKDDOLD   CHECK FOR "FAKE" STEPLIB DD #DD99244
         BNE   STEP5000            B. IF NOT                   #DD99244
         FREE  PERM,DDN=WRKDDN@    FREE THE OLD STEPLIB DDNAME

STEP5000 DS    0H                                              #DD99244
         TM    WRKFLAG1,WRK$1STD   CHECK IF ALL DATASETS REMOVED
         BZ    STEP5100            B. IF YES

         LA    R0,OPENIRB          A(STEPLIB OPEN ROUTINE)
         LA    R1,WRKDDNEW         A(NEW STEPLIB DDNAME)
         BAL   R14,SENDIRB         PERFORM ASYNCHRONOUSLY
         LTR   R15,R15             CHECK IF OPEN SUCCEEDED
         BNZ   STEPERR3            B. IF NOT                   #DD08099

         CLI   $TEPMSGS+1,$NOMSGS  CHECK FOR "NOMSGS" OPTION
         BE    STEP6000            B. IF YES                   #DD08268
         LA    R0,1                SET NUMBER OF SEGMENTS
         L     R1,=A(MSG004I)      'STEPLIB SHRUNK'            #DD10106
         SLR   R2,R2
         BAL   R14,ISSUEMSG        ISSUE MESSAGE
         B     STEP5200                                        #DD01073

*-------
*        INDICATE THAT ALL DATASETS WERE REMOVED FROM THE STEPLIB
*-------
STEP5100 DS    0H
         CLI   $TEPMSGS+1,$NOMSGS  CHECK FOR "NOMSGS" OPTION
         BE    STEP6000            B. IF YES                   #DD08268
         LA    R0,1                SET NUMBER OF SEGMENTS
         L     R1,=A(MSG003I)      'STEPLIB DEACTIVATED'       #DD10106
         SLR   R2,R2
         BAL   R14,ISSUEMSG        ISSUE MESSAGE
         B     STEP6000                                        #DD08268

*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS THE "APFCHK" KEYWORD                                 *
*                                                                     *
*---------------------------------------------------------------------*

STEP5200 DS    0H                                              #DD01073
         CLI   $TEPAPF+1,$APFCHK   CHECK FOR "APFCHK" KEYWORD  #DD01073
         BNE   STEP6000            B. IF NOT                   #DD08268

         LA    R0,CLOSEIRB         A(STEPLIB CLOSE ROUTINE)    #DD01073
         LA    R1,WRKDDOLD         A(OLD DDNAME RETURN ADDRESS)#DD01073
         BAL   R14,SENDIRB         PERFORM ASYNCHRONOUSLY      #DD01073

         LA    R0,OPENIRB          A(STEPLIB OPEN ROUTINE)     #DD01073
         LA    R1,WRKDDOLD         A(OLD STEPLIB DDNAME)       #DD01073
         BAL   R14,SENDIRB         PERFORM ASYNCHRONOUSLY      #DD01073

         TM    WRKDDOLD,X'BF'      CHECK IF A STEPLIB EXISTS   #DD01073
         BZ    STEP6000            B. IF NOT                   #DD08268
         L     R4,PSATOLD          A(TCB)                      #DD01073
         USING TCB,R4                                          #DD01073
         ICM   R2,15,TCBJLB        A(STEPLIB DCB)              #DD01073
         BZ    STEP6000            B. IF ONE DOES NOT EXIST    #DD08268
         DROP  R4                                              #DD01073

         ICM   R5,15,WRKDSAB@      A(DSAB)                     #DD01073
         BZ    STEP6000            B. IF CHAIN DOES NOT EXIST  #DD08268
         USING DSABID,R5                                       #DD01073

STEP5300 DS    0H                                              #DD01073
         L     R4,DSABSIOT         A(SIOT)                     #DD01073
         USING INDMSIOT,R4                                     #DD01073
         CLC   SCTDDNAM,WRKDDOLD   CHECK FOR THE STEPLIB DDNAME#DD01073
         BE    STEP5400            B. IF FOUND                 #DD01073
         ICM   R5,15,DSABFCHN      A(NEXT DSAB)                #DD01073
         BNZ   STEP5300            B. IF ANOTHER DSAB EXISTS   #DD01073
         B     STEP6000            ELSE. CAN'T FIND STEPLIB    #DD08268
STEP5400 DS    0H                                              #DD01073
         L     R1,SJFCBPTR         A(JFCB)                     #DD01073
         USING INFMJFCB,R1                                     #DD01073
         MVC   WRKDSN2,JFCBDSNM                                #DD01073
         DROP  R1                                              #DD01073
         MVC   WRKLOCAT(MODLLOCL),MODLLOC                      #DD01073
         LA    R0,WRKDSN2                                      #DD01073
         ST    R0,WRKLOCAT+4       SAVE DSNAME ADDRESS         #DD01073
         LA    R0,WRKAREA                                      #DD01073
         ST    R0,WRKLOCAT+12      SAVE WORK AREA ADDRESS      #DD01073
         LOCATE WRKLOCAT           CONVERT ALIAS TO REAL NAME  #DD01073
         MVC   WRKVOL,WRKAREA+6    SAVE VOLUME SERIAL          #DD01073

         CSVAPF REQUEST=QUERY,     CHECK IF IN APF LIST        #DD01073*
               DSNAME=WRKDSN2,                                 #DD01073*
               VOLTYPE=ANY,VOLUME=WRKVOL,                      #DD01073*
               RETCODE=WRKCSVRC,RSNCODE=WRKCSVRS,              #DD01073*
               MF=(E,WRKCSVPL)                                 #DD01073
         ICM   R1,15,WRKCSVRC      CHECK IF "IN APFLIST"       #DD01073
         BZ    STEP5800            B. IF YES                   #DD01073
         CHI   R1,4                CHECK FOR RETURN CODE 4     #DD08112
         BNE   STEP5500            B. IF NOT                   #DD08112
         CLC   =X'0401',WRKCSVRS+2 CHECK FOR SMS APF LIBRARY   #DD08112
         BE    STEP5800            B. IF YES                   #DD08112

STEP5500 DS    0H                                              #DD08112
         #SETRC 12                 INDICATE AN ERROR OCCURRED  #DD01073
         CLI   $TEPMSGS+1,$NOMSGS  CHECK FOR "NOMSGS" OPTION   #DD01073
         BE    STEP5800            B. IF YES                   #DD01073
         MVC   WRKINSRT(4),=AL2(48,9)    LENGTH+4/OFFSET       #DD01095
         MVC   WRKINSRT+4(L'WRKDSN2),WRKDSN2                   #DD01073
         LA    R1,WRKINSRT+4+L'WRKDSN2-1                       #DD01073
STEP5600 DS    0H                                              #DD01073
         TM    0(R1),X'BF'         CHECK FOR END OF DSNAME     #DD01073
         BNZ   STEP5700            B. IF FOUND                 #DD01073
         BCT   R1,STEP5600         KEEP LOOPING BACKWARDS      #DD01073
STEP5700 DS    0H                                              #DD01073
         LA    R1,1(,R1)           A(END OF INSERT BUFFER)     #DD01073
         LA    R2,WRKINSRT         A(START OF INSERT BUFFER)   #DD01073
         SR    R1,R2               CALCULATE INSERT LENGTH     #DD01073
         STCM  R1,3,WRKINSRT       SET INSERT LENGTH           #DD01073

         LA    R0,2                SET NUMBER OF SEGMENTS      #DD01073
         L     R1,=A(MSG009I)      'DSNAME IS NOT IN APF LIST' #DD10106
         LA    R2,WRKINSRT                                     #DD01073
         BAL   R14,ISSUEMSG        ISSUE MESSAGE               #DD01073

STEP5800 DS    0H                                              #DD01073
         ICM   R5,15,DSABFCHN      A(NEXT DSAB)                #DD01073
         BZ    STEP6000            B. IF END OF DSAB CHAIN     #DD08268
         L     R4,DSABSIOT         A(SIOT)                     #DD01073
         CLC   SCTDDNAM,BLANKS     CHECK FOR CONCATENATION     #DD01073
         BE    STEP5400            B. IF YES                   #DD01073
         B     STEP6000            ELSE. ALL DONE CHECKING     #DD08268
         DROP  R5                                              #DD09103

*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS THE "VERSION" KEYWORD                                *
*                                                                     *
*---------------------------------------------------------------------*

STEP5900 DS    0H                                              #DD08098
         L     R15,=A(MSG011I)                                 #DD10106
         MVC   WRKMSG(MSG011IL),0(R15)                         #DD10106
         MVC   MSG011I1+WRKMSG,STEPLIB+32                      #DD08098
         MVC   MSG011I2+WRKMSG,STEPLIB+36                      #DD08098
         MVC   WRKINSRT(4),=AL2(14,46)   LENGTH+4/OFFSET       #DD08098
         MVC   WRKINSRT+4(10),=C'CCYY/MM/DD'                   #DD08098
         MVC   WRKINSRT+4(4),STEPLIB+21                        #DD08098
         MVC   WRKINSRT+9(2),STEPLIB+25                        #DD08098
         MVC   WRKINSRT+12(2),STEPLIB+27                       #DD08098

         LA    R0,2                SET NUMBER OF SEGMENTS      #DD08098
         LA    R1,WRKMSG           '$TEP011I VERSION:'         #DD08098
         LA    R2,WRKINSRT         ASSEMBLY DATE & TIME        #DD08098
         BAL   R14,ISSUEMSG        ISSUE MESSAGE               #DD08098

*---------------------------------------------------------------------*
*                                                                     *
*        PRODUCE A TCB/RB STRUCTURE LIST FOR DEBUGGING                *
*                                                                     *
*---------------------------------------------------------------------*

STEP6000 DS    0H                                              #DD08268
         CLI   $TEPMSGS+1,$DEBUG   CHECK FOR "DEBUG" OPTION    #DD08268
         BNE   STEPEXIT            B. IF NOT                   #DD08268

         L     R4,PSATOLD          A(CURRENT TCB)              #DD08268
         USING TCB,R4                                          #DD08268
         MVC   WRKJSTCB,TCBJSTCB   SAVE JOBSTEP TCB ADDRESS    #DD08268

         L     R4,PSAAOLD          A(ASCB)                     #DD08268
         USING ASCB,R4                                         #DD08268
         L     R4,ASCBASXB         A(ASXB)                     #DD08268
         USING ASXB,R4                                         #DD08268
         L     R4,ASXBFTCB         A(REGION CONTROL TASK TCB)  #DD08268
         USING TCB,R4                                          #DD08268

         L     R15,=A(TRC001I)                                 #DD10050
         MVC   WRKMSG(TRC001IL),0(R15)                         #DD10050
         LA    R0,1                SET NUMBER OF SEGMENTS      #DD08268
         LA    R1,WRKMSG           '$TEP009I TCB DATA'         #DD08268
         SLR   R2,R2                                           #DD08268
         BAL   R14,ISSUEMSG        ISSUE MESSAGE               #DD08268

STEP6100 DS    0H                                              #DD08268
         L     R15,=A(TRC001B)                                 #DD10050
         MVC   WRKMSG(TRC001BL),0(R15)                         #DD10050
         CL    R4,WRKJSTCB         IS THIS THE JOBSTEP TCB ?   #DD08268
         BNE   STEP6200            B. IF NOT                   #DD08268
         MVC   TRC001B1+WRKMSG,=C'(JSTCB)'                     #DD08268

STEP6200 DS    0H                                              #DD08268
         ST    R4,WRKHEXIN         INPUT WORD                  #DD08268
         BAL   R14,FULLCHAR        CONVERT TO CHARACTER        #DD08268
         MVC   TRC001B2+WRKMSG,WRKHEXOU                        #DD08268
         CL    R4,PSATOLD          CHECK FOR CURRENT TCB       #DD08268
         BNE   STEP6300            B. IF NOT                   #DD08268
         MVI   TRC001B3+WRKMSG,C'*'                            #DD08268

STEP6300 DS    0H                                              #DD08268
         MVC   TRC001B4+WRKMSG,=C'UNKNOWN'                     #DD08268
         ICM   R6,15,TCBRBP        A(TOP RB)                   #DD08268
         BZ    STEP6700            B. IF NONE                  #DD08268
         USING RBSECT,R6                                       #DD08268
STEP6400 DS    0H                                              #DD08268
         CLI   RBSTAB1,RBFTPRB     CHECK FOR PRB               #DD08268
         BE    STEP6500            B. IF YES                   #DD08268
         ICM   R6,7,RBLINKB        A(NEXT RB)                  #DD08268
         BNZ   STEP6400            B. IF ANOTHER EXISTS        #DD08268
         B     STEP6700            ELSE. SKIP IT               #DD08268

STEP6500 DS    0H                                              #DD08268
         SLR   R1,R1                                           #JR14048
         ICM   R1,7,RBCDE1         A(CDE/LPDE)                 #JR14048
         BZ    STEP6600            B. IF NONE                  #DD08268
         USING CDENTRY,R1                                      #DD08268
         MVC   TRC001B4+WRKMSG,CDNAME                          #DD08268
         DROP  R1                                              #DD08268

STEP6600 DS    0H                                              #DD08268
         MVC   TRC001B5+WRKMSG,BLANKS                          #DD08268
         ICM   R1,15,TCBJLB        A(JOBLIB/STEPLIB)           #DD08268
         BZ    STEP6700            B. IF NONE                  #DD08268
         MVC   TRC001B5+WRKMSG,=C'-LNKLST-'                    #DD08268
         L     R2,CVTPTR           A(CVT)                      #DD08268
         USING CVTMAP,R2                                       #DD08268
         CL    R1,CVTLINK          CHECK FOR LINKLIST          #DD08268
         BE    STEP6700            B. IF NOT                   #DD08268
         DROP  R2                                              #DD08268
         LH    R1,DCBTIOT-IHADCB(,R1)                          #DD08268
         A     R1,TCBTIO           A(TIOT ENTRY)               #DD08268
         MVC   TRC001B5+WRKMSG,4(R1)                           #DD08268

STEP6700 DS    0H                                              #DD08268
         MVC   WRKHEXIN,TCBJLB     INPUT WORD                  #DD08268
         BAL   R14,FULLCHAR        CONVERT TO CHARACTER        #DD08268
         MVC   TRC001B6+WRKMSG,WRKHEXOU                        #DD08268

         LA    R0,1                SET NUMBER OF SEGMENTS      #DD08268
         LA    R1,WRKMSG           '$TEP009I TCB DATA'         #DD08268
         SLR   R2,R2                                           #DD08268
         BAL   R14,ISSUEMSG        ISSUE MESSAGE               #DD08268

         LR    R1,R4               A(CURRENT TCB)              #DD08268
         ICM   R4,15,TCBLTC        A(DAUGHTER TCB)             #DD08268
         BNZ   STEP6100                                        #DD08268
         ICM   R4,15,TCBNTC-TCB(R1)                            #DD08268
         BNZ   STEP6100            A(SISTER TCB)               #DD08268
         DROP  R4,R6                                           #DD08268

         B     STEPEXIT                                        #DD08268

*---------------------------------------------------------------------*
*                                                                     *
*        PROCESS ANY ERRORS                                           *
*                                                                     *
*---------------------------------------------------------------------*

STEPERR1 DS    0H
         #SETRC 8                  INDICATE AN ERROR OCCURRED  #DD01073
         CLI   $TEPMSGS+1,$NOMSGS  CHECK FOR "NOMSGS" OPTION   #DD01073
         BE    STEP6000            B. IF YES                   #DD08268
         LA    R0,1                SET NUMBER OF SEGMENTS
         L     R1,=A(MSG005I)      'MISSING STEPLIB DSNAMES'   #DD10106
         SLR   R2,R2
         BAL   R14,ISSUEMSG        ISSUE MESSAGE
         B     STEP6000                                        #DD08268

STEPERR2 DS    0H                                              #DD01072
         #SETRC 8                  INDICATE AN ERROR OCCURRED  #DD01073
         CLI   $TEPMSGS+1,$NOMSGS  CHECK FOR "NOMSGS" OPTION   #DD01073
         BE    STEP6000            B. IF YES                   #DD08268
         LA    R0,2                SET NUMBER OF SEGMENTS      #DD01072
         L     R1,=A(MSG008I)      'STEPLIB NOT ALLOCATED'     #DD10106
         LA    R2,WRKFUNC                                      #DD01072
         BAL   R14,ISSUEMSG        ISSUE MESSAGE               #DD01072
         B     STEP6000                                        #DD08268

STEPERR3 DS    0H                                              #DD08099
         #SETRC 20                 INDICATE AN ERROR OCCURRED  #DD08099
         CLI   $TEPMSGS+1,$NOMSGS  CHECK FOR "NOMSGS" OPTION   #DD08099
         BE    STEP6000            B. IF YES                   #DD08268
         LA    R0,1                SET NUMBER OF SEGMENTS      #DD08100
         L     R1,=A(MSG012I)      'STEPLIB OPEN FAILED'       #DD10106
         SLR   R2,R2                                           #DD08099
         BAL   R14,ISSUEMSG        ISSUE MESSAGE               #DD08099
         B     STEP6000                                        #DD08268

STEPERR4 DS    0H                                              #DD08268
         #SETRC 28                 INDICATE AN ERROR OCCURRED  #DD08268
         CLI   $TEPMSGS+1,$NOMSGS  CHECK FOR "NOMSGS" OPTION   #DD08268
         BE    STEP6000            B. IF YES                   #DD08268
         LA    R0,1                SET NUMBER OF SEGMENTS      #DD08268
         L     R1,=A(MSG014I)      'STEPLIB NOT AUTHORIZED'    #DD10106
         SLR   R2,R2                                           #DD08268
         BAL   R14,ISSUEMSG        ISSUE MESSAGE               #DD08268
         B     STEP6000                                        #DD08268

*---------------------------------------------------------------------*
*                                                                     *
*        TERMINATE                                                    *
*                                                                     *
*---------------------------------------------------------------------*

STEPEXIT DS    0H
         CLI   WRKTYPE,C'J'        CHECK FOR BATCH JOB         #DD09027
         BNE   STEPEX99            B. IF NOT (DON'T PAUSE)     #DD09027

         CLI   WRKANS@,X'FF'       Check If PDL returned       #DD10106
         BE    STEPEX99            B. If Not                   #DD10106
         ICM   R8,15,WRKANS@       Load PDL Address            #DD10106
         BNP   STEPEX99            B. If No PDL                #DD10106
         USING IKJPARMD,R8                                     #DD10106

         L     R1,PAUSEPDE         A(PDE)                      #DD09027
         ICM   R1,15,0(R1)         LOAD TIME TO WAIT           #DD09027
         BZ    STEPEX99            B. IF NO WAITING            #DD09027
         M     R0,=F'100'          CONVERT TO HUNDREDTHS       #DD09027
         ST    R1,WRKTIME          SAVE HUNDREDTHS OF SECONDS  #DD09027
         STIMER WAIT,BINTVL=WRKTIME WAIT FOR ANY HUNG IRB RTN  #DD09027

STEPEX99 DS    0H                                              #DD09027
         IKJRLSA WRKANS@           RELEASE ANSWER BUFFER STORAGE
         #STOP ,                   TERMINATE

*---------------------------------------------------------------------*
*                                                                     *
*        CREATE IRB TO PERFORM FUNCTION UNDER MAIN TASK'S TCB.        *
*                                                                     *
*        OPEN & CLOSE ARE DONE IN AN IRB SO THAT THE DCB BUFFERS      *
*        ARE ASSOCIATED WITH THE TCB.                                 *
*                                                                     *
*---------------------------------------------------------------------*
SENDIRB  DS    0H
         STM   R0,R15,WRKSEND      SAVE ALL REGISTERS          #DD09101
         ST    R1,WRKREGS          PASS ROUTINE PARAMETER LIST
         XC    WRKREGS+4(4),WRKREGS+4                          #DD09103
         ST    R13,WRKREGS+8       PASS WORK AREA ADDRESS      #DD08268

         MODESET MODE=SUP,KEY=ZERO

         L     R6,WRKLCT@          A(LCT)                      #DD09101
         L     R4,LCTTCBAD-LCT(R6) A(TCB)                      #DD09101
         ST    R4,WRKTCB@                                      #DD09103

         LA    R0,WRKREGS                                      #DD09103
         ST    R0,WRKPARM@         A(PARAMETERS)               #DD09103

         SETLOCK OBTAIN,TYPE=LOCAL,MODE=UNCOND,REGS=USE        #DD09103

         SCHEDIRB EPPTR=WRKSEND,   ADDRESS OF IRB ENTRY POINT  #DD09103X
               TCBPTR=WRKTCB@,     ADDRESS OF TCB,             #DD09103X
               MODE=SUPR,          RUN IN SUPERVISOR STATE     #DD09103X
               KEY=SUPR,           RUN IN KEY ZERO             #DD09103X
               PARAMPTR=WRKPARM@,  PASS ADDRESS OF PARAMETERS  #DD09103X
               MF=(E,WRKSCH,COMPLETE)                          #DD09103

         SETLOCK RELEASE,TYPE=LOCAL,REGS=USE                   #DD09103

         MODESET MODE=PROB,KEY=NZERO

         WAIT  ECB=WRKREGS+4       WAIT FOR THE EXIT TO END

         CLI   $TEPMSGS+1,$DEBUG   CHECK FOR "DEBUG" OPTION    #DD08268
         BNE   SEND0400            B. IF NOT                   #DD08268
         ICM   R0,15,WRKDCB@       CHECK IF DCB ADDRESS EXISTS #DD08268
         BZ    SEND0400            B. IF NOT                   #DD08268

         L     R15,=A(TRC002I)                                 #DD10050
         MVC   WRKMSG(TRC002IL),0(R15)                         #DD10050
         MVC   TRC002I1+WRKMSG,WRKIRB                          #DD08268
         MVC   WRKHEXIN,WRKDCB@    INPUT WORD                  #DD08268
         BAL   R14,FULLCHAR        CONVERT TO CHARACTER        #DD08268
         MVC   TRC002I2+WRKMSG,WRKHEXOU                        #DD08268
         MVC   TRC002I3+WRKMSG,=C'Obtained'                    #DD08268
         CLI   WRKIRB,C'O'         CHECK FOR "OPEN"            #DD08268
         BE    SEND0300            B. IF YES                   #DD08268
         MVC   TRC002I3+WRKMSG,=C'Released'                    #DD08268
SEND0300 DS    0H                                              #DD08268
         LA    R0,1                SET NUMBER OF SEGMENTS      #DD08268
         LA    R1,WRKMSG           '$TEP009I DCB ADDRESS:"     #DD08268
         SLR   R2,R2                                           #DD08268
         BAL   R14,ISSUEMSG        ISSUE MESSAGE               #DD08268

SEND0400 DS    0H                                              #DD08268
         LH    R15,WRKREGS+6       RETURN EXIT RETURN CODE
         LM    R0,R14,WRKSEND      RESTORE RETURN ADDRESS      #DD09101
         BR    R14                 RETURN TO CALLER
         DROP  R8

*---------------------------------------------------------------------*
*                                                                     *
*        ASYNCRONOUS EXIT TO CLOSE THE STEPLIB DD STATEMENT.          *
*                                                                     *
*---------------------------------------------------------------------*
         PUSH  USING
         DROP  ,
CLOSEIRB DS    0H
         LR    R12,R15             A(EXIT ENTRY POINT)
         USING CLOSEIRB,R12
         USING PSA,0

         LR    R9,R1               A(INPUT PARAMETER)
         L     R7,0(,R9)           A(STEPLIB DDNAME SAVE AREA)
         L     R13,8(,R9)          RE-ESTABLIST WORK AREA      #DD08268
         USING STEPWRK,R13                                     #DD08268
         MVC   WRKIRB,=C'CLOSE'    TRACE CURRENT REQUEST       #DD08268

         MVC   0(8,R7),BLANKS      CLEAR RETURN DDNAME AREA    #DD99245

         L     R4,PSATOLD          A(TCB)
         USING TCB,R4
         L     R5,TCBTCT           A(TCT)
         USING SMFTCT,R5
         L     R6,TCTLCTAD         A(LCT)
         USING LCT,R6
         L     R2,LCTJOBLB         A(JOBLIB DCB)
         SLR   R0,R0
         ST    R0,LCTJOBLB         ZERO LCT'S STEPLIB POINTER

CLOSE100 DS    0H
         ICM   R4,15,TCBTCB        A(NEXT LOWER TCB)
         BZ    CLOSE200            B. IF AT END
         C     R2,TCBJLB           CHECK FOR MATCHING DCB POINTER
         BNE   CLOSE100            B. IF NOT LEAVE ALONE
         ST    R0,TCBJLB           ZERO CURRENT TCB'S STEPLIB POINTER
         B     CLOSE100            CONTINUE TILL END OF TCBS

CLOSE200 DS    0H
         LTR   R2,R2               CHECK IF A STEPLIB EXISTED  #DD99245
         BZ    CLOSE400            B. IF NOT                   #DD99245

         L     R4,PSATOLD          A(TCB)
         L     R3,TCBTIO           A(TIOT)                     #DD10106
         L     R1,TCBLTC           A(LAST TASK TCB)
         MVC   TCBTIO,TCBTIO-TCB(R1)
         MVI   0(R9),128           SET CLOSE OPTION
         CLOSE ((R2)),MF=(E,(R9))
         ST    R3,TCBTIO           RESTORE A(TIOT)             #DD10106
         MVC   0(8,R7),DCBDDNAM-IHADCB(R2)

         CLI   WRKTYPE,C'J'        CHECK FOR BATCH JOB         #DD08268
         BE    CLOSE300            B. IF YES (FREE STEPLIB)    #DD08268
         CLI   0(R7),C'$'          CHECK FOR "$TEP..."         #DD09050
         BNE   CLOSE400            B. IF NOT                   #DD99245

CLOSE300 DS    0H                                              #DD08268
         ST    R2,WRKDCB@          SAVE FOR DEBUG MESSAGE      #DD08268
         LHI   R3,MODLDCBL         Pre r1.12 DCB Length        #DD10050
         TM    WRKFLAG1,WRK$R112   Check if z/OS R1.12 or >    #DD10050
         BNO   *+8                 B. If Not                   #DD10050
         AHI   R3,MODDCBEL         Add DCBE Length             #DD10050
         STORAGE RELEASE,ADDR=(R2),SP=253,LENGTH=(R3),         #DD10050*
               CALLRKY=YES,TCBADDR=TCBJSTCB                    #DD08268

CLOSE400 DS    0H                                              #DD99245
         SLR   R0,R0               SET SUCCESSFUL RETURN CODE
         POST  4(,R9),(0)          POST WITH RETURN CODE
         SVC   3                   RETURN TO CALLER
         POP   USING

*---------------------------------------------------------------------*
*                                                                     *
*        OPEN ABEND RECOVERY ROUTINE                                  *
*                                                                     *
*---------------------------------------------------------------------*

         PUSH  USING                                           #DD04108
         DROP  ,                                               #DD04108

ESTAERTN DS    0H                                              #DD04108
         USING *,R15                                           #DD04108
         CH    R0,=H'12'           RTM PROVIDE AN SDWA?        #DD04108
         BNE   ESTAE100            B. IF YES                   #DD04108
         SR    R15,R15             ELSE.                       #DD04108
         BR    R14                 PERCOLATE                   #DD04108

ESTAE100 DS    0H                                              #DD04108
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS     #DD04108

         SETRP RC=4,                                           #DD04108*
               RETADDR=OPEN0100,   SET RETRY ADDRESS           #DD04108*
               FRESDWA=YES,        FREE THE SDWA WHEN DONE     #DD04108*
               REGS=(14,12),       RESTORE CALLER'S REGISTERS  #DD04108*
               RETREGS=YES,                                    #DD04108*
               DUMP=NO             DON'T CUT A DUMP            #DD04108

         LTORG ,                   LITERAL POOL                #DD04108

         POP   USING                                           #DD04108

*---------------------------------------------------------------------*
*                                                                     *
*        ASYNCRONOUS EXIT TO OPEN  THE STEPLIB DD STATEMENT.          *
*                                                                     *
*---------------------------------------------------------------------*
         PUSH  USING
         DROP  ,
OPENIRB  DS    0H
         LR    R12,R15             A(EXIT ENTRY POINT)
         USING OPENIRB,R12
         USING PSA,0

         LR    R9,R1               A(INPUT PARAMETER)
         L     R7,0(,R9)           A(STEPLIB DDNAME)
         L     R13,8(,R9)          RE-ESTABLIST WORK AREA      #DD08268
         USING STEPWRK,R13                                     #DD08268
         MVC   WRKIRB,=C'OPEN '    TRACE CURRENT REQUEST       #DD08268

         LA    R0,8                SET FAILURE CODE            #DD99245
         TM    0(R7),X'BF'         CHECK FOR VALID DDNAME      #DD99245
         BZ    OPENEXIT            B. IF NOT                   #DD99245

         L     R4,PSATOLD          A(TCB)
         USING TCB,R4
         L     R5,TCBTCT           A(TCT)
         USING SMFTCT,R5
         L     R6,TCTLCTAD         A(LCT)
         USING LCT,R6
         LHI   R3,MODLDCBL         Pre r1.12 DCB Length        #DD10050
         TM    WRKFLAG1,WRK$R112   Check if z/OS R1.12 or >    #DD10050
         BNO   *+8                 B. If Not                   #DD10050
         AHI   R3,MODDCBEL         Add DCBE Length             #DD10050
         STORAGE OBTAIN,LOC=BELOW,SP=253,LENGTH=(R3),          #DD10050*
               CALLRKY=YES,TCBADDR=TCBJSTCB                    #DD08268
         ST    R1,WRKDCB@          SAVE FOR DEBUG MESSAGE      #DD08268
         LR    R2,R1               A(DCB)
         MVC   0(MODLDCBL,R2),MODLDCB
         MVC   DCBDDNAM-IHADCB(,R2),0(R7)

*        Add DCBE As Added by z/OS R1.12 and Higher            #DD10050
         TM    WRKFLAG1,WRK$R112   Check if z/OS R1.12 or >    #DD10050
         BNO   OPEN0050            B. If Not                   #DD10050
         LA    R1,MODLDCBL(,R2)    A(DCBE)                     #DD10050
         MVC   0(MODDCBEL,R1),MODDCBE                          #DD10050
         OI    DCBBFALN-IHADCB(R2),DCBH1+DCBH0  DCBE Exists    #DD10050
         ST    R1,DCBDCBE-IHADCB(,R2) Save DCBE Address in DCB #DD10050

OPEN0050 DS    0H                                              #DD10050
         L     R3,TCBTIO           A(TIOT)                     #DD10106
         L     R1,TCBLTC           A(LAST TASK TCB)
         MVC   TCBTIO,TCBTIO-TCB(R1)

         ESTAE ESTAERTN            ESTABLISH ABEND RECOVERY    #DD04108

         MVI   0(R9),128           SET OPEN OPTION
         OPEN  ((R2)),MF=(E,(R9))
OPEN0100 DS    0H                                              #DD04108
         ESTAE 0                   REMOVE RECOVERY ROUTINE     #DD04108

         ST    R3,TCBTIO           RESTORE A(TIOT)             #DD10106

         TM    DCBOFLGS-IHADCB(R2),DCBOFOPN
         BO    OPEN0200            B. IF OPEN WAS SUCCESSFUL
         XC    WRKDCB@,WRKDCB@     RESET FOR DEBUG MESSAGE     #DD08268
         LHI   R3,MODLDCBL         Pre r1.12 DCB Length        #DD10050
         TM    WRKFLAG1,WRK$R112   Check if z/OS R1.12 or >    #DD10050
         BNO   *+8                 B. If Not                   #DD10050
         AHI   R3,MODDCBEL         Add DCBE Length             #DD10050
         STORAGE RELEASE,ADDR=(R2),SP=253,LENGTH=(R3),         #DD10050*
               CALLRKY=YES,TCBADDR=TCBJSTCB                    #DD08268
         LA    R0,12               SET FAILURE CODE
         B     OPENEXIT

OPEN0200 DS    0H
         ST    R2,LCTJOBLB-LCT(,R6) SAVE STEPLIB DCB IN LCT

OPEN0300 DS    0H
         ICM   R4,15,TCBTCB        A(NEXT LOWER TCB)
         BZ    OPEN0400            B. IF AT END

         CLC   TCBJLB,=F'0'        CHECK FOR IN-USE JOBLIB     #DD09199
         BNE   OPEN0300            B. IF YES (LEAVE ALONE)     #DD09199

         ST    R2,TCBJLB           SET NEW STEPLIB POINTER
         B     OPEN0300            CONTINUE TILL END OF TCBS

OPEN0400 DS    0H
         SLR   R0,R0               SET SUCCESSFUL RETURN CODE

OPENEXIT DS    0H
         POST  4(,R9),(0)          POST WITH RETURN CODE
         SVC   3                   RETURN TO CALLER
         POP   USING

         #EXEC ,                   EXECUTED STATEMENTS         #DD01068
         LTORG ,                   LITERAL POOL                #DD01068

*---------------------------------------------------------------------*
*                                                                     *
*        CONVERT FULLWORD TO 8 BYTES PRINTABLE HEX                    *
*                                                                     *
*---------------------------------------------------------------------*

         PUSH  USING                                           #DD08268
FULLCHAR DS    0H                                              #DD08268
         STM   R0,R15,WRKREGS3     SAVE ALL REGISTERS          #DD08268
         UNPK  WRKHEXOU(9),WRKHEXIN(5)                         #DD08268
         TR    WRKHEXOU,HEXTABLE-C'0'                          #DD08268
         MVI   WRKHEXOU+8,C' '                                 #DD08268
         LM    R0,R15,WRKREGS3     RESTORE ALL REGISTERS       #DD08268
         BR    R14                 RETURN TO CALLER            #DD08268
         POP   USING                                           #DD08268

*---------------------------------------------------------------------*
*                                                                     *
*        ISSUE MESSAGE VIA PUTLINE                                    *
*                                                                     *
*---------------------------------------------------------------------*
ISSUEMSG DS    0H
         STM   R0,R14,WRKREGS1     SAVE ALL REGISTERS
         STM   R0,R2,WRKOLD        #SEGMENTS, SEGMENT1 SEGMENT2
         L     R4,WRKUPT@          A(UPT)
         L     R5,WRKECT@          A(ECT)
         XC    WRKECB,WRKECB
         PUTLINE PARM=WRKPUTL,UPT=(R4),ECT=(R5),ECB=WRKECB,            *
               OUTPUT=(WRKOLD,TERM,SINGLE,INFOR),                      *
               MF=(E,WRKIOPL)
         LM    R0,R15,WRKREGS1     RESTORE ALL REGISTERS
         BR    R14                 RETURN TO CALLER

*---------------------------------------------------------------------*
*                                                                     *
*        OPEN ABEND RECOVERY ROUTINE (FOR VALIDATION ROUTINE)         *
*                                                                     *
*---------------------------------------------------------------------*

         PUSH  USING                                           #DD08099
         DROP  ,                                               #DD08099

DDALEST  DS    0H                                              #DD08099
         USING *,R15                                           #DD08099
         CH    R0,=H'12'           RTM PROVIDE AN SDWA?        #DD08099
         BNE   DDALEST1            B. IF YES                   #DD08099
         SR    R15,R15             ELSE.                       #DD08099
         BR    R14                 PERCOLATE                   #DD08099

DDALEST1 DS    0H                                              #DD08099
         STM   R14,R12,12(R13)     SAVE CALLER'S REGISTERS     #DD08099

         SETRP RC=4,                                           #DD08099*
               RETADDR=DDALOP10,   SET RETRY ADDRESS           #DD08099*
               FRESDWA=YES,        FREE THE SDWA WHEN DONE     #DD08099*
               REGS=(14,12),       RESTORE CALLER'S REGISTERS  #DD08099*
               RETREGS=YES,                                    #DD08099*
               DUMP=NO             DON'T CUT A DUMP            #DD08099

         LTORG ,                   LITERAL POOL                #DD08099

         POP   USING                                           #DD08099

*---------------------------------------------------------------------*
*                                                                     *
*        DATASET NAME VALIDITY CHECKING ROUTINE (CONCATENATION)       *
*                                                                     *
*---------------------------------------------------------------------*

         PUSH  USING
         DROP  ,
DDALLOC  DS    0H
         USING DDALLOC,R15
         STM   R14,R12,12(R13)     SAVE ALL REGISTERS
         LR    R12,R15             SET SUBROUTINE BASE REGISTER
         DROP  R15
         USING DDALLOC,R12
         L     R5,0(,R1)           A(DSNAME PDE)
         LR    R10,R13             A(ORIGINAL SAVEAREA)
         L     R9,4(,R1)           A(USER WORKAREA)
         USING STEPWRK,R9
         LA    R13,WRKREGS         A(SUBROUTINE SAVE AREA)

*-------                                                       #DD01068
*        IF THE "ADD" FUNCTION IS REQUESTED, DONT CONTINUALLY  #DD01068
*        ALLOCATE DSNAMES THAT ARE ALREADY ALLOCATED TO THE    #DD01068
*        STEPLIB.  INDICATE VIA A RETURN CODE OF 4 THAT        #DD01068
*        "AT LEAST 1" OF THE DATASETS TO BE ADDED WERE NOT.    #DD01068
*-------                                                       #DD01068
         L     R8,WRKANS@          LOAD PDL ADDRESS            #DD01068
         USING IKJPARMD,R8                                     #DD01068
         L     R2,0(,R5)           A(SPECIFIED DSNAME)         #DD01068
         LH    R1,4(,R5)           L(SPECIFIED DSNAME)         #DD01068
         MVC   WRKDSN2,BLANKS      CLEAR DSNAME AREA           #DD01068
         #EXEC -R1,MVC,WRKDSN2(*-*),0(R2)                      #DD01068
         CLI   $TEPFUNC+1,$ADD     CHECK FOR "ADD" FUNCTION    #DD08101
         BNE   DDAL0400            B. IF NOT                   #DD08101
         CLC   =C'$TEP',WRKDDOLD   CHECK FOR "FAKE" STEPLIB DD #DD08101
         BNE   DDAL0400            B. IF NOT                   #DD08101
         MVC   WRKLOCAT(MODLLOCL),MODLLOC                      #DD01068
         LA    R0,WRKDSN2                                      #DD01068
         ST    R0,WRKLOCAT+4       SAVE DSNAME ADDRESS         #DD01068
         LA    R0,WRKAREA                                      #DD01068
         ST    R0,WRKLOCAT+12      SAVE WORK AREA ADDRESS      #DD01068
         LOCATE WRKLOCAT           CONVERT ALIAS TO REAL NAME  #DD01068
         ICM   R6,15,WRKDSAB@      A(DSAB)                     #DD01068
         BZ    DDAL0400            B. IF CHAIN DOES NOT EXIST  #DD01068
         USING DSABID,R6                                       #DD01068
DDAL0100 DS    0H                                              #DD01068
         L     R4,DSABSIOT         A(SIOT)                     #DD01068
         USING INDMSIOT,R4                                     #DD01068
         CLC   SCTDDNAM,WRKDDOLD   CHECK FOR START OF STEPLIB  #DD01068
         BE    DDAL0200            B. IF FOUND                 #DD01068
         ICM   R6,15,DSABFCHN      A(NEXT DSAB)                #DD01068
         BNZ   DDAL0100            B. IF ANOTHER DSAB EXISTS   #DD01068
         B     DDAL0400            ELSE. NO $TEP#### DDNAME    #DD01068
DDAL0200 DS    0H                                              #DD01068
         L     R1,SJFCBPTR         A(JFCB)                     #DD01068
         USING INFMJFCB,R1                                     #DD01068
         CLC   JFCBDSNM,WRKDSN2    CHECK FOR MATCHING DSNAME   #DD01068
         BE    DDAL0300            B. IF ALREADY ALLOCATED     #DD01068
         DROP  R1                                              #DD01068
         ICM   R6,15,DSABFCHN      A(NEXT DSAB)                #DD01068
         BZ    DDAL0400            B. IF END OF CHAIN          #DD01068
         L     R4,DSABSIOT         A(SIOT)                     #DD01068
         CLC   SCTDDNAM,BLANKS     CHECK FOR CONCATENATION     #DD01068
         BNE   DDAL0400            B. IF END OF $TEP###'S      #DD01068
         B     DDAL0200            ELSE. CONTINUE SEARCHING    #DD01068
         DROP  R6                                              #DD09103
DDAL0300 DS    0H                                              #DD01068
         #SETRC 4                  SET MAINLINE RETURN CODE    #DD01068
         LA    R15,0               SET VALIDCK RETURN CODE     #DD01068
         B     DDALEXIT            CONTINUE PARSING            #DD01068

DDAL0400 DS    0H                                              #DD01068
         LA    R15,0               SET VALIDCK RETURN CODE     #DD01072
         CLI   $TEPFUNC+1,$REMOVE  CHECK FOR "REMOVE" FUNC.    #DD01072
         BE    DDALEXIT            B. IF YES (DON'T ALLOCATE)  #DD01072
         CLI   $TEPFUNC+1,$DESTACK CHECK FOR "DESTACK" FUNC.   #DD01072
         BE    DDALEXIT            B. IF YES (DON'T ALLOCATE)  #DD01072
         TM    WRKFLAG1,WRK$1STD   CHECK IF 1ST DATASET WAS ALLOCATED
         BO    DDAL0600            B. IF YES
         LA    R0,WRKDDNEW
         ST    R0,WRKDDN@          A(CURRENT STEPLIB DDNAME)
         LA    R0,L'WRKDDNEW
         STH   R0,WRKDDN@+4        L(CURRENT STEPLIB DDNAME)
DDAL0500 DS    0H
         ALLOC PERM,DSN=((R5)),DISP=SHR,                               *
               DDN=WRKDDN@,FLAG1=S99NOCNV+S99NOMNT
         MVC   WRKDDN,WRKDDNEW     SAVE CURRENT DDNAME         #DD08099
         OI    WRKFLAG1,WRK$1STD   REMEMBER 1ST DATASET WAS ALLOCATED
         LTR   R15,R15             CHECK ALLOCATION RETURN CODE
         BNZ   DDAL0550            B. IF ALLOCATION FAILED     #DD08099
         BAL   R14,DDALOPEN        CATCH OPEN FAILURES         #DD08099
         B     DDALEXIT                                        #DD08099

DDAL0550 DS    0H                                              #DD08099
         USING S99RB,R14
         CLC   S99ERROR,=X'0410'   CHECK FOR "DDNAME IN USE" ERROR
         BNE   DDAL0700            B. IF NOT
         PACK  WRKDBL1,WRKDDNEW+4(4)
         AP    WRKDBL1,=P'+1'      INCREMENT STEPLIB NUMBER
         OI    WRKDBL1+7,X'0F'
         UNPK  WRKDDNEW+4(4),WRKDBL1
         DROP  R14
         B     DDAL0500            RETRY ALLOCATION

DDAL0600 DS    0H
         ALLOC PERM,DSN=((R5)),DISP=SHR,                               *
               DDNTO=WRKDDRET,FLAG1=S99NOCNV+S99NOMNT
         MVC   WRKDDN,WRKDDRET     SAVE CURRENT DDNAME         #DD08099
         LTR   R15,R15             CHECK ALLOCATION RETURN CODE
         BNZ   DDAL0700            B. IF ALLOCATION FAILED
         BAL   R14,DDALOPEN        CATCH OPEN FAILURES         #DD08099
         TM    WRKFLAG1,WRK$ABND   CHECK IF AN ABEND OCCURED   #DD08101
         BO    DDALEXIT            B. IF YES                   #DD08101

         MVC   WRKCCTU1(4),=AL2(DCCDDNAM,2)
         MVC   WRKCCDD1(2),=AL2(8) SET LENGTH OF DDNAME
         MVC   WRKCCDD2(2),=AL2(8) SET LENGTH OF DDNAME
         MVC   WRKCCTU2(4),=AL2(DCCPERMC,0)
         MVC   WRKCCDD1+2(8),WRKDDNEW
         MVC   WRKCCDD2+2(8),WRKDDRET
         ALLOC VERB=S99VRBCC,TU=(WRKCCTU1,WRKCCTU2)
         LTR   R15,R15             CHECK CONCATENATION RETURN CODE
         BZ    DDALEXIT            B. IF CONCATENATION SUCCEEDED

DDAL0700 DS    0H
         L     R2,WRKCPPL@         A(CPPL)                     #DD10106
         S99FAIL CP=YES,CPPL=(R2), ISSUE ALLOC FAILURE MESSAGE #DD10106*
               MF=(E,WRKFAIL)                                  #DD10106
         LA    R15,12              SET ERROR CODE

DDALEXIT DS    0H
         LR    R13,R10             A(ORIGINAL SAVE AREA)
         ST    R15,16(,R13)        OVERLAY R15 IN SAVE AREA
         LM    R14,R12,12(R13)     RESTORE ALL REGISTERS
         BR    R14                 RETURN TO IKJPARS

*-------
*        CATCH OPEN ABENDS (IE. S913)
*-------
DDALOPEN DS    0H                                              #DD08099
         STM   R0,R15,WRKREGS2     SAVE ALL REGISTERS          #DD08099

         MVC   WRKDCB,MODLDCB      FORMAT TEMPORARY DCB        #DD08099
         MVC   WRKDCBE,MODDCBE     FORMAT TEMPORARY DCBE       #DD12060
         MVC   DCBDDNAM-IHADCB+WRKDCB,WRKDDN                   #DD08100
         TM    WRKFLAG1,WRK$R112   Check if z/OS R1.12 or >    #DD12060
         BNO   DDALOP05            B. If Not                   #DD12060
         OI    DCBBFALN-IHADCB+WRKDCB,DCBH1+DCBH0 DCBE Exists  #DD12060
         LA    R1,WRKDCBE          A(DCBE)                     #DD12060
         ST    R1,DCBDCBE-IHADCB+WRKDCB Save DCBE Address      #DD12060
DDALOP05 DS    0H                                              #DD12060
         MVC   WRKOPEN(MODLOPEL),MODLOPEN                      #DD08099
         MVC   WRKCLOSE(MODLCLOL),MODLCLOS                     #DD08099

         ESTAE DDALEST             ESTABLISH ABEND RECOVERY    #DD08099

         OPEN  WRKDCB,MF=(E,WRKOPEN)                           #DD08099
         CLOSE WRKDCB,MF=(E,WRKCLOSE)                          #DD08099
         B     DDALOP20                                        #DD08099

DDALOP10 DS    0H                                              #DD08099
         ESTAE 0                   REMOVE RECOVERY ROUTINE     #DD08100
         OI    WRKFLAG1,WRK$ABND   INDICATE "OPEN" ABEND       #DD08099
         #SETRC 24                                             #DD08099

         MVC   WRKINSRT(4),=AL2(48,33)   LENGTH+4/OFFSET       #DD08099
         MVC   WRKINSRT+4(44),WRKDSN2                          #DD08099

         LA    R0,2                SET NUMBER OF SEGMENTS      #DD08099
         L     R1,=A(MSG013I)      '$TEP013I OPEN FAILED FOR'  #DD10106
         LA    R2,WRKINSRT         DSNAME                      #DD08099
         STM   R0,R2,WRKOLD        COUNT, A(PART1), A(PART2)   #DD08101
         L     R4,WRKUPT@          A(UPT)                      #DD08101
         L     R5,WRKECT@          A(ECT)                      #DD08101
         XC    WRKECB,WRKECB                                   #DD08101
         PUTLINE PARM=WRKPUTL,UPT=(R4),ECT=(R5),ECB=WRKECB,    #DD08101*
               OUTPUT=(WRKOLD,TERM,SINGLE,INFOR),              #DD08101*
               MF=(E,WRKIOPL)                                  #DD08101

         LA    R0,WRKDDN                                       #DD08101
         ST    R0,WRKDDN@          A(CURRENT STEPLIB DDNAME)   #DD08101
         LA    R0,L'WRKDDN                                     #DD08101
         STH   R0,WRKDDN@+4        L(CURRENT STEPLIB DDNAME)   #DD08101
         FREE  PERM,DDN=WRKDDN@    FREE THE STEPLIB DATASET    #DD08101
         CLC   WRKDDN,WRKDDNEW     CHECK IF 1ST DATASET        #DD08101
         BE    DDALOP30            B. IF YES                   #DD08101
         LA    R0,WRKDDNEW                                     #DD08101
         ST    R0,WRKDDN@          A(CURRENT STEPLIB DDNAME)   #DD08101
         LA    R0,L'WRKDDNEW                                   #DD08101
         STH   R0,WRKDDN@+4        L(CURRENT STEPLIB DDNAME)   #DD08101
         FREE  PERM,DDN=WRKDDN@    FREE THE STEPLIB DATASET    #DD08101
         B     DDALOP30                                        #DD08100

DDALOP20 DS    0H                                              #DD08099
         ESTAE 0                   REMOVE RECOVERY ROUTINE     #DD08099
         TM    WRKFLAG1,WRK$ABND   CHECK IF AN ABEND OCCURED   #DD08101
         BZ    DDALOP30            B. IF NOT                   #DD08101
         LA    R0,WRKDDN                                       #DD08101
         ST    R0,WRKDDN@          A(CURRENT STEPLIB DDNAME)   #DD08101
         LA    R0,L'WRKDDN                                     #DD08101
         STH   R0,WRKDDN@+4        L(CURRENT STEPLIB DDNAME)   #DD08101
         FREE  PERM,DDN=WRKDDN@    FREE THE STEPLIB DATASET    #DD08101

DDALOP30 DS    0H                                              #DD08100
         LM    R0,R15,WRKREGS2     RESTORE ALL REGISTERS       #DD08099
         BR    R14                 RETURN TO CALLER            #DD08099

         LTORG ,                   LITERAL POOL                #DD01068
         #EXEC ,                   EXECUTED STATEMENTS         #DD01068
         POP   USING

*---------------------------------------------------------------------*
*                                                                     *
*        CONSTANTS & DYNAMIC WORKAREA                                 *
*                                                                     *
*---------------------------------------------------------------------*

HEXTABLE DC    C'0123456789ABCDEF' HEX CONVERSION TABLE        #DD08268

MODLDCB  DCB   DDNAME=*,DSORG=PO,RECFM=U,MACRF=E
         DS    F                   DCB EXIT LIST (ALA IEFSD164)#DD08268
MODLDCBL EQU   *-MODLDCB           DCB LENGTH

MODDCBE  DCBE  EADSCB=OK                                       #DD10050
MODDCBEL EQU   *-MODDCBE           DCBE LENGTH                 #DD10050

MODLOPEN OPEN  (*-*),MF=L          OPEN PARAMETER LIST         #DD08099
MODLOPEL EQU   *-MODLOPEN                                      #DD08099
MODLCLOS CLOSE (*-*),MF=L          OPEN PARAMETER LIST         #DD08099
MODLCLOL EQU   *-MODLCLOS                                      #DD12060

MODLLOC  CAMLST NAME,*-*,,*-*      CATALOG PARAMETER LIST      #DD99244
MODLLOCL EQU   *-MODLLOC           CATALOG PARAMETER LIST LEN  #DD99244

BLANKS   DC    80C' '              LOTS OF BLANKS              #DD99244

MSG001I  #MSG  '$TEP001I STEPLIB Expanded'
MSG002I  #MSG  '$TEP002I STEPLIB Activated'
MSG003I  #MSG  '$TEP003I STEPLIB Deactivated'
MSG004I  #MSG  '$TEP004I STEPLIB Shrunk'
MSG005I  #MSG  '$TEP005I Missing STEPLIB Dataset Name(s)'
MSG006I  #MSG  '$TEP006I STEPLIB Dataset List - DDName():'     #DD01095
MSG007I  #MSG  '$TEP007I - '
MSG008I  #MSG  '$TEP008I STEPLIB Not ed, is not allocated'     #DD01072
MSG008I1 #MSG  'add',OFFSET=21                                 #DD01072
MSG008I2 #MSG  'allocat',OFFSET=21                             #DD01072
MSG008I3 #MSG  'fre',OFFSET=21                                 #DD01072
MSG008I4 #MSG  'list',OFFSET=21                                #DD01072
MSG008I5 #MSG  'remov',OFFSET=21                               #DD01072
MSG008I6 #MSG  'stack',OFFSET=21                               #DD01072
MSG008I7 #MSG  'destack',OFFSET=21                             #DD01072
MSG009I  #MSG  '$TEP009I  is not an APF authorized library'    #DD01073
MSG010I  #MSG  '$TEP010I dataset(s) already found in STEPLIB'  #DD01095
MSG011I  #MSG  '$TEP011I Version:___ Release:__ Assembly Date:' DD08098
MSG011I1 EQU   4+17,3              INSERT OFFSET & LENGTH      #DD08098
MSG011I2 EQU   4+29,2              INSERT OFFSET & LENGTH      #DD08098
MSG011IL EQU   *-MSG011I                                       #DD08098
MSG012I  #MSG  '$TEP012I STEPLIB OPEN Failed'                  #DD08099
MSG013I  #MSG  '$TEP013I STEPLIB OPEN Failed for '             #DD08099
MSG014I  #MSG  '$TEP014I STEPLIB Command is not APF Authorized' DD08268

TRC001I  #MSG  '$TEP901I TCB Address  Program   Tasklib   TCBJLB' 08268
TRC001IL EQU   *-TRC001I                                       #DD08268
TRC001B  #MSG  '.         ________    ________  ________  ________' 268
TRC001BA EQU   4+1,57              INSERT OFFSET & LENGTH      #DD08268
TRC001B1 EQU   4+1,7               INSERT OFFSET & LENGTH      #DD08268
TRC001B2 EQU   4+10,8              INSERT OFFSET & LENGTH      #DD08268
TRC001B3 EQU   4+21,8              INSERT OFFSET & LENGTH      #DD08268
TRC001B4 EQU   4+22,8              INSERT OFFSET & LENGTH      #DD08268
TRC001B5 EQU   4+32,8              INSERT OFFSET & LENGTH      #DD08268
TRC001B6 EQU   4+42,8              INSERT OFFSET & LENGTH      #DD08268
TRC001BL EQU   *-TRC001B                                       #DD08268
TRC002I  #MSG  '$TEP902I _____ - DCB Storage at ________ ________'
TRC002I1 EQU   4+9,5               INSERT OFFSET & LENGTH      #DD08268
TRC002I2 EQU   4+32,8              INSERT OFFSET & LENGTH      #DD08268
TRC002I3 EQU   4+41,8              INSERT OFFSET & LENGTH      #DD08268
TRC002IL EQU   *-TRC002I                                       #DD08268

         #STARTWA PATCH=NO
         CSVAPF MF=(L,WRKCSVPL)                                #DD01073
         DYNSPACE ,                DYNAMIC ALLOCATION PARAMETER LIST
         SCHEDIRB MF=(L,WRKSCH)                                #DD09103
WRKCLOSE DS    0F,CL(MODLCLOL)     CLOSE PARAMETER LIST        #DD08099
WRKCSVRC DS    F                   CSVAPF RETURN CODE          #DD01073
WRKCSVRS DS    F                   CSVAPF REASON CODE          #DD01073
WRKANS@  DS    A                   RETURNED PDL BUFFER ADDRESS
WRKAREA  DS    0F,XL265            CATALOG LOCATE WORK AREA    #DD99244
* THE FOLLOWING "WRKCC..." STATEMENTS MUST REMAIN IN ORDER
WRKCCTU1 DS    AL2,AL2             CONCATENATION DDNAMES TEXT UNIT
WRKCCDD1 DS    AL2,CL8             PRIMARY DDNAME
WRKCCDD2 DS    AL2,CL8             SECONDARY DDNAME
WRKCCTU2 DS    AL2,AL2             CONCATENATION "PERMANENT" TEXT UNIT
WRKDBL1  DS    D                   DOUBLEWORD WORK AREA
WRKDCB   DS    CL(MODLDCBL)        VALIDATION DCB              #DD08099
WRKDCBE  DS    CL(MODDCBEL)        VALIDATION DCBE             #DD12060
WRKDCB@  DS    A                   ACQUIRED/FREE'D DCB ADDRESS #DD08268
WRKDDN@  DS    A,AL2               CURRENT DATASET'S DDNAME PDE
WRKDDN   DS    CL8                 VALIDATION DDNAME           #DD08099
WRKDDNEW DS    CL8                 CURRENT STEPLIB DDNAME
WRKDDOLD DS    CL8                 ORIGINAL STEPLIB DDNAME
WRKDDRET DS    CL8                 CURRENT DATASET'S RETURNED DDNAME
WRKDDTMP DS    CL8                 //STEPLIB REPLACEMENT NAME  #DD99245
WRKDSAB@ DS    A                   DSAB ADDRESS                #DD01068
WRKDSN@  DS    A,AL2               CURRENT DATASET NAME PDE
WRKDSN1  DS    CL44                CURRENT STEPLIB DATASET NAME
WRKDSN2  DS    CL44                CURRENT "INPUT" DATASET NAME
WRKECB   DS    A                   COMMAND PROCESSOR ECB
WRKECT@  DS    A                   ECT ADDRESS
WRKFAIL  DS    6F                  S99FAIL PARAMETER LIST
WRKFLAG1 DS    X                   FLAG BYTE #1
WRK$1STD EQU   BIT1   .1.. ....    - 1ST DSNAME ALLOCATED
WRK$ABND EQU   BIT2   ..1. ....    - ABEND DURING DSN OPEN     #DD08099
WRK$R112 EQU   BIT3   ...1 ....    - System is z/OS R1.12 or > #DD10050
WRKFUNC  DS    CL12                REQUESTED FUNCTION INSERT   #DD01072
WRKINSRT DS    AL2,AL2,CL80        PUTLINE MESSAGE INSERT
WRKIOPL  DS    4F                  IOPL
WRKIRB   DS    CL5                 "OPEN" OR "CLOSE"           #DD08268
WRKLCT@  DS    A                   LCT ADDRESS                 #DD99245
WRKTCB@  DS    A                   TCB ADDRESS                 #DD09103
WRKLOCAT DS    5F                  CATALOG LOCATE PLIST        #DD99244
WRKMSG   DS    AL2,AL2,CL256       PUTLINE MESSAGE AREA        #DD08098
WRKOLD   DS    F                   NUMBER OF MESSAGE SEGMENTS
         DS    A                   A(MESSAGE SEGMENT)
         DS    A                   A(MESSAGE INSERT SEGMENT)
WRKOPEN  DS    0F,CL(MODLOPEL)     CLOSE PARAMETER LIST        #DD08099
WRKPPL   DS    7F                  PARSE PARAMETER LIST
WRKPSWK  DS    F                   ORIGINAL PSW KEY            #DD08268
WRKPUTL  PUTLINE MF=L              PUTLINE PARAMETER LIST
WRKSEND  DS    18F                 REGISTER SAVE AREA          #DD09101
WRKPARM@ DS    A                   SCHEDIRB PARAMETER POINTER  #DD09103
WRKREGS  DS    18F                 REGISTER SAVE AREA
WRKREGS1 DS    18F                 REGISTER SAVE AREA          #DD08268
WRKREGS2 DS    18F                 REGISTER SAVE AREA          #DD08099
WRKREGS3 DS    18F                 REGISTER SAVE AREA          #DD08268
WRKTIME  DS    F                   PAUSE TIME                  #DD09027
WRKCPPL@ DS    A                   CPPL Address                #DD10106
WRKUPT@  DS    A                   UPT ADDRESS
WRKVOL   DS    CL6                 VOLUME OF CURRENT DATASET   #DD01073

WRKHEXIN DS    F                   BINARY TO CHARACTER INPUT   #DD08268
WRKHEXOU DS    XL8,CL1             BINARY TO CHARACTER OUTPUT  #DD08268
WRKJLB   DS    CL8                 TASKLIB DDNAME              #DD08268
WRKJSTCB DS    A                   JOBSTEP TCB ADDRESS         #DD08268
WRKTYPE  DS    C                   ADDRESS TYPE (T, J, S)      #DD08268
WRKSSID  DS    X                   Subsystem Identifier        #DD10106
WRKSTEP@ DS    A                   1st STEPLIB SIOT Address    #DD10177
WRKVAR@  DS    A                   &STEPLIB Data Address       #DD10177
WRKVARC@ DS    A                   Current Dsname Address      #DD10177
WRKVARL  DS    F                   &STEPLIB Data Length        #DD10177

CVARPARM DS    0D                  IKJCT441 Parameter List     #DD10177
CVAREC@  DS    A                   A(Entry Code)               #DD10177
CVARNPT@ DS    A                   A(Variable Name Pointer)    #DD10177
CVARNLN@ DS    A                   A(Variable Name Length Pointer) 0177
CVARDPT@ DS    A                   A(Variable Data)            #DD10177
CVARDLN@ DS    A                   A(Variable Data Length)     #DD10177
CVARTKN@ DS    A                   A(Token)                    #DD10177

CVARCODE DS    F                   Entry Code                  #DD10177
CVARN@   DS    A                   A(Variable Name)            #DD10177
CVARN    DS    CL8                 Variable Name               #DD10177
CVARL    DS    F                   Variable Name Length        #DD10177
CVARD@   DS    A                   A(Variable Data)            #DD10177
CVARDL   DS    F                   L(Variable Data)            #DD10177
CVARTKN  DS    D                   Token                       #DD10177
         #STOPWA ,

         PRINT NOGEN
*---------------------------------------------------------------------*
*                                                                     *
*        "STEPLIB" COMMAND KEYWORDS:                                  *
*                                                                     *
*        NOTE: SOME KEYWORDS (SHR & REUSE) ARE THERE SIMPLY TO MAKE   *
*              THE COMMAND LINE LOOK MORE LIKE AN "ALLOC" COMMAND.    *
*              A PREVIOUS VERSION HOOKED INTO THE "ALLOC" COMMAND,    *
*              AND REMOVED THE "STEPLIB" DDNAME RESTRICTION.          *
*              THIS VERSION WAS CREATED WHEN "USERMODS" WERE BEING    *
*              ELIMINATED FROM THE SYSTEM.                            *
*                                                                     *
*---------------------------------------------------------------------*
STEPLIB  CSECT ,

STEPPCL  IKJPARM

$TEPFUNC IKJKEYWD DEFAULT='ALLOCATE'
         IKJNAME 'ADD'
         IKJNAME 'ALLOCATE',ALIAS=('OVERRIDE','REPLACE')
         IKJNAME 'DESTACK',ALIAS='UNSTACK'                     #DD01072
         IKJNAME 'FREE',ALIAS='CLOSE'
         IKJNAME 'LIST'
         IKJNAME 'REMOVE',ALIAS='DELETE'
         IKJNAME 'SAVE',INSERT='NOMSGS'                        #DD10177
         IKJNAME 'STACK'                                       #DD01072
         IKJNAME 'VERSION'                                     #DD08098
$ADD     EQU     1                                             #DD01072
$ALLOC   EQU     2                                             #DD01072
$DESTACK EQU     3                                             #DD01072
$FREE    EQU     4                                             #DD01072
$LIST    EQU     5                                             #DD01072
$REMOVE  EQU     6                                             #DD01072
$SAVE    EQU     7                                             #DD10177
$STACK   EQU     8                                             #DD01072
$VERSION EQU     9                                             #DD08098

$TEPDSNS IKJKEYWD ,
         IKJNAME 'DATASETS',ALIAS='DSNAMES',SUBFLD=$TEPSUBF
$DSNS    EQU   1                                               #DD01072

$TEPDISP IKJKEYWD ,
         IKJNAME 'OLD'                                         #DD01072
         IKJNAME 'SHR'
$OLD     EQU   1                                               #DD01072
$SHR     EQU   2                                               #DD01072

$TEPREUS IKJKEYWD ,
         IKJNAME 'REUSE'

$TEPOPTS IKJKEYWD DEFAULT='FIRST'
         IKJNAME 'FIRST',ALIAS=('BEFORE','FRONT')
         IKJNAME 'LAST',ALIAS=('AFTER','END')
$FIRST   EQU   1                                               #DD01072
$LAST    EQU   2                                               #DD01072

$TEPMSGS IKJKEYWD DEFAULT='MSGS'
         IKJNAME 'MSGS',ALIAS=('LOUD','VERBOSE')
         IKJNAME 'NOMSGS',ALIAS=('QUIET','TERSE')
         IKJNAME 'DEBUG'                                       #DD08268
$MSGS    EQU   1                                               #DD01072
$NOMSGS  EQU   2                                               #DD01072
$DEBUG   EQU   3                                               #DD08268

$TEPAPF  IKJKEYWD DEFAULT='NOAPFCHK'                           #DD01073
         IKJNAME 'APFCHK'                                      #DD01073
         IKJNAME 'NOAPFCHK'                                    #DD01073
$APFCHK  EQU   1                                               #DD01073
$NOAPFCH EQU   2                                               #DD01073

$STEPAUS IKJKEYWD DEFAULT='PAUSE(1)'                           #DD09027
         IKJNAME 'PAUSE',SUBFLD=$PAUSESF                       #DD09027

$TEPSUBF IKJSUBF
$TEPLIST IKJPOSIT DSNAME,LIST,USID,UPPERCASE,                          *
               PROMPT='STEPLIB DATASET NAME(S)',VALIDCK=DDALLOC

$PAUSESF IKJSUBF ,                                             #DD09027
PAUSEPDE IKJIDENT 'PAUSE',MAXLNTH=1,FIRST=NUMERIC,INTEG        #DD09027

         IKJENDP

         PRINT GEN

*-------
*        DSECTS
*-------
         #DSECTS ALLOC,CVT,DCB,DEB,DSAB,ECT,IQE,LCT,PSA,RB,TCB,TCT,TSO,*
               ASCB,ASXB,JSCB,QDB,SDWA,SIOT,JFCB,SSIB,RB,CDE,  #DD08268*
               OUCB                                            #DD10106
         PRINT NOGEN
         IHADCBE ,                                             #DD10050
         IKJTSVT ,           TSO Vector Table                  #DD10177
         PRINT GEN

         AIF   (D'CVTZOS_V1R12).NOZR112                        #DD10050
CVTZOS_V1R12  EQU X'02'      z/OS V1R12                        #DD10050
.NOZR112 ANOP  ,                                               #DD10050

         END   ,

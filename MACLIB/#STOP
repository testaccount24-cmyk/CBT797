         MACRO ,
&NAME    #STOP &RC=,                    RETURN CODE                    X
               &R0=,                    R0 CONTENTS TO PASS BACK       X
               &R1=,                    R1 CONTENTS TO PASS BACK       X
               &WKREG=R9,               RC SAVE REGISTER               X
               &USE=BR                  RETURN TYPE (BR/BSM/SVC/PSARET)
.*
         SPLEVEL TEST                   OBTAIN SPLEVEL VALUE
.*
&NAME    #NULL ,                        #STOP MACRO
.*
.* DEFINE SYMBOLS NEEDED
.*
         GBLA  &STWAC                   COUNTER FOR DEFERED WA DEFINES
         GBLB  &STWA                    INDICATES CSECT HAS A WORK AREA
         GBLB  &STF(24)                 CONTROL FLAG BITS, AS FOLLOWS:
.*                                       (01) - PROC OPTION CODED
.*                                       (02) - MAIN OPTION CODED
.*                                       (03) - LIFO OPTION CODED
.*                                       (04) - WKCSECT OPTION CODED
.*                                       (05) - WKDSECT OPTION CODED
.*                                       (06) - #START HAS BEEN CODED
.*                                       (07) - ROUTINE IS AN SVC
.*                                       (08) - WORK FIELDS WANTED
.*                                       (09) - SVAREA=NO OPTION
.*                                       (10) - SAVE=YES OPTION
.*                                       (11) - RSECT=YES OPTION
.*                                       (12) - SVC=(YES,BRANCH)
.*                                       (13) - ENUC CAPPING
.*                                       (18) - EXTKEY= OPTION
.*                                       (22) - 64 BIT REGS
.*                                       (23) - #BAKR
         GBLC  &STACREG                 CAPWORD SAVE REGISTER
         GBLC  &STAGREG                 GET/FREEMAIN FORMAT
         GBLC  &STAMODE                 MODULE'S CAPPED AMODE
         GBLC  &STAXKEY                 SVC EXECUTION KEY
         GBLC  &STISASZ                 LIFO ISA SIZE
         GBLC  &STNAME                  MAIN CSECT NAME
         GBLC  &STPREF                  PREFIX CHARACTERS
         GBLC  &STSPN                   SUBPOOL NUMBER
         GBLC  &STWAD(1000)             WORK AREA DEFERED STACK
         GBLC  &STWANAM                 WORK AREA NAME
         GBLC  &SYSSPLV                 SPLEVEL
         LCLA  &A,&B,&C,&D,&E           LOCAL
         LCLB  &F,&G,&H,&I,&J           WORK
         LCLC  &K,&L,&M,&N,&O,&P        SYMBOLS
         LCLC  &XX1,&XX2,&R2
         AIF   (NOT &STF(23)).ST00050
         MNOTE 12,'#STOP NOT VALID AFTER #BAKR'
         MEXIT ,
.ST00050 ANOP  ,
&XX1     SETC  'BR'
&XX2     SETC  'R14'
         AIF   ('&STAMODE' NE '').ST00400 USE BR IF CAPPING
         AIF   ('&USE' NE 'BSM' AND NOT &STF(13)).ST00100
&XX1     SETC  'BSM'
&XX2     SETC  '0,R14'
         AIF   ('&SYSSPLV' NE '1').ST00400
         MNOTE 4,'**WARNING** USE=BSM CHANGED TO USE=PSARET BECAUSE SPLX
               EVEL=1'
         AGO   .ST00300
.ST00100 ANOP  ,
         AIF   ('&USE' NE 'SVC').ST00200
&XX1     SETC  'SVC'
&XX2     SETC  '3'
.ST00200 ANOP  ,
         AIF   ('&USE' NE 'PSA' AND '&USE' NE 'PSARET').ST00400
.ST00300 ANOP  ,
&XX1     SETC  'B'
&XX2     SETC  '890'
.ST00400 ANOP  ,
.*
.* INITIALIZE SYMBOLS, SET UP PREFIX, PICK UP ALL OPERANDS
.*
&P       SETC  '&STPREF'                PICK UP PREFIX
&N       SETC  '&STWANAM'               PICK UP WORK AREA NAME
.*
         AIF   (&STF(7)).ST04800        SVC EXIT HERE
.*
.*
.* THE FOLLOWING IS PRELIMINARIES, ETC
.*
         AIF   ('&R0' EQ '' AND '&R1' EQ '').ST01200   NO R0 OR R1
&R2      SETC  'R13'
         AIF   (&STF(09)).ST00600       SAVE=NO OPTION ?
         L     R2,4(0,R13)              PT TO CALLER'S SAVE AREA
&R2      SETC  'R2'
.ST00600 ANOP  ,
         AIF   ('&R0' EQ '').ST00900   NO R0, CONTINUE
         AIF   ('&R0' EQ '0' OR '&R0' EQ 'R0').ST00800   0 OR R0
         AIF   ('&R0' EQ '(0)' OR '&R0' EQ '(R0)').ST00800
         AIF   ('&R0'(1,1) EQ '(').ST00700   ANOTHER REGISTER
         AIF   (NOT &STF(22)).ST00650   NOT 64 BIT REGS
         LGHI  R0,&R0                   R0 HAS RETURN VALUE
         AGO   .ST00800
.ST00650 ANOP  ,
         LA    R0,&R0                   R0 HAS RETURN VALUE
         AGO   .ST00800                 CONTINUE
.ST00700 ANOP  ,
         AIF   (NOT &STF(22)).ST00750   NOT 64 BIT REGS
         LGR   R0,&R0(1)                R0 HAS RETURN VALUE
         AGO   .ST00800
.ST00750 ANOP  ,
         LR    R0,&R0(1)                R0 HAS RETURN VALUE
.ST00800 ANOP  ,
         ST    R0,20(&R2,0)             IN SAVE AREA
         AIF   (NOT &STF(22)).ST00900   NOT 64 BIT REGS
         STCMH R0,15,&P.HISAVE          SAVE HIGH WORD
.ST00900 ANOP  ,
         AIF   ('&R1' EQ '').ST01200    NO R1, CONTINUE
         AIF   ('&R1' EQ '1' OR '&R1' EQ 'R1').ST01100   1 OR R1
         AIF   ('&R1' EQ '(1)' OR '&R1' EQ '(R1)').ST01100
         AIF   ('&R1'(1,1) EQ '(').ST01000   ANOTHER REGISTER
         AIF   (NOT &STF(22)).ST00950   NOT 64 BIT REGS
         LGHI  R1,&R1                   R1 HAS RETURN VALUE
         AGO   .ST01100
.ST00950 ANOP  ,
         LA    R1,&R1                   R1 HAS RETURN VALUE
         AGO   .ST01100                 CONTINUE
.ST01000 ANOP  ,
         AIF   (NOT &STF(22)).ST01050   NOT 64 BIT REGS
         LGR   R1,&R1(1)                R1 HAS RETURN VALUE
         AGO   .ST01100
.ST01050 ANOP  ,
         LR    R1,&R1(1)                R1 HAS RETURN VALUE
.ST01100 ANOP  ,
         ST    R1,24(&R2,0)             IN SAVE AREA
         AIF   (NOT &STF(22)).ST01200   NOT 64 BIT REGS
         STCMH R1,15,&P.HISAVE+4        SAVE HIGH WORD
.ST01200 ANOP  ,
         AIF   ('&RC' EQ '').ST01400    NO RETURN CODE SUPPLIED
         AIF   ('&RC'(1,1) EQ '(').ST01300   RETURN CODE IS A REG
         LA    R15,&RC                  R15 HAS RETURN CODE
         AGO   .ST01600                 CONTINUE
.ST01300 ANOP  ,
         AIF   ('&RC' EQ '(15)' OR '&RC' EQ '(R15)').ST01600
         LR    R15,&RC(1)               R15 HAS RETURN CODE
         AGO   .ST01600                 CONTINUE
.ST01400 ANOP  ,
         AIF   (NOT &STWA).ST01500      NO WORK AREA, CONTINUE
         L     R15,&P.RCODE             R15 HAS RETURN CODE
         AGO   .ST01600                 CONTINUE
.ST01500 ANOP  ,
         SR    R15,R15                  SET RETURN CODE TO ZERO
.*
.* THE FOLLOWING IS FOR NO WORK AREA OPTION, WKCSECT OPTION, AND THE
.* PROC OPTION BUT NOT PROC(MAIN), LIFO OR PLAIN WKDSECT OPTIONS
.*
.ST01600 ANOP  ,
         AIF   (&STF(2) OR &STF(3)).ST01900   MAIN OR LIFO, CONTINUE
         AIF   (&STF(5) AND NOT &STF(1)).ST01900   WKDSECT, CONTINUE
         AIF   (NOT &STF(10)).ST02500   SAVE=NO OPTION ?
         AIF   ('&STAMODE' EQ '').ST01800 CAPPED CODE ?
         AIF   ('&STACREG' EQ '').ST01700
         LR    R2,&STACREG              RETRIEVE CAP WORD
         AGO   .ST01800
.ST01700 ANOP  ,
         L     R2,&P.CAPWD              RETRIEVE CAP WORD
.ST01800 ANOP  ,
         AIF   (&STF(9)).ST02500        SVAREA=NO OPTION ?
         L     R13,4(0,R13)             RESTORE CALLER'S SAVE AREA
         AGO   .ST02500                 BR TO COMMON CODE
.*
.* THE FOLLOWING IS FOR A PLAIN WKDSECT OPTION
.*
.ST01900 ANOP  ,
         AIF   (&STF(2) OR &STF(3)).ST03400   MAIN OR LIFO, CONTINUE
         LR    R1,R13                   SAVE WORK AREA ADDRESS
         AIF   ('&STAMODE' EQ '').ST02100 CAPPED CODE ?
         AIF   ('&STACREG' EQ '').ST02000
         LR    R2,&STACREG              RETRIEVE CAP WORD
         AGO   .ST02100
.ST02000 ANOP  ,
         L     R2,&P.CAPWD              RETRIEVE CAP WORD
.ST02100 ANOP  ,
         AIF   (NOT &STF(18)).ST02150
         L     R3,&P.IPK                LOAD ORIGINAL PROTECT KEY
.ST02150 ANOP  ,
         AIF   (NOT &STF(10)).ST02800   JUMP IF SAVE=NO
         L     R13,4(0,R13)             RESTORE CALLER'S SAVE AREA
         LR    &WKREG,R15               SAVE RETURN CODE
         AIF   (&STF(17)).ST02200
         MNOTE '         FREEMAIN &STAGREG,LV=&P.WALEN,A=(1),SP=&STSPN'
         FREEMAIN &STAGREG,LV=&P.WALEN,A=(1),SP=&STSPN
         AGO   .ST02300
.ST02200 ANOP  ,
.*       ADD SUPPORT FOR CALLRKY TO HANDLE SP=230 PROPERLY
         MNOTE '         STORAGE RELEASE,LENGTH=&P.WALEN,ADDR=(1),SP=&SX
               TSPN,CALLRKY=YES'
         STORAGE RELEASE,LENGTH=&P.WALEN,ADDR=(1),SP=&STSPN,CALLRKY=YES
.ST02300 ANOP  ,
         AIF   (NOT &STF(18)).ST02400
         SPKA  0(R3)                    RETURN TO ORIGINAL PROTECT KEY
.ST02400 ANOP  ,
         LR    R15,&WKREG               RESTORE RETURN CODE
.*
.ST02500 ANOP  ,
         AIF   ('&STAMODE' EQ '').ST02700 CAPPED CODE ?
         AIF   ('&SYSSPLV' NE '1').ST02600
         L     R1,16                    POINT TO CVT
         TM    116(R1),128              IS THIS MVS/XA ?
         BZR   R2                       NO, DO NOT CAP
.ST02600 ANOP  ,
         BSM   0,R2                     RESUME CALLER'S AMODE
&K       SETC  '&P.RRR14'
.ST02700 ANOP  ,
&K       L     R14,12(0,R13)            RESTORE REGISTER 14
         LM    R0,R12,20(R13)           RESTORE REGISTERS 0-12
         &XX1  &XX2                     RETURN TO CALLER
         SPACE 1
         MEXIT ,
.*
.ST02800 ANOP  ,
         LR    R13,R15                  SAVE RETURN CODE
         L     R0,=A(&P.WALEN)
         AIF   (&STF(17)).ST02900
         MNOTE '         FREEMAIN &STAGREG,LV=&P.WALEN,A=(1),SP=&STSPN'
         FREEMAIN &STAGREG,LV=&P.WALEN,A=(1),SP=&STSPN
         AGO   .ST03000
.ST02900 ANOP  ,
.*       ADD SUPPORT FOR CALLRKY TO HANDLE SP=230 PROPERLY
         MNOTE '         STORAGE RELEASE,LENGTH=&P.WALEN,ADDR=(1),SP=&SX
               TSPN,CALLRKY=YES'
         STORAGE RELEASE,LENGTH=&P.WALEN,ADDR=(1),SP=&STSPN,CALLRKY=YES
.ST03000 ANOP  ,
         AIF   (NOT &STF(18)).ST03100
         SPKA  0(R3)                    RETURN TO ORIGINAL PROTECT KEY
.ST03100 ANOP  ,
         LR    R15,R13                  SET RETURN CODE
         AIF   ('&STAMODE' EQ '').ST03300 CAPPED CODE ?
         AIF   ('&SYSSPLV' NE '1').ST03200
         L     R1,16                    POINT TO CVT
         TM    116(R1),128              IS THIS MVS/XA ?
         BZR   R2                       NO, DO NOT CAP
.ST03200 ANOP  ,
         BSM   0,R2                     RESUME CALLER'S AMODE
&K       SETC  '&P.RRR14'
.ST03300 ANOP  ,
&K       &XX1  &XX2                     RETURN TO CALLER
         SPACE 1
         MEXIT ,
.*
.* FOLLOWING IS FOR PROC, LIFO OPTIONS
.*
.ST03400 ANOP  ,
         AIF   (&STF(2)).ST04000        MAIN OPTION, CONTINUE
         LR    R1,R13                   SAVE WORK AREA ADDRESS
         AIF   ('&STAMODE' EQ '').ST03600 CAPPED CODE ?
         AIF   ('&STACREG' EQ '').ST03500
         LR    R2,&STACREG              RETRIEVE CAP WORD
         AGO   .ST03600
.ST03500 ANOP  ,
         L     R2,&P.CAPWD              RETRIEVE CAP WORD
.ST03600 ANOP  ,
         AIF   (NOT &STF(22)).ST03650   NOT 64 BIT REGS
         LMH   R0,R12,&P.HISAVE         RESTORE HIGH WORDS
.ST03650 ANOP  ,
         L     R13,4(R13)            RESTORE CALLER'S SAVE AREA
         ST    R15,16(R13)           STORE RETURN CODE
         LR    R0,R1                    PT TO AREA TO FREE
         L     R1,0(R13)                PT TO MODULE COMM AREA
         L     R15,&P.#FRE-&P.MCA(R1)   PT TO LIFO FREE ROUTINE
         BALR  R14,R15                  GO FREE WORK AREA FROM STACK
.ST03700 ANOP  ,
         AIF   ('&STAMODE' EQ '').ST03900 CAPPED CODE ?
         AIF   ('&SYSSPLV' NE '1').ST03800
         L     R1,16                    POINT TO CVT
         TM    116(R1),128              IS THIS MVS/XA ?
         BZR   R2                       NO, DO NOT CAP
.ST03800 ANOP  ,
         BSM   0,R2                     RESUME CALLER'S AMODE
&K       SETC  '&P.RRR14'
.ST03900 ANOP  ,
&K       LM    R14,R12,12(R13)          RESTORE CALLER'S REGISTERS
         &XX1  &XX2                     RETURN TO CALLER
         SPACE 1
         MEXIT ,                        EXIT
.*
.* FOLLOWING IS FOR PROC(MAIN) WITH OR WITHOUT LIFO OPTION
.*
.ST04000 ANOP  ,
         L     R1,0(0,R13)              R1 HAS MCA ADDRESS
         L     R1,&P.#O-&P.MCA(0,R1)    PT TO GETMAINED AREA
         AIF   ('&STAMODE' EQ '').ST04200 CAPPED CODE ?
         AIF   ('&STACREG' EQ '').ST04100
         LR    R2,&STACREG              RETRIEVE CAP WORD
         AGO   .ST04200
.ST04100 ANOP  ,
         L     R2,&P.CAPWD              RETRIEVE CAP WORD
.ST04200 ANOP  ,
         AIF   (NOT &STF(18)).ST04250
         L     R3,&P.IPK                LOAD ORIGINAL PROTECT KEY
.ST04250 ANOP  ,
         L     R13,4(0,R13)             RESTORE CALLER'S SAVE AREA
         ST    R15,16(0,R13)            STORE RETURN CODE
         #RLIF R15,&P.GSIZE             R15 = LENGTH OF LIFO STACK
         LR    R0,R15                   R0 HAS LENGTH OF LIFO STACK
         AIF   (&STF(17)).ST04300
         MNOTE '         FREEMAIN &STAGREG,LV=(0),A=(1),SP=&STSPN'
         FREEMAIN &STAGREG,LV=(0),A=(1),SP=&STSPN
         AGO   .ST04400
.ST04300 ANOP  ,
.*       ADD SUPPORT FOR CALLRKY TO HANDLE SP=230 PROPERLY
         MNOTE '         STORAGE RELEASE,LENGTH=(0),ADDR=(1),SP=&STSPN,X
               CALLRKY=YES'
         STORAGE RELEASE,LENGTH=(0),ADDR=(1),SP=&STSPN,CALLRKY=YES
.ST04400 ANOP  ,
         AIF   (NOT &STF(18)).ST04500
         SPKA  0(R3)                    RETURN TO ORIGINAL PROTECT KEY
.ST04500 ANOP  ,
         AIF   ('&STAMODE' EQ '').ST04700 CAPPED CODE ?
         AIF   ('&SYSSPLV' NE '1').ST04600
         L     R1,16                    POINT TO CVT
         TM    116(R1),128              IS THIS MVS/XA ?
         BZR   R2                       NO, DO NOT CAP
.ST04600 ANOP  ,
         BSM   0,R2                     RESUME CALLER'S AMODE
&K       SETC  '&P.RRR14'
.ST04700 ANOP  ,
&K       LM    R14,R12,12(R13)          RESTORE CALLER'S REGISTERS
         &XX1  &XX2                     RETURN TO CALLER
         SPACE 1
         AGO   .ST06400                 GO TO LIFO CHECK
.*
.* FOLLOWING IS FOR SVC TYPE LINKAGES
.*
.ST04800 ANOP  ,
         AIF   ('&R0' EQ '').ST05000   NO R0, CONTINUE
         AIF   ('&R0' EQ '0' OR '&R0' EQ 'R0').ST05000   0 OR R0
         AIF   ('&R0' EQ '(0)' OR '&R0' EQ '(R0)').ST05000   0 OR R0
         AIF   ('&R0'(1,1) EQ '(').ST04900   ANOTHER REGISTER
         LA    R0,&R0                   R0 HAS RETURN VALUE
         AGO   .ST05000                 CONTINUE
.ST04900 ANOP  ,
         LR    R0,&R0(1)                R0 HAS RETURN VALUE
.*
.ST05000 ANOP  ,
         AIF   ('&R1' EQ '').ST05200    NO R1, CONTINUE
         AIF   ('&R1' EQ '1' OR '&R1' EQ 'R1').ST05200   1 OR R1
         AIF   ('&R1' EQ '(1)' OR '&R1' EQ '(R1)').ST05200   1 OR R1
         AIF   ('&R1'(1,1) EQ '(').ST05100   ANOTHER REGISTER
         LA    R1,&R1                   R1 HAS RETURN VALUE
         AGO   .ST05200                 CONTINUE
.ST05100 ANOP  ,
         LR    R1,&R1(1)                R1 HAS RETURN VALUE
.*
.ST05200 ANOP  ,
         AIF   ('&RC' EQ '').ST05400    NO RETURN CODE SUPPLIED
         AIF   ('&RC' EQ '(15)' OR  '&RC' EQ '(R15)').ST05600
         AIF   ('&RC'(1,1) EQ '(').ST05300   RETURN CODE IS A REG
         LA    R15,&RC                  R15 HAS RETURN CODE
         AGO   .ST05600                 CONTINUE
.ST05300 ANOP  ,
         LR    R15,&RC(1)               R15 HAS RETURN CODE
         AGO   .ST05600                 CONTINUE
.ST05400 ANOP  ,
         AIF   (NOT &STWA).ST05500      NO WORK AREA, CONTINUE
         L     R15,&P.RCODE             R15 HAS RETURN CODE
         AGO   .ST05600                 CONTINUE
.ST05500 ANOP  ,
         SR    R15,R15                  SET RETURN CODE TO ZERO
.*
.ST05600 ANOP  ,
         AIF   (&STF(2) OR &STF(3)).ST05700     MAIN OR LIFO
         AIF   (&STWA).ST05700          WORK AREA TO FREE
         &XX1  &XX2                     RETURN TO SVC IH
         SPACE 1
         AGO   .ST06400
.*
.ST05700 ANOP  ,
         L     R14,0(0,R13)             RELOAD RETURN ADDRESS
         LR    R4,R15                   SAVE RETURN CODE
         LR    R2,R0
         LR    R5,R1
         AIF   (NOT &STF(18)).ST05800
         L     R3,&P.IPK                LOAD ORIGINAL PROTECT KEY
.ST05800 ANOP  ,
         LR    R1,R13                   WORK AREA ADDR IN REG 1
         AIF   (&STF(17)).ST06000
         AIF   (&STF(12)).ST05900
         MNOTE '         FREEMAIN &STAGREG,LV=&P.WALEN,A=(1),SP=&STSPN'
         FREEMAIN &STAGREG,LV=&P.WALEN,A=(1),SP=&STSPN
         AGO   .ST06100
.ST05900 ANOP  ,
         LR    &WKREG,R14               SAVE REG 14
         MNOTE '         FREEMAIN &STAGREG,LV=&P.WALEN,A=(1),SP=&STSPN,X
               BRANCH=YES'
         FREEMAIN &STAGREG,LV=&P.WALEN,A=(1),SP=&STSPN,BRANCH=YES
         LR    R14,&WKREG               RESTORE REG 14
         AGO   .ST06100
.ST06000 ANOP  ,
.*       ADD SUPPORT FOR CALLRKY TO HANDLE SP=230 PROPERLY
         LR    &WKREG,R14               SAVE REG 14
         MNOTE '         STORAGE RELEASE,LENGTH=&P.WALEN,ADDR=(1),SP=&SX
               TSPN,CALLRKY=YES'
         STORAGE RELEASE,LENGTH=&P.WALEN,ADDR=(1),SP=&STSPN,CALLRKY=YES
         LR    R14,&WKREG               RESTORE REG 14
.ST06100 ANOP  ,
         AIF   (NOT &STF(18)).ST06200
         SPKA  0(R3)                    RETURN TO ORIGINAL PROTECT KEY
.ST06200 ANOP  ,
         LR    R0,R2                    RELOAD REGS
         LR    R1,R5
.ST06300 ANOP  ,
         LR    R15,R4
         &XX1  &XX2                     RETURN TO SVC IH
         SPACE 1
.*
.* THE FOLLOWING IS FOR PROC(MAIN) AND LIFO OPTIONS
.*
.ST06400 ANOP  ,
         AIF   (NOT &STF(3)).MEND       NOT LIFO, ALL FINISHED
         AIF   (T'#####GET NE 'U').MEND AVOID DUPLICATE DEFINITION
***********************************************************************
*
*        LIFO STACK GET/FREE STORAGE ROUTINES
*
         PUSH  USING
         DROP  ,
*                                       R1 POINTS TO MCA
#####GET RSECT ,                        LIFO GET ROUTINE
#####GET AMODE ANY
#####GET RMODE ANY
         AHI   R0,7                     ROUND REQUEST UP TO
         LHI   R15,-8                   A DOUBLEWORD BOUNDARY
         NR    R0,R15                   .
         A     R0,&P.#N-&P.MCA(R1)   PT TO NEXT FREE LIFO SLOT
         CL    R0,&P.#E-&P.MCA(R1)   IF WE'VE GONE PAST THE END
         JH    &P.GA                 OF THE STACK, ABEND
         L     R15,&P.#N-&P.MCA(R1)     PT TO ALLOCATED SLOT
         ST    R0,&P.#N-&P.MCA(R1)      SAVE ADDR. OF NEXT SLOT
         LR    R1,R15                   MOVE SLOT POINTER
         BR    R14                      RETURN TO CALLER, R1 @ SLOT
*        ABEND 1000,DUMP                STACK TOO SMALL, USE ISA=
&P.GA    LA    R1,1000                  LOAD ABEND CODE
         LHI   R15,1                    CREATE THE MOST SIGNIF.
         SLL   R15,31                   . BIT
         OR    R1,R15                   TURN ON DUMP FLAG
         SVC   13                       ISSUE ABEND SVC
         SPACE 1
         ENTRY ####FREE                 LIFO FREE ROUTINE
####FREE CL    R0,&P.#S-&P.MCA(R1)      ENSURE THE ADDRESS
         JL    &P.FA                    TO BE FREE'ED
         CL    R0,&P.#E-&P.MCA(R1)     IS WITHIN THE BOUNDARIES
         JH    &P.FA                    OF THE CUR.STACK ELEM.
         AHI   R0,7                    FORCE AREA TO BE FREE'ED
         LHI   R15,-8                   TO DOUBLEWORD BOUNDARY
         NR    R0,R15                   .
         ST    R0,&P.#N-&P.MCA(R1)   SAVE @ NEXT FREE LIFO SLOT
         BR    R14                      RETURN TO CALLER
*
&P.FA    LA    R1,1001                  LOAD ABEND CODE
         LHI   R15,1                    CREATE THE MOST SIGNIF.
         SLL   R15,31                   . BIT
         OR    R1,R15                   TURN ON DUMP FLAG
         SVC   13                       ISSUE ABEND SVC
         SPACE 1
         CNOP  0,4                      GET FULLWORD BOUNDARY
         POP   USING                    KILL ADDRESSABILITY
         SPACE 1
         AIF   (&STF(11)).ST06600
&SYSECT  CSECT ,                        RESUME MAIN PROGRAM CSECT
         MEXIT ,
.ST06600 ANOP  ,
&SYSECT  RSECT ,                        RESUME MAIN PROGRAM RSECT
.MEND    MEND  ,

         MACRO ,
&NAME    #CTGFV &TYPE=,                 CATALOG RECORD TYPE            X
               &OPTIONS=,               CATLG MGMT SERVICES OPTIONS    X
               &NUMBER=,                ELEMENT NUMBER OF CMSPCATR     X
               &DATA=,                  CLUSTERS DATA  CTGFV           X
               &INDEX=,                 CLUSTERS INDEX CTGFV           X
               &VOLUME=,                SPACE CTGFV                    X
               &FILE=,                  ADDRESS OF JCL DD STATEMENT    X
               &ENTRY=,                 ENTRY NAME CTGFL               X
               &SEC=,                   SECURITY INFORMATION CTGFL     X
               &OWNER=,                 OWNER IDENTIFICATION CTGFL     X
               &EXPDT=,                 EXPIRATION DATE CTGFL          X
               &CREDT=,                 CREATION DATE CTGFL            X
               &VOLSER=,                VOLUME SERIAL NUMBER LIST      X
               &KEY=,                   KEY RANGE LIST                 X
               &DEVT=,                  DEVICE TYPE CTGFL              X
               &SPACE=,                 SPACE ALLOCATION CTGFL         X
               &AMDSB=,                 AMDSB CTGFL                    X
               &SEQ=,                   SEQUENCE NUMBER CTGFL          X
               &ATTR=,                  DATASET ATTIBUTES CTGFL        X
               &BUFFSIZ=,               BUFFER SIZE CTGFL              X
               &RECSIZ=,                AVERAGE RECORD SIZE CTGFL      X
               &GDGLIM=,                GDG LIMIT CTGFL                X
               &EXIT=,                  EXCEPTION EXIT PARAMETER LIST  X
               &GDGATTR=,               GDG ATTRIBUTES CTGFL           X
               &TRUENM=,                TRUE NAME CTGFL                X
               &PASSWRD=,                RELATED OBJECT'S PASSWORD     X
               &FEEDBK=,                CRA FEEDBACK AREA              X
               &MF=L                    MACRO FORMAT
.**********************************************************************
         LCLC  &REG
.*
.*       Note:
.*           The #CTGFL/#CTGPL & #GETFL macros are used in building
.*           SVC 26 parameter lists.
.*           The CSI is now available but at the time that these macros
.*           were developed this facility was not available.
.*           Use at your own risk.
.*
.*           Please refer to CBT File 689 for SVC 26 parameter list
.*           documentation.
.*
.**********************************************************************
.*  PARSE THE MF PARAMETER                                            *
.**********************************************************************
.MF1     ANOP  ,
         AIF   (N'&MF NE 1).MF2               CHECK FOR MF=?
         AIF   ('&MF' EQ 'L').LFORM1          NOT MF=L => ERROR
.MF2     AIF   (N'&MF NE 2).MFERR             MF NOT (?,?) => ERROR
         AIF   ('&MF(1)' EQ 'E').EFORM1       MF NOT (E,?) => ERROR
.MFERR   ANOP  ,
         MNOTE 8,'Invalid MF Parameter' ERROR *  INVALID MF=
         MEXIT ,
.**********************************************************************
.* GENERATE THE LIST FORM OF THE #CTGFV MACRO                         *
.**********************************************************************
.LFORM1  ANOP  ,
         MNOTE 8,'List Form Not Available At This Time'
         MEXIT ,
.**********************************************************************
.* GENERATE THE EXECUTE FORM OF THE #CTGFV MACRO                      *
.**********************************************************************
.EFORM1  ANOP  ,
         PUSH  USING
         USING CTGFV,15                 ADDRESS THE CTGFV
         AIF   ('&MF(2)'(1,1) EQ '(').EFORM2   CHECK IF REG SPECIFIED
&NAME    LA    15,&MF(2)                >>--> FIELD VECTOR TABLE
         AGO   .TYPE1
.EFORM2  ANOP  ,
&REG     SETC  '&MF(2)'(2,K'&MF(2)-2)   STRIP THE PARENTHESIS
&NAME    LR    15,&REG                  >>--> FIELD VECTOR TABLE
.**********************************************************************
.* UPDATE THE TYPE FIELD                                              *
.**********************************************************************
.TYPE1   ANOP  ,
         AIF   ('&TYPE'(1,1) EQ '(').TYPE2    CHECK IF REG SPECIFIED
         MVI   CTGFVTYP,&TYPE           INSERT RECORD TYPE
         AGO   .OPTION1
.TYPE2   ANOP  ,
&REG     SETC  '&TYPE'(2,K'&TYPE-2)     STRIP THE PARENTHESIS
         STC   &REG,CTGFVTYP            INSERT RECORD TYPE
.**********************************************************************
.* UPDATE THE CATALOG MANAGEMENT SERVICES PROCESSING OPTIONS          *
.**********************************************************************
.OPTION1 ANOP  ,
         AGO   .NUMBER1
.**********************************************************************
.* UPDATE THE ELEMENT NUMBER OF CMSPCATR                              *
.**********************************************************************
.NUMBER1 ANOP  ,
         AIF   ('&NUMBER' EQ '').DATA1        SKIP IF NOT SPECIFIED
         AIF   ('&NUMBER'(1,1) EQ '(').NUMBER2 CHECK IF REG SPECIFIED
         MVI   CTGFVELM,&NUMBER         INSERT ELEMENT NUMBER
         AGO   .DATA1
.NUMBER2 ANOP  ,
&REG     SETC  '&NUMBER'(2,K'&NUMBER-2) STRIP THE PARENTHESIS
         STC   &REG,CTGFVELM            INSERT ELEMENT NUMBER
.**********************************************************************
.* UPDATE THE ADDRESS OF THE CLUSTER'S DATA CTGFV                     *
.**********************************************************************
.DATA1   ANOP  ,
         AIF   ('&DATA' EQ '').INDEX1         SKIP IF NOT SPECIFIED
         AIF   ('&DATA'(1,1) EQ '(').DATA2    CHECK IF REG SPECIFIED
         LA    R0,&DATA                 SAVE ADDRESS OF THE
         ST    R0,CTGFVDCH              CLUSTER'S DATA CTGFV
         AGO   .INDEX1
.DATA2   ANOP  ,
&REG     SETC  '&DATA'(2,K'&DATA-2)     STRIP THE PARENTHESIS
         ST    &REG,CTGFVDCH            SAVE DATA PORTION CTGFV
.**********************************************************************
.* UPDATE THE ADDRESS OF THE CLUSTER'S INDEX CTGFV                    *
.**********************************************************************
.INDEX1  ANOP  ,
         AIF   ('&INDEX' EQ '').VOLUME1       SKIP IF NOT SPECIFIED
         AIF   ('&INDEX'(1,1) EQ '(').INDEX2   CHECK IF REG SPECIFIED
         LA    R0,&INDEX                SAVE ADDRESS OF THE
         ST    R0,CTGFVICH              CLUSTER'S INDEX CTGFV
         AGO   .VOLUME1
.INDEX2  ANOP  ,
&REG     SETC  '&INDEX'(2,K'&INDEX-2)   STRIP THE PARENTHESIS
         ST    &REG,CTGFVICH            SAVE INDEX PORTION CTGFV
.**********************************************************************
.* UPDATE THE ADDRESS OF THE SPACE CTGFV                              *
.**********************************************************************
.VOLUME1 ANOP  ,
         AIF   ('&VOLUME' EQ '').FILE1        SKIP IF NOT SPECIFIED
         AIF   ('&VOLUME'(1,1) EQ '(').VOLUME2   CHECK IF REG SPECIFIED
         LA    R0,&VOLUME               SAVE ADDRESS OF THE
         ST    R0,CTGFVVCH              SPACE CTGFV
         AGO   .FILE1
.VOLUME2 ANOP  ,
&REG     SETC  '&VOLUME'(2,K'&VOLUME-2) STRIP THE PARENTHESIS
         ST    &REG,CTGFVVCH            SAVE SPACE CTGFV
.**********************************************************************
.* UPDATE THE ADDRESS OF THE ASSOCIATED JCL DD STATEMENT              *
.**********************************************************************
.FILE1   ANOP  ,
         AIF   ('&FILE' EQ '').ENTRY1         SKIP IF NOT SPECIFIED
         AIF   ('&FILE'(1,1) EQ '(').FILE2    CHECK IF REG SPECIFIED
         LA    R0,&FILE                 SAVE ADDRESS OF THE
         ST    R0,CTGFVIND              JCL DD STATEMENT
         AGO   .ENTRY1
.FILE2   ANOP  ,
&REG     SETC  '&FILE'(2,K'&FILE-2)     STRIP THE PARENTHESIS
         ST    &REG,CTGFVIND            SAVE JCL DD STMT ADDR
.**********************************************************************
.* UPDATE THE ADDRESS OF THE ENTRY NAME CTGFL                         *
.**********************************************************************
.ENTRY1  ANOP  ,
         AIF   ('&ENTRY' EQ '').SECUR1        SKIP IF NOT SPECIFIED
         AIF   ('&ENTRY'(1,1) EQ '(').ENTRY2   CHECK IF REG SPECIFIED
         LA    R0,&ENTRY                SAVE ADDRESS OF THE
         ST    R0,CTGFVENT              ENTRY NAME CTGFL
         AGO   .SECUR1
.ENTRY2  ANOP  ,
&REG     SETC  '&ENTRY'(2,K'&ENTRY-2)   STRIP THE PARENTHESIS
         ST    &REG,CTGFVENT            SAVE ENTRY NAME CTGFV
.**********************************************************************
.* UPDATE THE ADDRESS OF THE SECURITY INFORMATION CTGFL               *
.**********************************************************************
.SECUR1  ANOP  ,
         AIF   ('&SEC' EQ '').OWNER1          SKIP IF NOT SPECIFIED
         AIF   ('&SEC'(1,1) EQ '(').SECUR2    CHECK IF REG SPECIFIED
         LA    R0,&SEC                  SAVE ADDRESS OF THE
         ST    R0,CTGFVSTY              SECURITY INFO CTGFL
         AGO   .OWNER1
.SECUR2  ANOP  ,
&REG     SETC  '&SEC'(2,K'&SEC-2)       STRIP THE PARENTHESIS
         ST    &REG,CTGFVSTY            SAVE SECURITY CTGFV
.**********************************************************************
.* UPDATE THE ADDRESS OF THE OWNER IDENTIFICATION CTGFL               *
.**********************************************************************
.OWNER1  ANOP  ,
         AIF   ('&OWNER' EQ '').EXPDT1        SKIP IF NOT SPECIFIED
         AIF   ('&OWNER'(1,1) EQ '(').OWNER2   CHECK IF REG SPECIFIED
         LA    R0,&OWNER                SAVE ADDRESS OF THE
         ST    R0,CTGFVOWN              OWNER IDENT CTGFL
         AGO   .EXPDT1
.OWNER2  ANOP  ,
&REG     SETC  '&OWNER'(2,K'&OWNER-2)   STRIP THE PARENTHESIS
         ST    &REG,CTGFVOWN            SAVE SECURITY CTGFV
.**********************************************************************
.* UPDATE THE ADDRESS OF THE EXPIRATION DATE CTGFL                    *
.**********************************************************************
.EXPDT1  ANOP  ,
         AIF   ('&EXPDT' EQ '').CREDT1        SKIP IF NOT SPECIFIED
         AIF   ('&EXPDT'(1,1) EQ '(').EXPDT2   CHECK IF REG SPECIFIED
         LA    R0,&EXPDT                SAVE ADDRESS OF THE
         ST    R0,CTGFVEXP              EXPIRY DATE CTGFL
         AGO   .CREDT1
.EXPDT2  ANOP  ,
&REG     SETC  '&EXPDT'(2,K'&EXPDT-2)   STRIP THE PARENTHESIS
         ST    &REG,CTGFVEXP            SAVE EXPIRY DATE CTGFV
.**********************************************************************
.* UPDATE THE ADDRESS OF THE CREATION DATE CTGFL                      *
.**********************************************************************
.CREDT1  ANOP  ,
         AIF   ('&CREDT' EQ '').VOLSER1       SKIP IF NOT SPECIFIED
         AIF   ('&CREDT'(1,1) EQ '(').CREDT2   CHECK IF REG SPECIFIED
         LA    R0,&CREDT                SAVE ADDRESS OF THE
         ST    R0,CTGFVCRE              CREATE DATE CTGFL
         AGO   .VOLSER1
.CREDT2  ANOP  ,
&REG     SETC  '&CREDT'(2,K'&CREDT-2)   STRIP THE PARENTHESIS
         ST    &REG,CTGFVCRE            SAVE CREATE DATE CTGFV
.**********************************************************************
.* UPDATE THE ADDRESS OF THE VOLUME SERIAL NUMBER LIST                *
.**********************************************************************
.VOLSER1 ANOP  ,
         AIF   ('&VOLSER' EQ '').KEY1         SKIP IF NOT SPECIFIED
         AIF   ('&VOLSER'(1,1) EQ '(').VOLSER2   CHECK IF REG SPECIFIED
         LA    R0,&VOLSER               SAVE ADDRESS OF THE
         ST    R0,CTGFVVLT              VOLUME SERIAL LIST
         AGO   .KEY1
.VOLSER2 ANOP  ,
&REG     SETC  '&VOLSER'(2,K'&VOLSER-2) STRIP THE PARENTHESIS
         ST    &REG,CTGFVVLT            SAVE VOLUME SERIAL LIST
.**********************************************************************
.* UPDATE THE ADDRESS OF THE KEY RANGE LIST                           *
.**********************************************************************
.KEY1    ANOP  ,
         AIF   ('&KEY' EQ '').DEVT1           SKIP IF NOT SPECIFIED
         AIF   ('&KEY'(1,1) EQ '(').KEY2      CHECK IF REG SPECIFIED
         LA    R0,&KEY                  SAVE ADDRESS OF THE
         ST    R0,CTGFVRNG              KEY RANGE LIST
         AGO   .DEVT1
.KEY2    ANOP  ,
&REG     SETC  '&KEY'(2,K'&KEY-2)       STRIP THE PARENTHESIS
         ST    &REG,CTGFVRNG            SAVE KEY RANGE LIST
.**********************************************************************
.* UPDATE THE ADDRESS OF THE DEVICE TYPE CTGFL                        *
.**********************************************************************
.DEVT1   ANOP  ,
         AIF   ('&DEVT' EQ '').SPACE1         SKIP IF NOT SPECIFIED
         AIF   ('&DEVT'(1,1) EQ '(').DEVT2    CHECK IF REG SPECIFIED
         LA    R0,&DEVT                 SAVE ADDRESS OF THE
         ST    R0,CTGFVDVT              DEVICE TYPE CTGFL
         AGO   .SPACE1
.DEVT2   ANOP  ,
&REG     SETC  '&DEVT'(2,K'&DEVT-2)     STRIP THE PARENTHESIS
         ST    &REG,CTGFVRNG            SAVE DEVICE TYPE CTGFL
.**********************************************************************
.* UPDATE THE ADDRESS OF THE SPACE ALLOCATION INFORMATION CTGFL       *
.**********************************************************************
.SPACE1  ANOP  ,
         AIF   ('&SPACE' EQ '').AMDSB1        SKIP IF NOT SPECIFIED
         AIF   ('&SPACE'(1,1) EQ '(').SPACE2   CHECK IF REG SPECIFIED
         LA    R0,&SPACE                SAVE ADDRESS OF THE
         ST    R0,CTGFVSPC              SPACE ALLOCATION CTGFL
         AGO   .AMDSB1
.SPACE2  ANOP  ,
&REG     SETC  '&SPACE'(2,K'&SPACE-2)   STRIP THE PARENTHESIS
         ST    &REG,CTGFVSPC            SAVE DEVICE TYPE CTGFL
.**********************************************************************
.* UPDATE THE ADDRESS OF THE AMDSB CTGFL                              *
.**********************************************************************
.AMDSB1  ANOP  ,
         AIF   ('&AMDSB' EQ '').SEQ1          SKIP IF NOT SPECIFIED
         AIF   ('&AMDSB'(1,1) EQ '(').AMDSB2   CHECK IF REG SPECIFIED
         LA    R0,&AMDSB                SAVE ADDRESS OF THE
         ST    R0,CTGFVAMD              AMDSB CTGFL
         AGO   .SEQ1
.AMDSB2  ANOP  ,
&REG     SETC  '&AMDSB'(2,K'&AMDSB-2)   STRIP THE PARENTHESIS
         ST    &REG,CTGFVAMD            SAVE AMDSB CTGFL
.**********************************************************************
.* UPDATE THE ADDRESS OF THE FILE SEQUENCER NUMBER CTGFL              *
.**********************************************************************
.SEQ1    ANOP  ,
         AIF   ('&SEQ' EQ '').ATTR1           SKIP IF NOT SPECIFIED
         AIF   ('&SEQ'(1,1) EQ '(').SEQ2      CHECK IF REG SPECIFIED
         LA    R0,&SEQ                  SAVE ADDRESS OF THE
         ST    R0,CTGFVFSN              FILE SEQUENCE CTGFL
         AGO   .ATTR1
.SEQ2    ANOP  ,
&REG     SETC  '&SEQ'(2,K'&SEQ-2)       STRIP THE PARENTHESIS
         ST    &REG,CTGFVFSN            SAVE FILE SEQUENCE CTGFL
.**********************************************************************
.* UPDATE THE ADDRESS OF THE DATA SET ATTRIBUTES CTGFL                *
.**********************************************************************
.ATTR1   ANOP  ,
         AIF   ('&ATTR' EQ '').BUFFER1        SKIP IF NOT SPECIFIED
         AIF   ('&ATTR'(1,1) EQ '(').ATTR2    CHECK IF REG SPECIFIED
         LA    R0,&ATTR                 SAVE ADDRESS OF THE
         ST    R0,CTGFVATR              DSN ATTRIBUTE CTGFL
         AGO   .BUFFER1
.ATTR2   ANOP  ,
&REG     SETC  '&ATTR'(2,K'&ATTR-2)     STRIP THE PARENTHESIS
         ST    &REG,CTGFVATR            SAVE DSN ATTRIBUTE CTGFL
.**********************************************************************
.* UPDATE THE ADDRESS OF THE BUFFER SIZE CTGFL                        *
.**********************************************************************
.BUFFER1 ANOP  ,
         AIF   ('&BUFFSIZ' EQ '').RECLEN1     SKIP IF NOT SPECIFIED
         AIF   ('&BUFFSIZ'(1,1) EQ '(').BUFFER2   CHECK IF REG SPEC
         LA    R0,&BUFFSIZ              SAVE ADDRESS OF THE
         ST    R0,CTGFVBUF              FILE BUFFER SIZE CTGFL
         AGO   .RECLEN1
.BUFFER2 ANOP  ,
&REG     SETC  '&BUFFSIZ'(2,K'&BUFFSIZ-2) STRIP THE PARENTHESIS
         ST    &REG,CTGFVBUF            SAVE BUFFER SIZE CTGFL
.**********************************************************************
.* UPDATE THE ADDRESS OF THE AVERAGE RECORD SIZE CTGFL                *
.**********************************************************************
.RECLEN1 ANOP  ,
         AIF   ('&RECSIZ' EQ '').GDGLIM1      SKIP IF NOT SPECIFIED
         AIF   ('&RECSIZ'(1,1) EQ '(').RECLEN2   CHECK IF REG SPECIFIED
         LA    R0,&RECSIZ               SAVE ADDRESS OF THE
         ST    R0,CTGFVLRS              AVERAGE REC SIZE CTGFL
         AGO   .GDGLIM1
.RECLEN2 ANOP  ,
&REG     SETC  '&RECSIZ'(2,K'&RECSIZ-2) STRIP THE PARENTHESIS
         ST    &REG,CTGFVLRS            SAVE AVG REC SIZE CTGFL
.**********************************************************************
.* UPDATE THE ADDRESS OF THE GDG LIMIT CTGFL                          *
.**********************************************************************
.GDGLIM1 ANOP  ,
         AIF   ('&GDGLIM' EQ '').EXIT1        SKIP IF NOT SPECIFIED
         AIF   ('&GDGLIM'(1,1) EQ '(').GDGLIM2   CHECK IF REG SPECIFIED
         LA    R0,&GDGLIM               SAVE ADDRESS OF THE
         ST    R0,CTGFVLMT              GDG LIMIT CTGFL
         AGO   .EXIT1
.GDGLIM2 ANOP  ,
&REG     SETC  '&GDGLIM'(2,K'&GDGLIM-2) STRIP THE PARENTHESIS
         ST    &REG,CTGFVLMT            SAVE GDG LIMIT CTGFL
.**********************************************************************
.* UPDATE THE ADDRESS OF THE EXCEPTION EXIT PARAMETER LIST            *
.**********************************************************************
.EXIT1   ANOP  ,
         AIF   ('&EXIT' EQ '').GDGATT1        SKIP IF NOT SPECIFIED
         AIF   ('&EXIT'(1,1) EQ '(').EXIT2    CHECK IF REG SPECIFIED
         LA    R0,&EXIT                 SAVE ADDRESS OF THE
         ST    R0,CTGFVEXT              GDG LIMIT CTGFL
         AGO   .GDGATT1
.EXIT2   ANOP  ,
&REG     SETC  '&EXIT'(2,K'&EXIT-2)     STRIP THE PARENTHESIS
         ST    &REG,CTGFVEXT            SAVE GDG LIMIT CTGFL
.**********************************************************************
.* UPDATE THE ADDRESS OF THE GDG ATTIBUTES CTGFL                      *
.**********************************************************************
.GDGATT1 ANOP  ,
         AIF   ('&GDGATTR' EQ '').RELATE1     SKIP IF NOT SPECIFIED
         AIF   ('&GDGATTR'(1,1) EQ '(').GDGATT2   CHECK IF REG SPEC
         LA    R0,&GDGATTR              SAVE ADDRESS OF THE
         ST    R0,CTGFVGAT              GDG ATTRIB CTGFL
         AGO   .RELATE1
.GDGATT2 ANOP  ,
&REG     SETC  '&GDGATTR'(2,K'&GDGATTR-2) STRIP THE PARENTHESIS
         ST    &REG,CTGFVGAT            SAVE GDG ATTR CTGFL
.**********************************************************************
.* UPDATE THE ADDRESS OF THE TRUE NAME CTGFL                          *
.**********************************************************************
.RELATE1 ANOP  ,
         AIF   ('&TRUENM' EQ '').PASS1        SKIP IF NOT SPECIFIED
         AIF   ('&TRUENM'(1,1) EQ '(').RELATE2   CHECK IF REG SPEC
         LA    R0,&TRUENM               SAVE ADDRESS OF THE
         ST    R0,CTGFVNAM              TRUE NAME CTGFL
         AGO   .PASS1
.RELATE2 ANOP  ,
&REG     SETC  '&TRUENM'(2,K'&TRUENM-2) STRIP THE PARENTHESIS
         ST    &REG,CTGFVNAM            SAVE TRUE NAME CTGFL
.**********************************************************************
.* UPDATE THE ADDRESS OF THE RELATED OBJECT'S PASSWORD                *
.**********************************************************************
.PASS1   ANOP  ,
         AIF   ('&PASSWRD' EQ '').FEEDBK1     SKIP IF NOT SPECIFIED
         AIF   ('&PASSWRD'(1,1) EQ '(').PASS2   CHECK IF REG SPEC
         LA    R0,&PASSWRD              SAVE ADDRESS OF THE
         ST    R0,CTGFVPWD              RELATED OBJECTS PASSWORD
         AGO   .FEEDBK1
.PASS2   ANOP  ,
&REG     SETC  '&PASSWRD'(2,K'&PASSWRD-2) STRIP THE PARENTHESIS
         ST    &REG,CTGFVPWD            SAVE PASSWORD ADDRESS
.**********************************************************************
.* UPDATE THE ADDRESS OF THE CRA FEEDBACK AREA                        *
.**********************************************************************
.FEEDBK1 ANOP  ,
         AIF   ('&FEEDBK' EQ '').MEXIT        SKIP IF NOT SPECIFIED
         AIF   ('&FEEDBK'(1,1) EQ '(').FEEDBK2   CHECK IF REG SPEC
         LA    R0,&FEEDBK               SAVE ADDRESS OF THE
         ST    R0,CTGFVWKA              CRA FEEDBACK AREA
         AGO   .MEXIT
.FEEDBK2 ANOP  ,
&REG     SETC  '&FEEDBK'(2,K'&FEEDBK-2) STRIP THE PARENTHESIS
         ST    &REG,CTGFVWKA            SAVE CRA FEEDBACK ADDR
.**********************************************************************
.MEXIT   ANOP  ,
         POP   USING
         MEND  ,

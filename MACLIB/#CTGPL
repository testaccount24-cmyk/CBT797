         MACRO ,
&NAME    #CTGPL &FUNC,                  USER REQUESTED FUNCTION        X
               &WORK=,                  ADDR OF WORKAREA               X
               &FIELDS=,                LIST OF CTGFL ADDRESSES        X
               &CRI=,                   ADDR OF CTLG REC IDENTIFIER    X
               &FV=,                    ADDR OF CTGFV                  X
               &NT=,                    ADDR OF CTGNT                  X
               &CATALOG=,               ADDR OF CATALOG NAME OR ACB    X
               &CVOL=,                  ADDR OF CVVOL NAME             X
               &TYPE=,                  TYPE OF CATALOG RECORD REF'D   X
               &NEWNAME=,               ADDR OF NEW OBJECT NAME        X
               &DDNAME=,                ADDR OF JCL DD ASSOC WITH REQ  X
               &JSCB=,                  ADDR OF JSCB                   X
               &PASSWRD=,               ADDR OF USER SUPPLIED PASSWD   X
               &OPTIONS=,               LIST OF OPTIONS REQUESTED      X
               &DSORG=,                 DATASET ORG. FOR SUPERLOCATE   X
               &MF=L                    MACRO FORMAT (DEFAULT=LIST)
.*
.*       NOTE:
.*           THE #CTGFL/#CTGPL & #GETFL MACROS ARE USED IN BUILDING
.*           SVC 26 PARAMETER LISTS.
.*           THE CSI IS NOW AVAILABLE BUT AT THE TIME THAT THESE MACROS
.*           WERE DEVELOPED THIS FACILITY WAS NOT AVAILABLE.
.*           USE AT YOUR OWN RISK.
.*
.*           PLEASE REFER TO CBT FILE 689 FOR SVC 26 PARAMETER LIST
.*           DOCUMENTATION.
.*
.**********************************************************************
.*                                                                    *
.* DEFINE LOCAL SET SYMBOLS                                           *
.*                                                                    *
.**********************************************************************
         LCLB  &O(32)                   FOUR OPTION BYTES
         LCLC  &OMN(44)                 OPTION MNEMONICS
         LCLA  &OBI(44)                 OPTION BIT
         LCLA  &I,&J,&K,&L              LOOP COUNTERS
         LCLC  &BYTE                    WORK STORAGE
         LCLB  &CMS                     CMS OPTIONS REQUESTED
         LCLC  &OPTN                    CMS OPTION BIT STRING
         LCLB  &FMT2                    FORMAT-2 WORK AREA
         LCLC  &REG                     REGISTER OPERAND
         LCLC  &WRKAREA                 WORKAREA POINTER
         LCLC  &WRKLEN                  WORKAREA LENGTH
         LCLC  &WRKFMT2                 FORMAT-2 WORKAREA
.*
&OMN(1)  SETC  'BYPSS'                  --+
&OMN(2)  SETC  'MAST'
&OMN(3)  SETC  'CI'
&OMN(4)  SETC  'UPD'
&OMN(5)  SETC  'READ'
&OMN(6)  SETC  'NAME'
&OMN(7)  SETC  'CNAME'
&OMN(8)  SETC  'GENLD'
&OMN(9)  SETC  'EXT'
&OMN(10) SETC  'NSVS'                   DEFINE A TABLE OF
&OMN(11) SETC  'ERASE'                  VALID OPTIONS
&OMN(12) SETC  'SMF'
&OMN(13) SETC  'REL'
&OMN(14) SETC  'GTALL'
&OMN(15) SETC  'PURG'
&OMN(16) SETC  'VMNT'
&OMN(17) SETC  'RCATN'
&OMN(18) SETC  'GTNXT'
&OMN(19) SETC  'UCRAX'
&OMN(20) SETC  'DELRC'
&OMN(21) SETC  'DISC'
&OMN(22) SETC  'OVRID'
&OMN(23) SETC  'CNVTC'
&OMN(24) SETC  'SCR'
&OMN(25) SETC  'BOTH'
&OMN(26) SETC  'SUPLT'
&OMN(27) SETC  'GDGL'
&OMN(28) SETC  'SRH'
&OMN(29) SETC  'NUM'
&OMN(30) SETC  'AM0'
&OMN(31) SETC  'LBASE'
&OMN(32) SETC  'NODOCAT'
&OMN(33) SETC  'NPROF'
&OMN(34) SETC  'COIN'
&OMN(35) SETC  'BYPMT'
&OMN(36) SETC  'TIOT'
&OMN(37) SETC  'ICFC'
&OMN(38) SETC  'ICFOR'
&OMN(39) SETC  'GFLIC'
&OMN(40) SETC  'SWAP'
&OMN(41) SETC  'RESM'
&OMN(42) SETC  'CDI'
&OMN(43) SETC  'NDISC'
&OMN(44) SETC  'NOCON'                  --+
.*
&OBI(1)  SETA  1                        --+
&OBI(2)  SETA  2
&OBI(3)  SETA  3
&OBI(4)  SETA  4
&OBI(5)  SETA  5
&OBI(6)  SETA  6
&OBI(7)  SETA  7
&OBI(8)  SETA  8
&OBI(9)  SETA  9                        DEFINE THE TABLE OF BIT
&OBI(10) SETA  9                        POSITIONS CORRESPONDING
&OBI(11) SETA  10                       TO THE OPTIONS
&OBI(12) SETA  10
&OBI(13) SETA  10
&OBI(14) SETA  10
&OBI(15) SETA  11
&OBI(16) SETA  11
&OBI(17) SETA  11
&OBI(18) SETA  12
&OBI(19) SETA  12
&OBI(20) SETA  12
&OBI(21) SETA  13
&OBI(22) SETA  14
&OBI(23) SETA  14
&OBI(24) SETA  15
&OBI(25) SETA  16
&OBI(26) SETA  20
&OBI(27) SETA  21
&OBI(28) SETA  22
&OBI(29) SETA  23
&OBI(30) SETA  24
&OBI(31) SETA  25
&OBI(32) SETA  26
&OBI(33) SETA  27
&OBI(34) SETA  28
&OBI(35) SETA  29
&OBI(36) SETA  30
&OBI(37) SETA  31
&OBI(38) SETA  32
&OBI(39) SETA  10
&OBI(40) SETA  11
&OBI(41) SETA  13
&OBI(42) SETA  15
&OBI(43) SETA  25
&OBI(44) SETA  25                       --+
.*
.**********************************************************************
.*                                                                    *
.* PARSE THE FUNCTION PARAMETER                                       *
.*                                                                    *
.**********************************************************************
.FUNC1   ANOP  ,                        START OF FUNCTION PARSE
         AIF   ('&FUNC' EQ 'LOCATE').FLOC     GO SET LOCATE BITS
         AIF   ('&FUNC' EQ 'LSPACE').FLSP     GO SET LSPACE BITS
         AIF   ('&FUNC' EQ 'UPDATE').FUPD     GO SET UPDATE BITS
         AIF   ('&FUNC' EQ 'DEFINE').FDEF     GO SET DEFINE BITS
         AIF   ('&FUNC' EQ 'ALTER').FALT      GO SET ALTER BITS
         AIF   ('&FUNC' EQ 'DELETE').FDEL     GO SET DELETE BITS
         AIF   ('&FUNC' EQ 'LISTCAT').FLCT    GO SET LISTCAT BITS
         AIF   ('&FUNC' EQ 'CONVERT').FCON    GO SET CONVERTV BITS
         AIF   ('&FUNC' EQ 'GFL').FGFL        GO SET GFL BITS
         AIF   ('&FUNC' EQ 'CNL').FCNL        GO SET CNL BITS
         AGO   .ERR1                    INVALID FUNCTION
.FLOC    ANOP  ,
&O(17)   SETB  0                              SET OPTION BITS
&O(18)   SETB  0                              ON FOR THE
&O(19)   SETB  1                              LOCATE FUNCTION
         AGO   .FEND
.FLSP    ANOP  ,
&O(17)   SETB  0                              SET OPTION BITS
&O(18)   SETB  1                              ON FOR THE
&O(19)   SETB  0                              LSPACE FUNCTION
         AGO   .FEND
.FUPD    ANOP  ,
&O(17)   SETB  0                              SET OPTION BITS
&O(18)   SETB  1                              ON FOR THE
&O(19)   SETB  1                              UPDATE FUNCTION
         AGO   .FEND
.FGFL    ANOP  ,
&O(17)   SETB  1                              SET OPTION BITS
&O(18)   SETB  0                              ON FOR THE
&O(19)   SETB  1                              GFL FUNCTION
         AGO   .FEND
.FCNL    ANOP  ,
&O(17)   SETB  1                              SET OPTION BITS
&O(18)   SETB  1                              ON FOR THE
&O(19)   SETB  0                              CNL FUNCTION
         AGO   .MUT1
.FDEF    ANOP  ,
&OPTN    SETC  '00001000'               SET CMS OPTIONS FOR DEFINE
         AGO   .FCMS
.FALT    ANOP  ,
&OPTN    SETC  '00010000'               SET CMS OPTIONS FOR ALTER   #DD
         AGO   .FCMS
.FDEL    ANOP  ,
&OPTN    SETC  '00011000'               SET CMS OPTIONS FOR DELETE
         AGO   .FCMS
.FLCT    ANOP  ,
.* TN    SETC  '00100000'               SET CMS OPTIONS FOR LISTCAT
&OPTN    SETC  '00100001'               SET CMS OPTIONS FOR LISTCAT
         AGO   .FCMS
.FCON    ANOP  ,
&OPTN    SETC  '00110000'               SET CMS OPTIONS FOR CONVERTV
         AGO   .FCMS
.FCMS    ANOP  ,
&O(17)   SETB  1                         SET OPTION BITS
&O(18)   SETB  0                         FOR CMS TYPE
&O(19)   SETB  0                         REQUEST
&CMS     SETB  1                         SET CMS FLAG
.FEND    ANOP  ,
.**********************************************************************
.*                                                                    *
.* CHECK FOR WORKAREA PARAMETER                                       *
.*                                                                    *
.**********************************************************************
.WORK1   ANOP  ,
         AIF   ('&WORK' EQ '').ERR2      NO WORKAREA SPECD ERROR
&WRKAREA SETC  '&WORK(1)'               SETUP WORKAREA POINTER
&WRKLEN  SETC  '&WORK(2)'               SETUP WORKAREA LENGTH
&WRKFMT2 SETC  '&WORK(3)'               SET FORMAT 2 WORKAREA FLAG
&FMT2    SETB  0                        RESET FORMAT-2 WORKAREA FLAG
         AIF   ('&WRKFMT2' EQ '').MUT1   CHECK FOR FORMAT-2 WORKAREA
         AIF   ('&WRKFMT2' NE 'FORMAT2').ERR3
&FMT2    SETB  1                        SET FORMAT-2 WORKAREA FLAG
&CMS     SETB  1                         SET CMS FLAG
.**********************************************************************
.*                                                                    *
.* CHECK FOR THE VARIOUS MUTUALLY EXCLUSIVE PARAMETERS                *
.*                                                                    *
.**********************************************************************
.MUT1    ANOP  ,
         AIF   (('&CRI' NE '') AND ('&FV' NE '') AND                   *
               ('&NT' NE '')).ERR4
         AIF   (('&CATALOG' NE '') AND ('&CVOL' NE '')).ERR4
         AIF   (('&NEWNAME' NE '') AND ('&DDNAME' NE '')).ERR4
         AIF   (('&JSCB' NE '') AND ('&PASSWRD' NE '')).ERR4
.**********************************************************************
.*                                                                    *
.* CHECK THE OPTIONS PARAMETER LIST                                   *
.*                                                                    *
.**********************************************************************
.OPT1    ANOP  ,                        START OF OPTION PARSE
&O(24)   SETB  1                        CTGAM0 ALWAYS ON FOR CTGPL
&I       SETA  0                        INIT I TO LOOP THRU OPTIONS
.OSCAN   ANOP  ,
         AIF   (&I GE N'&OPTIONS).OEND   FINISHED ALL OPTIONS
&I       SETA  &I+1                     INCREMENT I
&J       SETA  0                        INIT J TO LOOP THRU OPTS LIST
.OSRCH   ANOP  ,
         AIF   (&J GT 44).ONFND          OPT SPECD NOT FOUND IN LIST
&J       SETA  &J+1                     INCREMENT J
         AIF   ('&OMN(&J)' NE '&OPTIONS(&I)').OSRCH   KEEP SEARCHING
&K       SETA  &OBI(&J)                 SET K TO BIT POSITION OF OPT
&O(&K)   SETB   1                        SET OPTION BYTE AT K
         AIF   ('&OMN(&J)' NE 'SUPLT').OSCAN   CHECK FOR SUPERLOCATE
&O(17)   SETB  0                              RESET CMS FLAG
         AIF   ('&WRKFMT2' NE '').OSCAN       CHECK FOR FMT2 WRKAREA
&CMS     SETB  0                              RESET CMS FLAG
         AGO   .OSCAN                   GO GET NEXT SPECD OPTION
.ONFND   ANOP  ,
         MNOTE 4,'INVALID OPTION, &OPTIONS(&I)' WARN USER ABOUT OPT
         AGO   .OSCAN                   GO GET NEXT SPECD OPTION
.OEND    ANOP  ,
.**********************************************************************
.*                                                                    *
.* PARSE THE MF PARAMETER                                             *
.*                                                                    *
.**********************************************************************
.MF1     ANOP  ,
         AIF   (N'&MF NE 1).MF2          CHECK FOR ONLY 1 PARM
         AIF   ('&MF' NE 'L').ERR5       IF SO IT MUST BE LIST FORM
         AGO   .LFORM1
.MF2     ANOP  ,
         AIF   (N'&MF NE 2).ERR5         CHECK FOR TWO PARMS
         AIF   ('&MF(1)' NE 'E').ERR5    IF SO MUST BE EXECUTE FORM
         AGO   .EFORM1
.**********************************************************************
.*                                                                    *
.*             GENERATE THE LIST FORM OF THE MACRO                    *
.*                                                                    *
.**********************************************************************
.LFORM1  ANOP  START                    OF LIST FORM OF MACRO
.**********************************************************************
.*                                                                    *
.* PARSE THE FIELDS PARAMETER                                         *
.*                                                                    *
.**********************************************************************
.FLD1    ANOP  ,
&NAME    DS    0F                       #CTGPL MACRO AUG 12 1982
&BYTE    SETC  '&O(1)&O(2)&O(3)&O(4)&O(5)&O(6)&O(7)&O(8)'
         DC    B'&BYTE'                 FIRST  OPTION BYTE
&BYTE    SETC  '&O(9)&O(10)&O(11)&O(12)&O(13)&O(14)&O(15)&O(16)'
         DC    B'&BYTE'                 SECOND OPTION BYTE
&BYTE    SETC  '&O(17)&O(18)&O(19)&O(20)&O(21)&O(22)&O(23)&O(24)'
         DC    B'&BYTE'                 THIRD  OPTION BYTE
&BYTE    SETC  '&O(25)&O(26)&O(27)&O(28)&O(29)&O(30)&O(31)&O(32)'
         DC    B'&BYTE'                 FOURTH OPTION BYTE
         AIF   ('&CRI' EQ '').LFORM2     NO CRI SPECIFIED
         DC    A(&CRI)                  CTLG REC IDENTIFIER
         AGO   .LFORM4
.LFORM2  ANOP  ,
         AIF   ('&FV' EQ '').LFORM3      NO FV SUPPLIED
         DC    A(&FV)                   ADDR OF CTGFV
         AGO   .LFORM4
.LFORM3  ANOP  ,
         AIF   ('&NT' EQ '').LFORM3B     NO NT SUPPLIED
         DC    A(&NT)                   ADDR OF CTGNT
         AGO   .LFORM4
.LFORM3B ANOP  ,
         DS    A                        RESERVED
.LFORM4  ANOP  ,
         AIF   ('&CATALOG' EQ '').LFORM5      NO CATALOG SPECIFIED
         DC    A(&CATALOG)              ADDR OF CTLG NAME / ACB
         AGO   .LFORM7
.LFORM5  ANOP  ,
         AIF   ('&CVOL' EQ '').LFORM6    NO CVOL SPECIFIED
         DC    A(&CVOL)                 ADDR OF CVOL NAME
         AGO   .LFORM7
.LFORM6  ANOP  ,
         DS    A                        RESERVED
.LFORM7  ANOP  ,
         AIF   ('&WRKAREA' EQ '').LFORM7B
         DC    A(&WRKAREA)              ADDR OF WORKAREA
         AGO   .LFORM7C
.LFORM7B ANOP  ,
         DC    A(0)                     ADDR OF WORKAREA
.LFORM7C ANOP  ,
         DC    A(&WRKAREA)              ADDR OF WORKAREA
         AIF   (NOT &CMS).LFORM8         CMS => OPTION HERE
         DC    B'&OPTN'                 CMS OPTION BYTE
         DS    X                        RESERVED
         AGO   .LFORM10
.LFORM8  ANOP  ,
         AIF   ('&DSORG' EQ '').LFORM9   SUPERLOCATE DSORG ?
         DC    CL2'&DSORG'              DSORG FOR SUPERLOCATE
         AGO   .LFORM10
.LFORM9  ANOP  ,
         DS    CL2                      RESERVED
.LFORM10 ANOP  ,
         AIF   ('&TYPE' EQ '').LFORM11   NO RECORD TYPE SPECIFIED
         DC    CL1'&TYPE'               CATALOG RECORD TYPE
         AGO   .LFORM12
.LFORM11 ANOP  ,
         DS    CL1                      RESERVED
.LFORM12 ANOP  ,
&I       SETA  N'&FIELDS                GET NUMBER OF FIELDS
         DC    AL1(&I)                  NO OF CTGFL ENTRIES
         AIF   ('&DDNAME' EQ '').LFORM13   NO DDNAME ADDR SPECIFIED
         DC    A(&DDNAME)               ADDRESS OF DD NAME
         AGO   .LFORM15
.LFORM13 ANOP  ,
         AIF   ('&NEWNAME' EQ '').LFORM14     NO NEWNAME ADDR SPECIFIED
         DC    A(&NEWNAME)              ADDR OF NEW NAME FOR OBJ
         AGO   .LFORM15
.LFORM14 ANOP  ,
         DS    A                        RESERVED
.LFORM15 ANOP  ,
         AIF   ('&JSCB' EQ '').LFORM16   NO JSCB ADDR SPECIFIED
         DC    A(&JSCB)                 ADDR OF JSCB
         AGO   .LFORM18
.LFORM16 ANOP  ,
         AIF   ('&PASSWRD' EQ '').LFORM17   NO PASSWORD ADDR GIVEN
         DC    A(&PASSWRD)              ADDR OF PASSWORD
         AGO   .LFORM18
.LFORM17 ANOP  ,
         DS    A                        RESERVED
.LFORM18 ANOP  ,
&I       SETA  1                        INIT FOR LOOP THRU CTGFLS
.LFORM19 ANOP  ,
         AIF   (N'&FIELDS EQ 0).LFORM20    LEAVE AFTER ALL CTGFLS DONE
         AIF   (&I GT N'&FIELDS).LFORM20   LEAVE AFTER ALL CTGFLS DONE
         DC    A(&FIELDS(&I))           ADDR OF CTGFL
&I       SETA  &I+1                     INCREMENT I
         AGO   .LFORM19
.LFORM20 ANOP  ,
         MEXIT ,
.**********************************************************************
.*                                                                    *
.* DEFINE THE EXECUTE FORM OF THE MACRO                               *
.*                                                                    *
.**********************************************************************
.EFORM1  ANOP  ,
         PUSH  USING                    #CTGPL MACRO AUG 12 1982
         USING CTGPL,15                 ADDRESS THE CTGPL
         AIF   ('&MF(2)'(1,1) EQ '(').EREGS   TEST IF REG SPECD
&NAME    LA    15,&MF(2)                REG 15 -> CTGPL
         AGO   .EBLD                    GO BUILD PARM LIST
.EREGS   ANOP  ,
&REG     SETC  '&MF(2)'(2,K'&MF(2)-2)   STRIP THE PARENTHESIS
&NAME    LR    15,&REG                  REG 15 -> CTGPL
.EBLD    ANOP  ,
&BYTE    SETC  '&O(1)&O(2)&O(3)&O(4)&O(5)&O(6)&O(7)&O(8)'
         MVI   CTGOPTN1,B'&BYTE'        FIRST  OPTION BYTE
&BYTE    SETC  '&O(9)&O(10)&O(11)&O(12)&O(13)&O(14)&O(15)&O(16)'
         MVI   CTGOPTN2,B'&BYTE'        SECOND OPTION BYTE
&BYTE    SETC  '&O(17)&O(18)&O(19)&O(20)&O(21)&O(22)&O(23)&O(24)'
         MVI   CTGOPTN3,B'&BYTE'        THIRD  OPTION BYTE
&BYTE    SETC  '&O(25)&O(26)&O(27)&O(28)&O(29)&O(30)&O(31)&O(32)'
         MVI   CTGOPTN4,B'&BYTE'        FOURTH OPTION BYTE
         AIF   ('&CRI' EQ '').EFORM2     NO CRI SPECIFIED
         AIF   ('&CRI'(1,1) EQ '(').ECRIR   CHECK FOR REGS SPECD
         LA    0,&CRI                   SAVE CTLG REC IDENTIFIER
         ST    0,CTGENT
         AGO   .EFORM2
.ECRIR   ANOP  ,
&REG     SETC  '&CRI'(2,K'&CRI-2)       STRIP PARENS
         ST    &REG,CTGENT              SAVE CTLG REC IDENTIFIER
.EFORM2  ANOP  ,
         AIF   ('&FV' EQ '').EFORM3      NO FV SUPPLIED
         AIF   ('&FV'(1,1) EQ '(').EFVR       CHECK FOR REGS SPECD
         LA    0,&FV                    SAVE CTGFV POINTER
         ST    0,CTGFVT
         AGO   .EFORM3
.EFVR    ANOP  ,
&REG     SETC  '&FV'(2,K'&FV-2)         STRIP PARENS
         ST    &REG,CTGFVT              SAVE CTGFV POINTER
.EFORM3  ANOP  ,
         AIF   ('&NT' EQ '').EFORM3B     NO NT SUPPLIED
         AIF   ('&NT'(1,1) EQ '(').EFNT       CHECK FOR REGS SPECD
         LA    0,&NT                    SAVE CTGNT POINTER
         ST    0,CTGDNT
         AGO   .EFORM3B
.EFNT    ANOP  ,
&REG     SETC  '&NT'(2,K'&NT-2)         STRIP PARENS
         ST    &REG,CTGDNT              SAVE CTGNT POINTER
.EFORM3B ANOP  ,
         AIF   ('&CATALOG' EQ '').EFORM5      NO CATALOG SPECIFIED
         AIF   ('&CATALOG'(1,1) EQ '(').ECATR   CHECK FOR REGS SPECD
         LA    0,&CATALOG               SAVE CTLG NAME POINTER
         ST    0,CTGCAT
         AGO   .EFORM6
.ECATR   ANOP  ,
&REG     SETC  '&CATALOG'(2,K'&CATALOG-2) STRIP PARENS
         ST    &REG,CTGCAT              SAVE CTLG NAME / ACB
         AGO   .EFORM6
.EFORM5  ANOP  ,
         AIF   ('&CVOL' EQ '').EFORM6    NO CVOL SPECIFIED
         AIF   ('&CVOL'(1,1) EQ '(').ECVLR    CHECK FOR REGS SPECD
         LA    0,&CVOL                  SAVE CTLG CVOL POINTER
         ST    0,CTGCVOL
         AGO   .EFORM6
.ECVLR   ANOP  ,
&REG     SETC  '&CVOL'(2,K'&CVOL-2)     STRIP PARENS
         ST    &REG,CTGCVOL             SAVE CTLG CVOL POINTER
.EFORM6  ANOP  ,
         AIF   ('&WRKAREA' EQ '').EFORM8
         AIF   ('&WRKAREA'(1,1) EQ '(').EWRKR   CHECK FOR REGS SPECD
         LA    0,&WRKAREA               SAVE WORK AREA POINTER
         ST    0,CTGWKA
         AIF   ('&WRKLEN' EQ '').EFORM7   CHECK IF LENGTH SPECIFIED
         AIF   ('&WRKFMT2' NE '').EFORM6B
         XC    &WRKAREA+2(2),&WRKAREA+2 CLEAR RETURNED LENGTH
         AGO   .EFORM7
.EFORM6B ANOP  ,
         XC    &WRKAREA+4(4),&WRKAREA+4 CLEAR RETURNED LENGTH
         MVI   &WRKAREA+7,8             INDICATE HEADER LENGTH
         AGO   .EFORM7
.EWRKR   ANOP  ,
&REG     SETC  '&WRKAREA'(2,K'&WRKAREA-2) STRIP PARENS
         ST    &REG,CTGWKA              SAVE CTLG REC IDENTIFIER
         AIF   ('&WRKLEN' EQ '').EFORM7   CHECK IF LENGTH SPECIFIED
         AIF   ('&WRKFMT2' NE '').EFORM6C
         XC    2(2,&REG),2(&REG)        CLEAR RETURNED LENGTH
         AGO   .EFORM7
.EFORM6C ANOP  ,
         XC    4(4,&REG),4(&REG)        CLEAR RETURNED LENGTH
         MVI   7(&REG),8                INDICATE HEADER LENGTH
.EFORM7  ANOP  ,
         AIF   ('&WRKLEN' EQ '').EFORM8   CHECK IF LENGTH SPECIFIED
         AIF   ('&WRKLEN'(1,1) EQ '(').EWRKLR
&REG     SETC  '0'
         LA    &REG,&WRKLEN             LOAD WORK AREA LENGTH
         AGO   .ESTLEN
.EWRKLR  ANOP  ,
&REG     SETC  '&WRKLEN'(2,K'&WRKLEN-2) STRIP PARENS
.ESTLEN  ANOP  ,
         AIF   ('&WRKAREA'(1,1) NE '(').ESTWLEN   CHECK FOR REGS SPECD
&WRKAREA SETC  '0&WRKAREA'
.ESTWLEN ANOP  ,
         AIF   ('&WRKFMT2' NE '').ESTWLE2
         STH   &REG,&WRKAREA            SAVE LENGTH OF WRK AREA
         AGO   .EFORM8
.ESTWLE2 ANOP  ,
         ST    &REG,&WRKAREA            SAVE LENGTH OF WRK AREA
.EFORM8  ANOP  ,
         AIF   (NOT &CMS).EFORM9         CMS => OPTION HERE
         MVI   CTGDSORG,B'&OPTN'        CMS OPTION BYTE
         AIF   (NOT &FMT2).EFORM10
         OI    CTGDSORG,CTGF2WKA        FORMAT-2 WORK AREA
         AGO   .EFORM10
.EFORM9  ANOP  ,
         AIF   ('&DSORG' EQ '').EFORM10       SUPERLOCATE DSORG ?
         MVC   CTGDSORG,=CL2'&DSORG'    DSORG FOR SUPERLOCATE
.EFORM10 ANOP  ,
         AIF   ('&TYPE' EQ '').EFORM11  NO RECORD TYPE SPECIFIED
         AIF   ('&TYPE'(1,1) EQ '(').EFRM10B
         MVI   CTGTYPE,C'&TYPE'         CATALOG RECORD TYPE
         AGO   .EFORM11
.EFRM10B ANOP  ,
&REG     SETC  '&TYPE'(2,K'&TYPE-2)     STRIP PARENS
         MVC   CTGTYPE,0(&REG)          CATALOG RECORD TYPE
.EFORM11 ANOP  ,
&I       SETA  N'&FIELDS                GET NUMBER OF FIELDS
         AIF   (&I EQ 0).EFORM12        SKIP IF NO FIELDS
         MVI   CTGNOFLD,&I              NUMBER OF FIELDS
.EFORM12 ANOP  ,
         AIF   ('&DDNAME' EQ '').EFORM13      NO DDNAME ADDR SPECIFIED
         AIF   ('&DDNAME'(1,1) EQ '(').EDDNR   CHECK FOR REGS SPECD
         LA    0,&DDNAME                SAVE ADDR OF JCL
         ST    0,CTGDDNM                DD CARD ASSOC WITH REQ
         AGO   .EFORM14
.EDDNR   ANOP  ,
&REG     SETC  '&DDNAME'(2,K'&DDNAME-2) STRIP PARENS
         ST    &REG,CTGDDNM             SAVE ADDR OF DD CARD
         AGO   .EFORM14
.EFORM13 ANOP  ,
         AIF   ('&NEWNAME' EQ '').EFORM14     NO NEWNAME ADDR SPECIFIED
         AIF   ('&NEWNAME'(1,1) EQ '(').ENNMR   CHECK FOR REGS SPECD
         LA    0,&NEWNAME               SAVE ADDR OF
         ST    0,CTGNEWNM               OBJECTS NEW NAME
         AGO   .EFORM14
.ENNMR   ANOP  ,
&REG     SETC  '&NEWNAME'(2,K'&NEWNAME-2) STRIP PARENS
         ST    &REG,CTGNEWNM            SAVE ADDR OF NEW NAME
.EFORM14 ANOP  ,
         AIF   ('&JSCB' EQ '').EFORM15   NO JSCB ADDR SPECIFIED
         AIF   ('&JSCB'(1,1) EQ '(').EJSBR    CHECK FOR REGS SPECD
         LA    0,&JSCB                  SAVE ADDR OF
         ST    0,CTGJSCB                JSCB
         AGO   .EFORM16
.EJSBR   ANOP  ,
&REG     SETC  '&JSCB'(2,K'&JSCB-2)     STRIP PARENS
         ST    &REG,CTGJSCB             SAVE ADDR OF JSCB
         AGO   .EFORM16
.EFORM15 ANOP  ,
         AIF   ('&PASSWRD' EQ '').EFORM16     NO PASSWORD ADDR GIVEN
         AIF   ('&PASSWRD'(1,1) EQ '(').EPSWR   CHECK FOR REGS SPECD
         LA    0,&PASSWRD               SAVE ADDR OF CALLER
         ST    0,CTGPSWD                SUPPLIED PASSWORD
         AGO   .EFORM2
.EPSWR   ANOP  ,
&REG     SETC  '&PASSWRD'(2,K'&PASSWRD-2) STRIP PARENS
         ST    &PASSWRD,CTGPSWD         SAVE PTR TO PASSWORD
.EFORM16 ANOP  ,
&I       SETA  1                        INIT FOR LOOP THRU CTGFLS
.EFORM17 ANOP  ,
         AIF   (&I GT N'&FIELDS).EFORM19      LEAVE AFTER ALL DONE
&J       SETA  (&I-1)*4                 SET J TO OFFSET IN CTGPL
         AIF   ('&FIELDS(&I)'(1,1) EQ '(').EFLDR   CHECK FOR REG SPEC
         LA    0,&FIELDS(&I)            SAVE CTGFL POINTER
         ST    0,CTGFIELD+&J
         AGO   .EFORM18
.EFLDR   ANOP  ,
&REG     SETC  '&FIELDS(&I)'(2,K'&FIELDS(&I)-2) STRIP PARENS
         ST    &REG,CTGFIELD+&J         SAVE CTGFL POINTER
         AGO   .EFORM18
.EFORM18 ANOP  ,
&I       SETA  &I+1                     INCREMENT I
         AGO   .EFORM17                 SCAN THRU ALL FIELD ADDR'S
.EFORM19 ANOP  ,
         POP   USING
         MEXIT ,
.**********************************************************************
.*                                                                    *
.* ERROR MESSAGES ISSUED BY THIS MACRO                                *
.*                                                                    *
.**********************************************************************
.ERR1    ANOP  ,
         MNOTE 8,'INVALID FUNCTION SPECIFIED'
         MEXIT ,
.ERR2    ANOP  ,
         MNOTE 8,'NO WORKAREA SPECIFIED'
         MEXIT ,
.ERR3    ANOP  ,
         MNOTE 8,'INVALID 3RD PARAMETER IN WORKAREA FIELD'
         MEXIT ,
.ERR4    ANOP  ,
         MNOTE 8,'MUTUALLY EXCLUSIVE PARAMETERS SPECIFIED'
         MEXIT ,
.ERR5    ANOP  ,
         MNOTE 8,'INVALID MACRO FORMAT SPECIFIED'
         MEND  ,

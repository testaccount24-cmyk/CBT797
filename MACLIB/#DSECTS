         MACRO ,
         #DSECTS &LIST=NO,&TYPE=
.*---------------------------------------------------------------------
.*
.*  GEN SEQUENCE -
.*
.*       PSA CSD SVT LCCA LCCAT PCCA PCCAT GDA LDA CPAB CVT SCVT DCCVT
.*       ASCB ASXB ASVT SRB TCB DCTCB OUCB OUXB SIOT TIOT TCT LCT SCT
.*       JCT JMR JMUD JSCB ATTCH SCB SMCA BASEA CSCB CIB ECB ACB RPL
.*       DCB DECB JFCB JFCBX JFCBE DEB IOB IOSB IPIB ATB IOCM UCB UCM
.*       WQE RQE DSCB DSAB RB IQE CDE LPDE LLE XL QCB QEL PSCB ECT UPT
.*       SDWA FRRS WSAVT TSB CPPL PPL CSPL CSOA IOPL ALLOC AMDSB CAXWA
.*       CCA CICB CTGCV CAMLST CTGFL CTGFV CTGPL CTGVL CTGWA EDT UPL
.*       ZB502 ZB505 ZB506 QMPA JESCT SSCVT SSVT SSIB SSOB SSAT JCTX
.*       DSNT PCCB SWB WPL SCTX IOBE
.*
.* --------------------------------------------------------------------
.*
.*  GROUP NAMES-
.*      DM -     ACB DCB DEB DECB DSAB DSCB IOB JFCB RPL
.*      ENQ -    QCB QEL
.*      IO -     ACB DCB DEB DECB ECB IOB IOBE JFCB RPL RQE UCB
.*      JOB -    ASCB CIB CSCB ECB JMR JMUD JSCB TCT TIOT
.*      PROG -   CDE LLE LPDE RB XL
.*      SUBSYS - JESCT SSCT SSIB SSOB SSVT
.*      SWA -    DSNT JCT JCTX JFCB JFCBE LCT SCT SIOT SCTX
.*      SWAM -   ZB502 ZB505 ZB506 QMPA
.*      SYS -    CVT DCCVT ECB PSA CSD QCB QEL SCVT UCB UCM
.*      TASK -   SCB TCB TCT TIOT
.*      TSO -    CPPL ECT JSCB PSCB TSB UPT PPL IOPL
.*      VSAM -   ACB RPL
.*
.* --------------------------------------------------------------------
.*
.*      TO INCLUDE NEW DSECTS THE FOLLOWING STEPS ARE NECESSARY-
.*      1) DEFINE A GLOBAL SWITCH, FORMAT &RCPXXXX
.*      2) INSERT A SWITCH SETTING(S) FOR THE NEW SWITCH AS FOLLOWS
.*         &RCPXXXX SETB ('&O' EQ 'KEY' OR &RCPXXXX)
.*         WHERE KEY IS THE OPERAND WHICH REQUESTS THE DSECT
.*         ONE SETB IS REQUIRED FOR EACH KEY REQUIRED, EG. THE
.*         ACRONYM FOR THE DATA AREA, THE GENERIC NAME, AND ANY ALIASES
.*      3) DETERMINE WHERE IN THE ASSEMBLY YOU WANT THE DSECT TO APPEAR
.*         AND INSERT THE FOLLOWING STATEMENTS-
.*                  AIF   (NOT &RCPXXXX AND NOT &ALL).NOXXXX
.*                  TITLE 'DATA AREA NAME'
.*         XXXX     DSECT (IF NECESSARY)
.*                  DSECTMACRONAME LIST=&LIST (IFNECESSARY)
.*         .NOXXXX  ANOP
.*
.* --------------------------------------------------------------------
         GBLB  &RCPACB(2)
         GBLB  &RCPACEE(2)
         GBLB  &RCPALLC(2)
         GBLB  &RCPASCB(2)
         GBLB  &RCPASSB(2)
         GBLB  &RCPASVT(2)
         GBLB  &RCPASXB(2)
         GBLB  &RCPATB(2)
         GBLB  &RCPATCH(2)
         GBLB  &RCPBASE(2)
         GBLB  &RCPCDE(2)
         GBLB  &RCPCIB(2)
         GBLB  &RCPCPAB(2)
         GBLB  &RCPCPPL(2)
         GBLB  &RCPCSCB(2)
         GBLB  &RCPCSD(2)
         GBLB  &RCPCSPL(2)
         GBLB  &RCPCTLG(2)
         GBLB  &RCPCVAF(2)
         GBLB  &RCPCVT(2)
         GBLB  &RCPDACA(2)
         GBLB  &RCPDCB(2)
         GBLB  &RCPDCBE(2)
         GBLB  &RCPDCVT(2)
         GBLB  &RCPDEB(2)
         GBLB  &RCPDECB(2)
         GBLB  &RCPDSAB(2)
         GBLB  &RCPDSCB(2)
         GBLB  &RCPDSNT(2)
         GBLB  &RCPDSERV(2)
         GBLB  &RCPDTCB(2)
         GBLB  &RCPECB(2)
         GBLB  &RCPECT(2)
         GBLB  &RCPEDT(2)
         GBLB  &RCPFRRS(2)
         GBLB  &RCPGDA(2)
         GBLB  &RCPGEPL(2)
         GBLB  &RCPIOB(2)
         GBLB  &RCPIOBE(2)
         GBLB  &RCPIOPL(2)
         GBLB  &RCPIOSB(2)
         GBLB  &RCPIPA(2)
         GBLB  &RCPIPIB(2)
         GBLB  &RCPIQE(2)
         GBLB  &RCPJCT(2)
         GBLB  &RCPJCTX(2)
         GBLB  &RCPJES(2)
         GBLB  &RCPJFCB(2)
         GBLB  &RCPJFCX(2)
         GBLB  &RCPJMR(2)
         GBLB  &RCPJMUD(2)
         GBLB  &RCPJSCB(2)
         GBLB  &RCPLCCA(2)
         GBLB  &RCPLCCT(2)
         GBLB  &RCPLCT(2)
         GBLB  &RCPLDA(2)
         GBLB  &RCPLLE(2)
         GBLB  &RCPLPDAT(2)
         GBLB  &RCPLPDE(2)
         GBLB  &RCPLWA(2)
         GBLB  &RCPMEPL(2)
         GBLB  &RCPMNPL(2)
         GBLB  &RCPMQAA(2)
         GBLB  &RCPOUCB(2)
         GBLB  &RCPOUXB(2)
         GBLB  &RCPPCCA(2)
         GBLB  &RCPPCCB(2)
         GBLB  &RCPPCCT(2)
         GBLB  &RCPPPL(2)
         GBLB  &RCPPSA(2)
         GBLB  &RCPPSCB(2)
         GBLB  &RCPQDB(2)
         GBLB  &RCPQCB(2)
         GBLB  &RCPQEL(2)
         GBLB  &RCPQMPA(2)
         GBLB  &RCPQUAA(2)
         GBLB  &RCPRB(2)
         GBLB  &RCPRCVT(2)
         GBLB  &RCPRMCT(2)
         GBLB  &RCPRMCTZ(2)
         GBLB  &RCPRPL(2)
         GBLB  &RCPRQE(2)
         GBLB  &RCPSCB(2)
         GBLB  &RCPSCT(2)
         GBLB  &RCPSCTX(2)
         GBLB  &RCPSCVT(2)
         GBLB  &RCPSDWA(2)
         GBLB  &RCPSEPL(2)
         GBLB  &RCPSIOT(2)
         GBLB  &RCPSIOTX(2)
         GBLB  &RCPSMCA(2)
         GBLB  &RCPSRB(2)
         GBLB  &RCPSSS(2)
         GBLB  &RCPSSAT(2)
         GBLB  &RCPSVT(2)
         GBLB  &RCPSWB(2)
         GBLB  &RCPTCB(2)
         GBLB  &RCPTCT(2)
         GBLB  &RCPTIOT(2)
         GBLB  &RCPTSB(2)
         GBLB  &RCPUCB(2)
         GBLB  &RCPUCBCX(2)
         GBLB  &RCPUCBG(2)
         GBLB  &RCPUCM(2)
         GBLB  &RCPUPT(2)
         GBLB  &RCPWPL(2)
         GBLB  &RCPWQE(2)
         GBLB  &RCPWSVT(2)
         GBLB  &RCPXL(2)
         GBLB  &RCPXSB(2)
         GBLB  &RCPZ4UV(2)
         GBLB  &RCPZ502(2)
         GBLB  &RCPZ505(2)
         GBLB  &RCPZ506(2)
.*
         LCLA  &OP
         LCLC  &O
         LCLB  &ALL,&PRT
         GBLC  &ZPRINT              IBM MACRO PRINT CONTROL
         GBLC  &ZCBPRINT            ANOTHER IBM PRINT CTL
         LCLC  &SAVEZ
         LCLC  &SAVEZCB
&SAVEZ   SETC  '&ZPRINT'            SAVE CURRENT VALUE
&SAVEZCB SETC  '&ZCBPRINT'          SAVE CURRENT VALUE
&ZPRINT  SETC  '&LIST'              SET IBM PRINT CONTROL
&ZCBPRINT SETC '&LIST'              SET ANOTHER IBM CONTROL
&PRT     SETB  ('&LIST' EQ 'YES')
&ALL     SETB  (N'&SYSLIST EQ 1 AND '&SYSLIST(1)' EQ 'ALL')
         AIF   (&ALL).DSE0200
.DSE0100 AIF   (&OP EQ N'&SYSLIST).DSE0200
&OP      SETA  &OP+1
&O       SETC  '&SYSLIST(&OP)'
.*
.*  SET UP REQUESTED CONTROL SWITCHES
.*
&RCPACB(1)  SETB ('&O' EQ 'ACB'   OR '&O' EQ 'VSAM' OR &RCPACB(1))
&RCPACB(1)  SETB ('&O' EQ 'DM'    OR &RCPACB(1))
&RCPACB(1)  SETB ('&O' EQ 'IO'    OR &RCPACB(1))
&RCPACEE(1) SETB ('&O' EQ 'ACEE'  OR &RCPACEE(1))
&RCPALLC(1) SETB ('&O' EQ 'ALLOC' OR '&O' EQ 'ALLOCX' OR &RCPALLC(1))
&RCPASCB(1) SETB ('&O' EQ 'ASCB'  OR &RCPASCB(1))
&RCPASSB(1) SETB ('&O' EQ 'ASSB'  OR &RCPASSB(1))
&RCPASCB(1) SETB ('&O' EQ 'JOB'   OR &RCPASCB(1))
&RCPASVT(1) SETB ('&O' EQ 'ASVT'  OR &RCPASVT(1))
&RCPASXB(1) SETB ('&O' EQ 'ASXB'  OR &RCPASXB(1))
&RCPASXB(1) SETB ('&O' EQ 'JOB'   OR &RCPASXB(1))
&RCPATB(1)  SETB ('&O' EQ 'ATB'   OR &RCPATB(1))
&RCPATCH(1) SETB ('&O' EQ 'ATTCH' OR &RCPATCH(1))
&RCPBASE(1) SETB ('&O' EQ 'BASEA' OR &RCPBASE(1))
&RCPBASE(1) SETB ('&O' EQ 'MSRDA' OR &RCPBASE(1))
&RCPCDE(1)  SETB ('&O' EQ 'CDE'   OR &RCPCDE(1))
&RCPCDE(1)  SETB ('&O' EQ 'PROG'  OR &RCPCDE(1))
&RCPCIB(1)  SETB ('&O' EQ 'CIB'   OR &RCPCIB(1))
&RCPCIB(1)  SETB ('&O' EQ 'JOB'   OR &RCPCIB(1))
&RCPCPAB(1) SETB ('&O' EQ 'CPAB'  OR &RCPCPAB(1))
&RCPCPPL(1) SETB ('&O' EQ 'CPPL'  OR &RCPCPPL(1))
&RCPCPPL(1) SETB ('&O' EQ 'TSO'   OR &RCPCPPL(1))
&RCPCSCB(1) SETB ('&O' EQ 'CSCB'  OR &RCPCSCB(1))
&RCPCSCB(1) SETB ('&O' EQ 'JOB'   OR &RCPCSCB(1))
&RCPCSD(1)  SETB ('&O' EQ 'CSD'   OR &RCPCSD(1))
&RCPCSD(1)  SETB ('&O' EQ 'SYS'   OR &RCPCSD(1))
&RCPCSPL(1) SETB ('&O' EQ 'CSOA'  OR &RCPCSPL(1))
&RCPCSPL(1) SETB ('&O' EQ 'CSPL'  OR &RCPCSPL(1))
&RCPCSPL(1) SETB ('&O' EQ 'TSO'   OR &RCPCSPL(1))
&RCPCTLG(1) SETB ('&O' EQ 'CATLG' OR &RCPCTLG(1))
&RCPCTLG(1) SETB ('&O' EQ 'CTLG'  OR &RCPCTLG(1))
&RCPCVAF(1) SETB ('&O' EQ 'CVAF'  OR &RCPCVAF(1))
&RCPCVT(1)  SETB ('&O' EQ 'CVT'   OR &RCPCVT(1))
&RCPCVT(1)  SETB ('&O' EQ 'SYS'   OR &RCPCVT(1))
&RCPDACA(1) SETB ('&O' EQ 'DACA'  OR &RCPDACA(1))
&RCPDCB(1)  SETB ('&O' EQ 'DCB'   OR &RCPDCB(1))
&RCPDCB(1)  SETB ('&O' EQ 'DM'    OR &RCPDCB(1))
&RCPDCB(1)  SETB ('&O' EQ 'IO'    OR &RCPDCB(1))
&RCPDCBE(1) SETB ('&O' EQ 'DCBE'  OR &RCPDCBE(1))
&RCPDCVT(1) SETB ('&O' EQ 'SYS'   OR &RCPDCVT(1))
&RCPDEB(1)  SETB ('&O' EQ 'DEB'   OR &RCPDEB(1))
&RCPDEB(1)  SETB ('&O' EQ 'DM'    OR &RCPDEB(1))
&RCPDEB(1)  SETB ('&O' EQ 'IO'    OR &RCPDEB(1))
&RCPDECB(1) SETB ('&O' EQ 'DECB'  OR &RCPDECB(1))
&RCPDECB(1) SETB ('&O' EQ 'DM'    OR &RCPDECB(1))
&RCPDECB(1) SETB ('&O' EQ 'IO'    OR &RCPDECB(1))
&RCPDSAB(1) SETB ('&O' EQ 'DM'    OR &RCPDSAB(1))
&RCPDSAB(1) SETB ('&O' EQ 'DSAB'  OR &RCPDSAB(1))
&RCPDSCB(1) SETB ('&O' EQ 'DM'    OR &RCPDSCB(1))
&RCPDSCB(1) SETB ('&O' EQ 'DSCB'  OR &RCPDSCB(1))
&RCPDSNT(1) SETB ('&O' EQ 'DSNT'  OR &RCPDSNT(1))
&RCPDSNT(1) SETB ('&O' EQ 'SWA'   OR &RCPDSNT(1))
&RCPDSERV(1) SETB ('&O' EQ 'DSERV' OR &RCPDSERV(1))
&RCPECB(1)  SETB ('&O' EQ 'ECB'   OR &RCPECB(1))
&RCPECB(1)  SETB ('&O' EQ 'IO'    OR &RCPECB(1))
&RCPECB(1)  SETB ('&O' EQ 'JOB'   OR &RCPECB(1))
&RCPECB(1)  SETB ('&O' EQ 'SYS'   OR &RCPECB(1))
&RCPECT(1)  SETB ('&O' EQ 'ECT'   OR &RCPECT(1))
&RCPECT(1)  SETB ('&O' EQ 'TSO'   OR &RCPECT(1))
&RCPEDT(1)  SETB ('&O' EQ 'EDT'   OR &RCPEDT(1))
&RCPFRRS(1) SETB ('&O' EQ 'FRRS'  OR &RCPFRRS(1))
&RCPGDA(1)  SETB ('&O' EQ 'GDA'   OR &RCPGDA(1))
&RCPGEPL(1) SETB ('&O' EQ 'GEPL'  OR &RCPGEPL(1))
&RCPIOB(1)  SETB ('&O' EQ 'DM'    OR &RCPIOB(1))
&RCPIOB(1)  SETB ('&O' EQ 'IO'    OR &RCPIOB(1))
&RCPIOB(1)  SETB ('&O' EQ 'IOB'   OR &RCPIOB(1))
&RCPIOBE(1) SETB ('&O' EQ 'IO'    OR &RCPIOBE(1))
&RCPIOBE(1) SETB ('&O' EQ 'IOBE'  OR &RCPIOBE(1))
&RCPIOPL(1) SETB ('&O' EQ 'IOPL'  OR &RCPIOPL(1))
&RCPIOPL(1) SETB ('&O' EQ 'TSO'   OR &RCPIOPL(1))
&RCPIOSB(1) SETB ('&O' EQ 'IOSB'  OR &RCPIOSB(1))
&RCPIPA(1)  SETB ('&O' EQ 'IPA'   OR &RCPIPA(1))
&RCPIPIB(1) SETB ('&O' EQ 'IPIB'  OR &RCPIPIB(1))
&RCPIQE(1)  SETB ('&O' EQ 'IQE'   OR &RCPIQE(1))
&RCPJCT(1)  SETB ('&O' EQ 'JCT'   OR &RCPJCT(1))
&RCPJCT(1)  SETB ('&O' EQ 'SWA'   OR &RCPJCT(1))
&RCPJCTX(1) SETB ('&O' EQ 'JCTX'  OR &RCPJCTX(1))
&RCPJCTX(1) SETB ('&O' EQ 'SWA'   OR &RCPJCTX(1))
&RCPJES(1)  SETB ('&O' EQ 'JESCT' OR &RCPJES(1))
&RCPJFCB(1) SETB ('&O' EQ 'DM'    OR &RCPJFCB(1))
&RCPJFCB(1) SETB ('&O' EQ 'IO'    OR &RCPJFCB(1))
&RCPJFCB(1) SETB ('&O' EQ 'JFCB'  OR &RCPJFCB(1))
&RCPJFCB(1) SETB ('&O' EQ 'SWA'   OR &RCPJFCB(1))
&RCPJFCX(1) SETB ('&O' EQ 'DM'    OR &RCPJFCX(1))
&RCPJFCX(1) SETB ('&O' EQ 'IO'    OR &RCPJFCX(1))
&RCPJFCX(1) SETB ('&O' EQ 'JFCBE' OR &RCPJFCX(1))
&RCPJFCX(1) SETB ('&O' EQ 'JFCBX' OR &RCPJFCX(1))
&RCPJFCX(1) SETB ('&O' EQ 'SWA'   OR &RCPJFCX(1))
&RCPJMR(1)  SETB ('&O' EQ 'JMR'   OR &RCPJMR(1))
&RCPJMR(1)  SETB ('&O' EQ 'JOB'   OR &RCPJMR(1))
&RCPJSCB(1) SETB ('&O' EQ 'JOB'   OR &RCPJSCB(1))
&RCPJSCB(1) SETB ('&O' EQ 'JSCB'  OR &RCPJSCB(1))
&RCPJSCB(1) SETB ('&O' EQ 'TSO'   OR &RCPJSCB(1))
&RCPLCCA(1) SETB ('&O' EQ 'LCCA'  OR &RCPLCCA(1))
&RCPLCCT(1) SETB ('&O' EQ 'LCCAT' OR &RCPLCCT(1))
&RCPLCT(1)  SETB ('&O' EQ 'LCT'   OR &RCPLCT(1))
&RCPLCT(1)  SETB ('&O' EQ 'SWA'   OR &RCPLCT(1))
&RCPLDA(1)  SETB ('&O' EQ 'LDA'   OR &RCPLDA(1))
&RCPLLE(1)  SETB ('&O' EQ 'LLE'   OR &RCPLLE(1))
&RCPLLE(1)  SETB ('&O' EQ 'PROG'  OR &RCPLLE(1))
&RCPLPDAT(1) SETB ('&O' EQ 'LPDAT' OR &RCPLPDAT(1))
&RCPLPDE(1) SETB ('&O' EQ 'LPDE'  OR &RCPLPDE(1))
&RCPLPDE(1) SETB ('&O' EQ 'PROG'  OR &RCPLPDE(1))
&RCPLWA(1)  SETB ('&O' EQ 'LWA'   OR &RCPLWA(1))
&RCPMEPL(1) SETB ('&O' EQ 'MEPL'  OR &RCPMEPL(1))
&RCPMNPL(1) SETB ('&O' EQ 'MNPL'  OR &RCPMNPL(1))
&RCPMQAA(1) SETB ('&O' EQ 'MQAA'  OR &RCPMQAA(1))
&RCPOUCB(1) SETB ('&O' EQ 'OUCB'  OR &RCPOUCB(1))
&RCPOUXB(1) SETB ('&O' EQ 'OUXB'  OR &RCPOUXB(1))
&RCPPCCA(1) SETB ('&O' EQ 'PCCA'  OR &RCPPCCA(1))
&RCPPCCB(1) SETB ('&O' EQ 'PCCB'  OR &RCPPCCB(1))
&RCPPCCT(1) SETB ('&O' EQ 'PCCAT' OR &RCPPCCT(1))
&RCPPPL(1)  SETB ('&O' EQ 'PPL'   OR &RCPPPL(1))
&RCPPPL(1)  SETB ('&O' EQ 'TSO'   OR &RCPPPL(1))
&RCPPSA(1)  SETB ('&O' EQ 'PSA'   OR &RCPPSA(1))
&RCPPSA(1)  SETB ('&O' EQ 'SYS'   OR &RCPPSA(1))
&RCPPSCB(1) SETB ('&O' EQ 'PSCB'  OR &RCPPSCB(1))
&RCPPSCB(1) SETB ('&O' EQ 'TSO'   OR &RCPPSCB(1))
&RCPQCB(1)  SETB ('&O' EQ 'ENQ'   OR &RCPQCB(1))
&RCPQCB(1)  SETB ('&O' EQ 'QCB'   OR &RCPQCB(1))
&RCPQCB(1)  SETB ('&O' EQ 'SYS'   OR &RCPQCB(1))
&RCPQDB(1)  SETB ('&O' EQ 'QDB'   OR &RCPQDB(1))
&RCPQEL(1)  SETB ('&O' EQ 'ENQ'   OR &RCPQEL(1))
&RCPQEL(1)  SETB ('&O' EQ 'QEL'   OR &RCPQEL(1))
&RCPQEL(1)  SETB ('&O' EQ 'SYS'   OR &RCPQEL(1))
&RCPQMPA(1) SETB ('&O' EQ 'QMPA'  OR &RCPQMPA(1))
&RCPQMPA(1) SETB ('&O' EQ 'SWAM'  OR &RCPQMPA(1))
&RCPQUAA(1) SETB ('&O' EQ 'QUAA'  OR &RCPQUAA(1))
&RCPRB(1)   SETB ('&O' EQ 'PROG'  OR &RCPRB(1))
&RCPRB(1)   SETB ('&O' EQ 'RB'    OR &RCPRB(1))
&RCPRCVT(1) SETB ('&O' EQ 'RCVT'  OR &RCPRCVT(1))
&RCPRMCT(1) SETB ('&O' EQ 'RMCT'  OR &RCPRMCT(1))
&RCPRMCTZ(1) SETB ('&O' EQ 'RMCTZ'  OR &RCPRMCTZ(1))
&RCPRPL(1)  SETB ('&O' EQ 'DM'    OR &RCPRPL(1))
&RCPRPL(1)  SETB ('&O' EQ 'IO'    OR &RCPRPL(1))
&RCPRPL(1)  SETB ('&O' EQ 'RPL'   OR '&O' EQ 'VSAM' OR &RCPRPL(1))
&RCPRQE(1)  SETB ('&O' EQ 'IO'    OR &RCPRQE(1))
&RCPRQE(1)  SETB ('&O' EQ 'RQE'   OR &RCPRQE(1))
&RCPSCB(1)  SETB ('&O' EQ 'SCB'   OR &RCPSCB(1))
&RCPSCB(1)  SETB ('&O' EQ 'TASK'  OR &RCPSCB(1))
&RCPSCT(1)  SETB ('&O' EQ 'SCT'   OR &RCPSCT(1))
&RCPSCT(1)  SETB ('&O' EQ 'SWA'   OR &RCPSCT(1))
&RCPSCTX(1) SETB ('&O' EQ 'SCTX'  OR &RCPSCTX(1))
&RCPSCTX(1) SETB ('&O' EQ 'SWA'   OR &RCPSCTX(1))
&RCPSCVT(1) SETB ('&O' EQ 'SCVT'  OR &RCPSCVT(1))
&RCPSCVT(1) SETB ('&O' EQ 'SYS'   OR &RCPSCVT(1))
&RCPSDWA(1) SETB ('&O' EQ 'SDWA'  OR &RCPSDWA(1))
&RCPSEPL(1) SETB ('&O' EQ 'SEPL'  OR &RCPSEPL(1))
&RCPSIOT(1) SETB ('&O' EQ 'SIOT'  OR &RCPSIOT(1))
&RCPSIOT(1) SETB ('&O' EQ 'SWA'   OR &RCPSIOT(1))
&RCPSIOTX(1) SETB ('&O' EQ 'SIOTX' OR &RCPSIOTX(1))
&RCPSIOTX(1) SETB ('&O' EQ 'SWA'   OR &RCPSIOTX(1))
&RCPSMCA(1) SETB ('&O' EQ 'SMCA'  OR &RCPSMCA(1))
&RCPSMCA(1) SETB ('&O' EQ 'SMF'   OR &RCPSMCA(1))
&RCPSRB(1)  SETB ('&O' EQ 'SRB'   OR &RCPSRB(1))
&RCPSSAT(1) SETB ('&O' EQ 'SSAT'  OR &RCPSSAT(1))
&RCPSSS(1)  SETB ('&O' EQ 'SSCT'  OR &RCPSSS(1))
&RCPSSS(1)  SETB ('&O' EQ 'SSIB'  OR &RCPSSS(1))
&RCPSSS(1)  SETB ('&O' EQ 'SSOB'  OR &RCPSSS(1))
&RCPSSS(1)  SETB ('&O' EQ 'SSVT'  OR &RCPSSS(1))
&RCPSSS(1)  SETB ('&O' EQ 'SUBSYS' OR &RCPSSS(1))
&RCPSVT(1)  SETB ('&O' EQ 'SVT'   OR &RCPSVT(1))
&RCPSWB(1)  SETB ('&O' EQ 'SWB'   OR &RCPSWB(1))
&RCPTCB(1)  SETB ('&O' EQ 'TASK'  OR &RCPTCB(1))
&RCPTCB(1)  SETB ('&O' EQ 'TCB'   OR &RCPTCB(1))
&RCPTCT(1)  SETB ('&O' EQ 'JOB'   OR &RCPTCT(1))
&RCPTCT(1)  SETB ('&O' EQ 'TASK'  OR &RCPTCT(1))
&RCPTCT(1)  SETB ('&O' EQ 'TCT'   OR &RCPTCT(1))
&RCPTIOT(1) SETB ('&O' EQ 'DM'    OR &RCPTIOT(1))
&RCPTIOT(1) SETB ('&O' EQ 'IO'    OR &RCPTIOT(1))
&RCPTIOT(1) SETB ('&O' EQ 'JOB'   OR &RCPTIOT(1))
&RCPTIOT(1) SETB ('&O' EQ 'TASK'  OR &RCPTIOT(1))
&RCPTIOT(1) SETB ('&O' EQ 'TIOT'  OR &RCPTIOT(1))
&RCPTSB(1)  SETB ('&O' EQ 'TSB'   OR &RCPTSB(1))
&RCPTSB(1)  SETB ('&O' EQ 'TSO'   OR &RCPTSB(1))
&RCPUCB(1)  SETB ('&O' EQ 'IO'    OR &RCPUCB(1))
&RCPUCB(1)  SETB ('&O' EQ 'SYS'   OR &RCPUCB(1))
&RCPUCB(1)  SETB ('&O' EQ 'UCB'   OR &RCPUCB(1))
&RCPUCBCX(1) SETB ('&O' EQ 'UCBCX' OR &RCPUCBCX(1))
&RCPUCBG(1) SETB ('&O' EQ 'IOCM'  OR &RCPUCBG(1))
&RCPUCBG(1) SETB ('&O' EQ 'IOCOM' OR &RCPUCBG(1))
&RCPUCBG(1) SETB ('&O' EQ 'UCBLOOK' OR &RCPUCBG(1))
&RCPUCM(1)  SETB ('&O' EQ 'SYS'   OR &RCPUCM(1))
&RCPUCM(1)  SETB ('&O' EQ 'UCM'   OR &RCPUCM(1))
&RCPUPT(1)  SETB ('&O' EQ 'TSO'   OR &RCPUPT(1))
&RCPUPT(1)  SETB ('&O' EQ 'UPT'   OR &RCPUPT(1))
&RCPWPL(1)  SETB ('&O' EQ 'WPL'   OR &RCPWPL(1))
&RCPWQE(1)  SETB ('&O' EQ 'WQE'   OR &RCPWQE(1))
&RCPWSVT(1) SETB ('&O' EQ 'WSAVT' OR &RCPWSVT(1))
&RCPXL(1)   SETB ('&O' EQ 'PROG'  OR &RCPXL(1))
&RCPXL(1)   SETB ('&O' EQ 'XL'    OR &RCPXL(1))
&RCPXSB(1)  SETB ('&O' EQ 'XSB'   OR &RCPXSB(1))
&RCPZ4UV(1) SETB ('&O' EQ 'ZB4UV' OR &RCPZ4UV(1))
&RCPZ502(1) SETB ('&O' EQ 'SWAM'  OR &RCPZ502(1))
&RCPZ502(1) SETB ('&O' EQ 'ZB502' OR &RCPZ502(1))
&RCPZ505(1) SETB ('&O' EQ 'EPA'   OR &RCPZ505(1))
&RCPZ505(1) SETB ('&O' EQ 'SWAM'  OR &RCPZ505(1))
&RCPZ505(1) SETB ('&O' EQ 'ZB505' OR &RCPZ505(1))
&RCPZ506(1) SETB ('&O' EQ 'EPA'   OR &RCPZ506(1))
&RCPZ506(1) SETB ('&O' EQ 'SWAM'  OR &RCPZ506(1))
&RCPZ506(1) SETB ('&O' EQ 'ZB506' OR &RCPZ506(1))
         AGO   .DSE0100
.*
.*  SET UP DEPENDENCIES
.*
.DSE0200    ANOP  ,
&RCPASCB(1) SETB (&RCPASCB(1) OR &RCPASXB(1))     ASXB  -->  ASCB
&RCPCSCB(1) SETB (&RCPCSCB(1) OR &RCPCIB(1))      CIB   -->  CSCB
&RCPCVT(1)  SETB (&RCPCVT(1)  OR &RCPEDT(1))      EDT   -->  CVT
&RCPCVT(1)  SETB (&RCPCVT(1)  OR &RCPQMPA(1))     QMPA  -->  CVT
&RCPCVT(1)  SETB (&RCPCVT(1)  OR &RCPSCVT(1))     SCVT  -->  CVT
&RCPCVT(1)  SETB (&RCPCVT(1)  OR &RCPZ505(1))     ZB505 -->  CVT
&RCPCVT(1)  SETB (&RCPCVT(1)  OR &RCPZ506(1))     ZB506 -->  CVT
&RCPJES(1)  SETB (&RCPJES(1)  OR &RCPEDT(1))      EDT   -->  JESCT
&RCPJES(1)  SETB (&RCPJES(1)  OR &RCPQMPA(1))     QMPA  -->  JESCT
&RCPJES(1)  SETB (&RCPJES(1)  OR &RCPSSS(1))      SUBSYS-->  JESCT
&RCPJES(1)  SETB (&RCPJES(1)  OR &RCPZ505(1))     ZB505 -->  JESCT
&RCPJES(1)  SETB (&RCPJES(1)  OR &RCPZ506(1))     ZB506 -->  JESCT
&RCPJFCB(1) SETB (&RCPJFCB(1) OR &RCPJFCX(1))     JFCBX -->  JFCB
&RCPLCCA(1) SETB (&RCPLCCA(1) OR &RCPLCCT(1))     LCCAT -->  LCCA
&RCPOUCB(1) SETB (&RCPOUCB(1) OR &RCPOUXB(1))     OUXB  -->  OUCB
&RCPPCCA(1) SETB (&RCPLCCA(1) OR &RCPPCCT(1))     PCCAT -->  PCCA
&RCPPSA(1)  SETB (&RCPPSA(1)  OR &RCPJMR(1))      JMR   -->  PSA
&RCPTCB(1)  SETB (&RCPTCB(1)  OR &RCPTCT(1))      TCT   -->  TCB
&RCPTCT(1)  SETB (&RCPTCT(1)  OR &RCPJMR(1))      JMR   -->  TCT
.*
         AIF   ('&TYPE' EQ '').DSE0300
         AIF   ('&TYPE' EQ 'DEFER        '(1,K'&TYPE)).DSE0500
.DSE0300 ANOP  ,
         AIF   (&PRT).DSE0400
         PUSH  PRINT
         PRINT OFF
.DSE0400 ANOP  ,
         AIF   (NOT &RCPPSA(1) AND NOT &ALL OR &RCPPSA(2)).NOPSA
&RCPPSA(2) SETB 1
         TITLE 'PREFIXED SAVE AREA'
PSA      DSECT ,
*        IHAPSA LIST=YES
         IHAPSA LIST=YES
.NOPSA   ANOP  ,
         AIF   (NOT &RCPCSD(1) AND NOT &ALL OR &RCPCSD(2)).NOCSD
&RCPCSD(2) SETB 1
         TITLE 'COMMON SYSTEM DATA AREA'
*        IHACSD ,
         IHACSD ,
         AIF   (D'CSD_CPU_ALIVE_ADDR).CSD11 Skip if 1.11+ macs
         ORG   CSDDIAG+88
CSD_CPU_ALIVE_ADDR  DC   A(0) CPU alive mask pointer. Points to a
*                             bitmask on a double word boundary (for
*                             compare and swap) that is
*                             ECVTMaxMPNumBytesInMask bytes long where
*                             the first (CVTMAXMP+1) bits are valid.
*                                                                  @LAA
CSD_BYLPAR_CP_MASK_ADDR DC A(0) Pointer to mask of processors defined
*                             as standard processors - not necessarily
*                             online.  Points to a bitmask on
*                             a double word boundary (for compare and
*                             swap) that is ECVTMaxMPNumBytesInMask
*                             bytes long where the first (CVTMAXMP+1)
*                             bits are valid.                      @LAA
CSD_BYLPAR_ZAAP_MASK_ADDR DC A(0) Pointer to mask of processors defined
*                             as special processors - not necessarily
*                             online.  Points to a bitmask on
*                             a double word boundary (for compare and
*                             swap) that is ECVTMaxMPNumBytesInMask
*                             bytes long where the first (CVTMAXMP+1)
*                             bits are valid.                      @LAA
CSD_BYLPAR_ZIIP_MASK_ADDR DC A(0) Pointer to mask of processors defined
*                             as zIIP processors - not necessarily
*                             online.  Points to a bitmask on
*                             a double word boundary (for compare and
*                             swap) that is ECVTMaxMPNumBytesInMask
*                             bytes long where the first (CVTMAXMP+1)
*                             bits are valid.                      @LAA
CSD_CPUS_GOING_ON_OR_OFF_MASK_ADDR DC A(0) Pointer to mask of CPUs
*                             configured on or off during a reporting
*                             interval.  Points to a bitmask on a
*                             double word boundary (for compare and
*                             swap) that is ECVTMaxMPNumBytesInMask
*                             bytes long where the first (CVTMAXMP+1)
*                             bits are valid.                      @LAA
CSD_CPUS_MANIPULATED_BY_WLM_ADDR DC A(0)  Pointer to mask of CPUs
*                             manipulated by WLM. If bit x is on, then
*                             WLM put the CPU into its current state
*                             (online or offline).  Points to a
*                             bitmask on a double word boundary (for
*                             compare and swap) that is
*                             ECVTMaxMPNumBytesInMask bytes long where
*                             the first (CVTMAXMP+1) bits are valid.
*                                                                  @LAA
CSD_CPUS_VARIED_OFFLINE_BY_OPERATOR_ADDR DC A(0) Pointer to mask of
*                             CPUs configured offline by the operator.
*                             Points to a bitmask on a double word
*                             boundary (for compare and swap) that is
*                             ECVTMaxMPNumBytesInMask bytes long where
*                             the first (CVTMAXMP+1) bits are valid.
*                                                                  @LAA
CSD_CPUS_TAKEN_OFFLINE_BY_ACR_ADDR DC A(0) Pointer to mask of CPUs
*                             configured offline by ACR.  Points to a
*                             bitmask on a double word boundary (for
*                             compare and swap) that is
*                             ECVTMaxMPNumBytesInMask bytes long where
*                             the first (CVTMAXMP+1) bits are valid.
*                                                                  @LAA
.CSD11   ANOP  ,
.NOCSD   ANOP  ,
         AIF   (NOT &RCPSSAT(1) AND NOT &ALL OR &RCPSSAT(2)).NOSSAT
&RCPSSAT(2) SETB 1
         TITLE 'SUB SYSTEM AFFINITY TABLE'
*        IHASSAT ,
         IHASSAT ,
.NOSSAT  ANOP  ,
         AIF   (NOT &RCPSVT(1) AND NOT &ALL OR &RCPSVT(2)).NOSVT
&RCPSVT(2) SETB 1
         TITLE 'SUPERVISOR VECTOR TABLE'
*        IHASVT ,
         IHASVT ,
.NOSVT   ANOP  ,
         AIF   (NOT &RCPSWB(1) AND NOT &ALL OR &RCPSWB(2)).NOSWB
&RCPSWB(2) SETB 1
*        IEFSWB ,
         IEFSWB ,
.NOSWB   ANOP  ,
         AIF   (NOT &RCPLCCA(1) AND NOT &ALL OR &RCPLCCA(2)).NOLCCA
&RCPLCCA(2) SETB 1
         TITLE 'LOGICAL CONFIGURATION COMMUNICATION AREA'
*        IHALCCA ,
         IHALCCA ,
.NOLCCA  ANOP  ,
         AIF   (NOT &RCPLCCT(1) AND NOT &ALL OR &RCPLCCT(2)).NOLCCT
&RCPLCCT(2) SETB 1
         TITLE 'LCCA VECTOR TABLE'
*        IHALCCAT ,
         IHALCCAT ,
.NOLCCT  ANOP  ,
         AIF   (NOT &RCPPCCA(1) AND NOT &ALL OR &RCPPCCA(2)).NOPCCA
&RCPPCCA(2) SETB 1
         TITLE 'PHYSICAL CONFIGURATION COMMUNICATION AREA'
*        IHAPCCA ,
         IHAPCCA ,
.NOPCCA  ANOP  ,
         AIF   (NOT &RCPPCCB(1) AND NOT &ALL OR &RCPPCCB(2)).NOPCCB
&RCPPCCB(2) SETB 1
*        IEFPCCB ,
         IEFPCCB ,
.NOPCCB  ANOP  ,
         AIF   (NOT &RCPPCCT(1) AND NOT &ALL OR &RCPPCCT(2)).NOPCCT
&RCPPCCT(2) SETB 1
         TITLE 'PCCA VECTOR TABLE'
*        IHAPCCAT ,
         IHAPCCAT ,
PCCATEND EQU   *
.NOPCCT  ANOP  ,
         AIF   (NOT &RCPGDA(1) AND NOT &ALL OR &RCPGDA(2)).NOGDA
&RCPGDA(2) SETB 1
         TITLE 'VSM GLOBAL DATA AREA'
*        IHAGDA ,
         IHAGDA ,
.NOGDA   ANOP  ,
         AIF   (NOT &RCPLDA(1) AND NOT &ALL OR &RCPLDA(2)).NOLDA
&RCPLDA(2) SETB 1
         TITLE 'VSM LOCAL DATA AREA'
*        IHALDA ,
         IHALDA ,
.NOLDA   ANOP  ,
         AIF   (NOT &RCPCPAB(1) AND NOT &ALL OR &RCPCPAB(2)).NOCPAB
&RCPCPAB(2) SETB 1
         TITLE 'VSM CELL POOL ANCHOR BLOCK'
*        IHACPAB ,
         IHACPAB ,
.NOCPAB  ANOP  ,
         AIF   (NOT &RCPCVT(1) AND NOT &ALL OR &RCPCVT(2)).NOCVT
&RCPCVT(2) SETB 1
         TITLE 'COMMUNICATION VECTOR TABLE'
*        CVT   LIST=YES,DSECT=YES,PREFIX=YES
         CVT   LIST=YES,DSECT=YES,PREFIX=YES
CVT      EQU   CVTMAP
         IHAECVT LIST=YES,DSECT=YES
.NOCVT   ANOP  ,
         AIF   (NOT &RCPSCVT(1) AND NOT &ALL OR &RCPSCVT(2)).NOSCVT
&RCPSCVT(2) SETB 1
         TITLE 'SECONDARY COMMUNICATION VECTOR TABLE'
*        IHASCVT LIST=YES
         IHASCVT LIST=YES
.NOSCVT  ANOP  ,
         AIF   (NOT &RCPASCB(1) AND NOT &ALL OR &RCPASCB(2)).NOASCB
&RCPASCB(2) SETB 1
         TITLE 'ADDRESS SPACE CONTROL BLOCK'
*        IHAASCB ,
         IHAASCB ,
.NOASCB  ANOP  ,
         AIF   (NOT &RCPASSB(1) AND NOT &ALL OR &RCPASSB(2)).NOASSB
&RCPASSB(2) SETB 1
         TITLE 'ADDRESS SPACE SECONDARY BLOCK'
*        IHAASSB LIST=YES
         IHAASSB LIST=YES
.NOASSB  ANOP  ,
         AIF   (NOT &RCPASXB(1) AND NOT &ALL OR &RCPASXB(2)).NOASXB
&RCPASXB(2) SETB 1
         TITLE 'ADDRESS SPACE EXTENSION BLOCK'
*        IHAASXB ,
         IHAASXB ,
.NOASXB  ANOP  ,
         AIF   (NOT &RCPASVT(1) AND NOT &ALL OR &RCPASVT(2)).NOASVT
&RCPASVT(2) SETB 1
         TITLE 'ADDRESS SPACE VECTOR TABLE'
*        IHAASVT ,
         IHAASVT ,
.NOASVT  ANOP  ,
         AIF   (NOT &RCPSRB(1) AND NOT &ALL OR &RCPSRB(2)).NOSRB
&RCPSRB(2) SETB 1
         TITLE 'SERVICE REQUEST BLOCK'
*        IHASRB ,
         IHASRB ,
.NOSRB   ANOP  ,
         AIF   (NOT &RCPTCB(1) AND NOT &ALL OR &RCPTCB(2)).NOTCB
&RCPTCB(2) SETB 1
         TITLE 'TASK CONTROL BLOCK'
*        IKJTCB LIST=YES
         IKJTCB LIST=YES
.NOTCB   ANOP  ,
         AIF   (NOT &RCPOUCB(1) AND NOT &ALL OR &RCPOUCB(2)).NOOUCB
&RCPOUCB(2) SETB 1
         TITLE 'SRM USER CONTROL BLOCK'
*        IRAOUCB ,
         IRAOUCB ,
.NOOUCB  ANOP  ,
         AIF   (NOT &RCPOUXB(1) AND NOT &ALL OR &RCPOUXB(2)).NOOUXB
&RCPOUXB(2) SETB 1
         TITLE 'SRM USER EXTENSION BLOCK'
*        IHAOUXB ,
         IHAOUXB ,
.NOOUXB  ANOP  ,
         AIF   (NOT &RCPSIOT(1) AND NOT &ALL OR &RCPSIOT(2)).NOSIOT
&RCPSIOT(2) SETB 1
         TITLE 'STEP INPUT/OUTPUT TABLE'
SIOT     DSECT ,
*        IEFASIOT ,
         IEFASIOT ,
SIOTL    EQU   176
.NOSIOT  ANOP  ,
         AIF   (NOT &RCPSIOTX(1) AND NOT &ALL OR &RCPSIOTX(2)).NOSIOTX
&RCPSIOTX(2) SETB 1
         TITLE 'STEP INPUT/OUTPUT TABLE EXTENSION'
*        IEFSIOTX ,
         IEFSIOTX ,
SIOTEXTL EQU   *-SIOTX
.NOSIOTX ANOP  ,
         AIF   (NOT &RCPTIOT(1) AND NOT &ALL OR &RCPTIOT(2)).NOTIOT
&RCPTIOT(2) SETB 1
         TITLE 'TASK INPUT OUTPUT TABLE'
TIOT     DSECT ,
*        IEFTIOT1 ,
         IEFTIOT1 ,
.NOTIOT  ANOP  ,
         AIF   (NOT &RCPTCT(1) AND NOT &ALL OR &RCPTCT(2)).NOTCT
&RCPTCT(2) SETB 1
         TITLE 'TIMING CONTROL TABLE'
*        IEFTCT ,
         IEFTCT ,
.NOTCT   ANOP  ,
         AIF   (NOT &RCPLCT(1) AND NOT &ALL OR &RCPLCT(2)).NOLCT
&RCPLCT(2) SETB 1
         TITLE 'LINKAGE CONTROL TABLE'
LCT      DSECT ,
*        IEFALLCT ,
         IEFALLCT ,
.NOLCT   ANOP  ,
         AIF   (NOT &RCPSCT(1) AND NOT &ALL OR &RCPSCT(2)).NOSCT
&RCPSCT(2) SETB 1
         TITLE 'STEP CONTROL TABLE'
SCT      DSECT ,
*        IEFASCTB ,
         IEFASCTB ,
.NOSCT   ANOP  ,
         AIF   (NOT &RCPSCTX(1) AND NOT &ALL OR &RCPSCTX(2)).NOSCTX
&RCPSCTX(2) SETB 1
         TITLE 'STEP CONTROL TABLE EXTENSION'
SCTX     DSECT ,
*        IEFSCTX DSECT=NO
         IEFSCTX DSECT=NO
.NOSCTX  ANOP  ,
         AIF   (NOT &RCPJCT(1) AND NOT &ALL OR &RCPJCT(2)).NOJCT
&RCPJCT(2) SETB 1
         TITLE 'JOB CONTROL TABLE'
JCT      DSECT ,
*        IEFAJCTB ,
         IEFAJCTB ,
.NOJCT   ANOP  ,
         AIF   (NOT &RCPJCTX(1) AND NOT &ALL OR &RCPJCTX(2)).NOJCTX
&RCPJCTX(2) SETB 1
         TITLE 'JOB CONTROL TABLE EXTENSION'
JCTX     DSECT ,
*        IEFJCTX ,
         IEFJCTX ,
.NOJCTX  ANOP  ,
         AIF   (NOT &RCPJMR(1) AND NOT &ALL OR &RCPJMR(2)).NOJMR
&RCPJMR(2) SETB 1
         TITLE 'JOB MANAGEMENT RECORD'
*        IEFJMR ,
         IEFJMR ,
JMRCBLEN EQU    *-JMR
.NOJMR   ANOP  ,
         AIF   (NOT &RCPJSCB(1) AND NOT &ALL OR &RCPJSCB(2)).NOJSCB
&RCPJSCB(2) SETB 1
         TITLE 'JOB STEP CONTROL BLOCK'
*        IEZJSCB ,
         IEZJSCB ,
JSCB     EQU   IEZJSCB
.NOJSCB  ANOP  ,
         AIF   (NOT &RCPATCH(1) AND NOT &ALL OR &RCPATCH(2)).NOATTCH
&RCPATCH(2) SETB 1
         TITLE 'ATTACH (SVC 42) PARAMETER LIST'
*        IEZATTCH ,
         IEZATTCH ,
.NOATTCH ANOP  ,
         AIF   (NOT &RCPSCB(1) AND NOT &ALL OR &RCPSCB(2)).NOSCB
&RCPSCB(2) SETB 1
         TITLE 'STAE CONTROL BLOCK'
*        IHASCB ,
         IHASCB ,
.NOSCB   ANOP  ,
         AIF   (NOT &RCPSMCA(1) AND NOT &ALL OR &RCPSMCA(2)).NOSMCA
&RCPSMCA(2) SETB 1
         TITLE 'SYSTEM MANAGEMENT FACILITIES CONTROL AREA (SMCA)'
*        IEESMCA ,
         IEESMCA ,
SMCA     EQU   SMCABASE
.NOSMCA  ANOP  ,
         AIF   (NOT &RCPBASE(1) AND NOT &ALL OR &RCPBASE(2)).NOBASEA
&RCPBASE(2) SETB 1
         TITLE 'MASTER SCHEDULER RESIDENT DATA AREA (BASEA)'
*        IEEBASEA ,
         IEEBASEA ,
BASEA    EQU   BASE
.NOBASEA ANOP  ,
         AIF   (NOT &RCPCSCB(1) AND NOT &ALL OR &RCPCSCB(2)).NOCSCB
&RCPCSCB(2) SETB 1
         TITLE 'COMMAND SCHEDULING CONTROL BLOCK'
CSCB     DSECT ,
*        IEECHAIN ,
         IEECHAIN ,
.NOCSCB  ANOP  ,
         AIF   (NOT &RCPCIB(1) AND NOT &ALL OR &RCPCIB(2)).NOCIB
&RCPCIB(2) SETB 1
         TITLE 'COMMAND INPUT BUFFER'
CIB      DSECT ,
*        IEZCIB ,
         IEZCIB ,
.NOCIB   ANOP  ,
         AIF   (NOT &RCPECB(1) AND NOT &ALL OR &RCPECB(2)).NOECB
&RCPECB(2) SETB 1
         TITLE 'EVENT CONTROL BLOCK'
*        IHAECB ,
         IHAECB ,
.NOECB   ANOP  ,
         AIF   (NOT &RCPACB(1) AND NOT &ALL OR &RCPACB(2)).NOACB
&RCPACB(2) SETB 1
         TITLE 'ACCESS METHOD CONTROL BLOCK (ACB)'
*        IFGACB ,
         IFGACB ,
ACB      EQU   IFGACB
.NOACB   ANOP  ,
         AIF   (NOT &RCPACEE(1) AND NOT &ALL OR &RCPACEE(2)).NOACEE
&RCPACEE(2) SETB 1
         TITLE 'ACCESSOR ENVIRONMENT ELEMENT (ACEE)'
*        IHAACEE ,
         IHAACEE ,
.NOACEE  ANOP  ,
         AIF   (NOT &RCPRPL(1) AND NOT &ALL OR &RCPRPL(2)).NORPL
&RCPRPL(2) SETB 1
         TITLE 'REQUEST PARAMETER LIST'
*        IFGRPL ,
         IFGRPL ,
RPL      EQU   IFGRPL
.NORPL   ANOP  ,
         AIF   (NOT &RCPDACA(1) AND NOT &ALL OR &RCPDACA(2)).NODACA
&RCPDACA(2) SETB 1
         TITLE 'DEVICE ALLOCATION COMMUNICATION AREA'
*        DACA  ,
         DACA  ,
.NODACA  ANOP  ,
         AIF   (NOT &RCPDCB(1) AND NOT &ALL OR &RCPDCB(2)).NODCB
&RCPDCB(2) SETB 1
         TITLE 'DATA CONTROL BLOCK'
*        DCBD  DSORG=(BX,DA,IS,PO,PS,XA,XE),DEVD=(BS,DA,RD,PC,PR,TA,WT)
         DCBD  DSORG=(BX,DA,IS,PO,PS,XA,XE),DEVD=(BS,DA,RD,PC,PR,TA,WT)
DCB      EQU   IHADCB
.NODCB   ANOP  ,
         AIF   (NOT &RCPDCBE(1) AND NOT &ALL OR &RCPDCBE(2)).NODCBE
&RCPDCBE(2) SETB 1
         TITLE 'DATA CONTROL BLOCK EXTENSION'
*        IHADCBE ,
         IHADCBE
.NODCBE  ANOP  ,
         AIF   (NOT &RCPDECB(1) AND NOT &ALL OR &RCPDECB(2)).NODECB
&RCPDECB(2) SETB 1
         TITLE 'DATA EVENT CONTROL BLOCK'
*        IHADECB ,                      (SUPPLANTS IECTDECB)
         IHADECB ,
IECTDECB EQU   DECB                     (DSECT NAME USED BY BTAM)
.NODECB  ANOP  ,
         AIF   (NOT &RCPJFCB(1) AND NOT &ALL OR &RCPJFCB(2)).NOJFCB
&RCPJFCB(2) SETB 1
         TITLE 'JOB FILE CONTROL BLOCK'
JFCB     DSECT ,
*        IEFJFCBN LIST=YES
         IEFJFCBN LIST=YES
.NOJFCB  ANOP  ,
         AIF   (NOT &RCPJFCX(1) AND NOT &ALL OR &RCPJFCX(2)).NOJFCBX
&RCPJFCX(2) SETB 1
         TITLE 'JOB FILE CONTROL BLOCK EXTENSION'
JFCBX    DSECT ,
*        IEFJFCBX ,
         IEFJFCBX ,
JFCBXLEN EQU   *-JFCBX
         EJECT ,
*        IEFJFCBE ,
         IEFJFCBE ,
.NOJFCBX ANOP  ,
         AIF   (NOT &RCPDEB(1) AND NOT &ALL OR &RCPDEB(2)).NODEB
&RCPDEB(2) SETB 1
         TITLE 'DATA EXTENT BLOCK'
*        IEZDEB LIST=YES
         IEZDEB LIST=YES
IECTDEB  EQU   DEB                      (DSECT NAME USED BY BTAM)
.*DEBSYSPG EQU   DEPOPATB+1,3,C'A'        (FROM IECTDEB MAPPING)
.NODEB   ANOP  ,
         AIF   (NOT &RCPGEPL(1) AND NOT &ALL OR &RCPGEPL(2)).NOGEPL
&RCPGEPL(2) SETB 1
         TITLE 'GROUP EXIT PARAMETER LIST (GEPL)'
*        IXCYGEPL ,
         IXCYGEPL ,
.NOGEPL  ANOP  ,
         AIF   (NOT &RCPMEPL(1) AND NOT &ALL OR &RCPMEPL(2)).NOMEPL
&RCPMEPL(2) SETB 1
         TITLE 'MESSAGE EXIT PARAMETER LIST (MEPL)'
*        IXCYMEPL ,
         IXCYMEPL ,
.NOMEPL  ANOP  ,
         AIF   (NOT &RCPMNPL(1) AND NOT &ALL OR &RCPMNPL(2)).NOMNPL
&RCPMNPL(2) SETB 1
         TITLE 'MESSAGE NOTIFY EXIT PARAMETER LIST (MNPL)'
*        IXCYMNPL ,
         IXCYMNPL ,
.NOMNPL  ANOP  ,
         AIF   (NOT &RCPMQAA(1) AND NOT &ALL OR &RCPMQAA(2)).NOMQAA
&RCPMQAA(2) SETB 1
         TITLE 'MESSAGE CONTROL QUERY ANSWER AREA (MQAA)'
*        IXCYMQAA ,
         IXCYMQAA ,
.NOMQAA  ANOP  ,
         AIF   (NOT &RCPQUAA(1) AND NOT &ALL OR &RCPQUAA(2)).NOQUAA
&RCPQUAA(2) SETB 1
         TITLE 'QUERY ANSWER AREA (QUAA)'
*        IXCYQUAA ,
         IXCYQUAA ,
.NOQUAA  ANOP  ,
         AIF   (NOT &RCPSEPL(1) AND NOT &ALL OR &RCPSEPL(2)).NOSEPL
&RCPSEPL(2) SETB 1
         TITLE 'STATUS EXIT PARAMETER LIST (SEPL)'
*        IXCYSEPL ,
         IXCYSEPL ,
.NOSEPL  ANOP  ,
         AIF   (NOT &RCPIOB(1) AND NOT &ALL OR &RCPIOB(2)).NOIOB
&RCPIOB(2) SETB 1
         TITLE 'INPUT OUTPUT BLOCK'
*        IEZIOB ,
         IEZIOB ,
IECTIOB  EQU   IOBSTDRD                 (DSECT NAME USED BY BTAM)
.NOIOB   ANOP  ,
         AIF   (NOT &RCPIOBE(1) AND NOT &ALL OR &RCPIOBE(2)).NOIOBE
&RCPIOBE(2) SETB 1
         TITLE 'INPUT OUTPUT BLOCK EXTENSION'
*        IOSDIOBE ,
         IOSDIOBE ,
.NOIOBE  ANOP  ,
         AIF   (NOT &RCPIOSB(1) AND NOT &ALL OR &RCPIOSB(2)).NOIOSB
&RCPIOSB(2) SETB 1
         TITLE 'I/O SUPERVISOR BLOCK (IOSB)'
*        IECDIOSB ,
         IECDIOSB ,
.NOIOSB  ANOP  ,
         AIF   (NOT &RCPIPA(1) AND NOT &ALL OR &RCPIPA(2)).NOIPA
&RCPIPA(2) SETB 1
         TITLE 'INITIALIZATION PARAMETER AREA (IPA)'
*        IHAIPA DSECT=YES
         IHAIPA DSECT=YES
.NOIPA   ANOP  ,
         AIF   (NOT &RCPIPIB(1) AND NOT &ALL OR &RCPIPIB(2)).NOIPIB
&RCPIPIB(2) SETB 1
         TITLE 'I/O SUPERVISOR PURGE INTERFACE BLOCK (IPIB)'
*        IECDIPIB ,
         IECDIPIB ,
.NOIPIB  ANOP  ,
         AIF   (NOT &RCPATB(1) AND NOT &ALL OR &RCPATB(2)).NOATB
&RCPATB(2) SETB 1
         TITLE 'IOS ATTENTION TABLE'
*        IECDATB
         IECDATB ,
.NOATB   ANOP  ,
         AIF   (NOT &RCPUCBG(1) AND NOT &ALL OR &RCPUCBG(2)).NOUCBG
&RCPUCBG(2) SETB 1
         TITLE 'IOS COMMUNICATIONS AREA'
*        IECDIOCM
         IECDIOCM ,
.NOUCBG  ANOP  ,
         AIF   (NOT &RCPUCB(1) AND NOT &ALL OR &RCPUCB(2)).NOUCB
&RCPUCB(2) SETB 1
         TITLE 'UNIT CONTROL BLOCK'
*        IEFUCBOB LIST=YES,PREFIX=YES
         IEFUCBOB LIST=YES,PREFIX=YES
.NOUCB   ANOP  ,
         AIF   (NOT &RCPUCBCX(1) AND NOT &ALL OR &RCPUCBCX(2)).NOUCBCX
&RCPUCBCX(2) SETB 1
         TITLE 'UCB TAPE CLASS EXTENSION'
*        IECUCBCX ,
         IECUCBCX ,
.NOUCBCX ANOP  ,
         AIF   (NOT &RCPUCM(1) AND NOT &ALL OR &RCPUCM(2)).NOUCM
&RCPUCM(2) SETB 1
         TITLE 'UNIT CONTROL MODULE'
*        IEECUCM FORMAT=NEW,LIST=YES
         IEECUCM FORMAT=NEW,LIST=YES
.NOUCM   ANOP  ,
         AIF   (NOT &RCPWPL(1) AND NOT &ALL OR &RCPWPL(2)).NOWPL
&RCPWPL(2) SETB 1
         TITLE 'WRITE TO OPERATOR PARAMETER LIST'
*        IEZWPL
         IEZWPL ,
WPLRFLEN EQU   *-WPLRF
.NOWPL   ANOP  ,
         AIF   (NOT &RCPWQE(1) AND NOT &ALL OR &RCPWQE(2)).NOWQE
&RCPWQE(2) SETB 1
         TITLE 'WRITE TO OPERATOR QUEUE ELEMENT'
*        IHAWQE
         IHAWQE ,
.NOWQE   ANOP  ,
         AIF   (NOT &RCPRQE(1) AND NOT &ALL OR &RCPRQE(2)).NORQE
&RCPRQE(2) SETB 1
         TITLE 'REQUEST QUEUE ELEMENT'
*        IECDRQE ,
         IECDRQE ,
.NORQE   ANOP  ,
         AIF   (NOT &RCPDSCB(1) AND NOT &ALL OR &RCPDSCB(2)).NODSCB
&RCPDSCB(2) SETB 1
         TITLE 'DATA SET CONTROL BLOCK - FORMAT 1'
DSCB     DSECT ,
         IECSDSL1 1
         TITLE 'DATA SET CONTROL BLOCK - FORMAT 2'
         ORG   DSCB
         IECSDSL1 2
         TITLE 'DATA SET CONTROL BLOCK - FORMAT 3'
         ORG   DSCB
         IECSDSL1 3
         TITLE 'DATA SET CONTROL BLOCK - FORMAT 4'
         ORG   DSCB
         DS    XL44                     KEY
         IECSDSL1 4
         TITLE 'DATA SET CONTROL BLOCK - FORMAT 5'
         ORG   DSCB
         IECSDSL1 5
         TITLE 'DATA SET CONTROL BLOCK - FORMAT 6'
         ORG   DSCB
         IECSDSL1 6
.NODSCB  ANOP  ,
         AIF   (NOT &RCPDSNT(1) AND NOT &ALL OR &RCPDSNT(2)).NODSNT
&RCPDSNT(2) SETB 1
         TITLE 'DATA SET NAME TABLE'
DSNT     DSECT ,
*        IEFDSNT ,
         IEFDSNT ,
.NODSNT  ANOP  ,
         AIF   (NOT &RCPDSAB(1) AND NOT &ALL OR &RCPDSAB(2)).NODSAB
&RCPDSAB(2) SETB 1
         TITLE 'DSAB QUEUE DESCRIPTOR BLOCK'
*        IEFZB4D5 ,
         IEFZB4D5 ,
         TITLE 'DATA SET ASSOCIATION BLOCK'
*        IHADSAB ,
         IHADSAB ,
.NODSAB  ANOP  ,
         AIF   (NOT &RCPRB(1) AND NOT &ALL OR &RCPRB(2)).NORB
&RCPRB(2) SETB 1
         TITLE 'REQUEST BLOCK'
*        IHARB ,
         IHARB LIST=&LIST
.NORB    ANOP  ,
  AIF   (NOT &RCPXSB(1) AND NOT &ALL OR &RCPXSB(2)).NOXSB
&RCPXSB(2) SETB 1
         TITLE 'EXTENDED STATUS BLOCK'
*        IHAXSB ,
         IHAXSB LIST=&LIST
.NOXSB   ANOP  ,
         AIF   (NOT &RCPIQE(1) AND NOT &ALL OR &RCPIQE(2)).NOIQE
&RCPIQE(2) SETB 1
         TITLE 'INTERRUPTION QUEUE ELEMENT'
*        IHAIQE ,
         IHAIQE ,
IQE      EQU   IQESECT
.NOIQE   ANOP  ,
         AIF   (NOT &RCPCDE(1) AND NOT &ALL OR &RCPCDE(2)).NOCDE
&RCPCDE(2) SETB 1
         TITLE 'CONTENTS DIRECTORY ENTRY'
*        IHACDE ,
         IHACDE ,
.NOCDE   ANOP  ,
         AIF   (NOT &RCPLPDE(1) AND NOT &ALL OR &RCPLPDE(2)).NOLPDE
&RCPLPDE(2) SETB 1
         TITLE 'LINK PACK DIRECTORY ENTRY'
*        IHALPDE ,
         IHALPDE ,
.NOLPDE  ANOP  ,
         AIF   (NOT &RCPLWA(1) AND NOT &ALL OR &RCPLWA(2)).NOLWA
&RCPLWA(2) SETB 1
         TITLE 'LOGON WORK AREA'
*        IKJEFLWA ,
         IKJEFLWA ,
.NOLWA   ANOP  ,
         AIF   (NOT &RCPLLE(1) AND NOT &ALL OR &RCPLLE(2)).NOLLE
&RCPLLE(2) SETB 1
         TITLE 'LOAD LIST ELEMENT'
*        IHALLE ,
         IHALLE ,
.NOLLE   ANOP  ,
         AIF   (NOT &RCPXL(1) AND NOT &ALL OR &RCPXL(2)).NOXL
&RCPXL(2) SETB 1
         TITLE 'EXTENT LIST'
*        IHAXTLST ,
         IHAXTLST ,
.NOXL    ANOP  ,
         AIF   (NOT &RCPQCB(1) AND NOT &ALL OR &RCPQCB(2)).NOQCB
&RCPQCB(2) SETB 1
         TITLE 'GRS QUEUE CONTROL BLOCK'
*        ISGQCB ,
         ISGQCB ,
.NOQCB   ANOP  ,
         AIF   (NOT &RCPQDB(1) AND NOT &ALL OR &RCPQDB(2)).NOQDB
&RCPQDB(2) SETB 1
         TITLE 'QUEUE DESCRIPTOR BLOCK'
*        IHAQDB DSECT=YES
         IHAQDB DSECT=YES
.NOQDB   ANOP  ,
         AIF   (NOT &RCPQEL(1) AND NOT &ALL OR &RCPQEL(2)).NOQEL
&RCPQEL(2) SETB 1
         TITLE 'GRS QUEUE ELEMENT'
*        ISGQEL ,
         ISGQEL ,
.NOQEL   ANOP  ,
         AIF   (NOT &RCPPSCB(1) AND NOT &ALL OR &RCPPSCB(2)).NOPSCB
&RCPPSCB(2) SETB 1
         TITLE 'PROTECTED STEP CONTROL BLOCK'
*        IKJPSCB ,
         IKJPSCB ,
.NOPSCB  ANOP  ,
         AIF   (NOT &RCPECT(1) AND NOT &ALL OR &RCPECT(2)).NOECT
&RCPECT(2) SETB 1
         TITLE 'ENVIRONMENT CONTROL TABLE'
*        IKJECT ,
         IKJECT ,
ECTLEN   EQU   *-ECT
.NOECT   ANOP  ,
         AIF   (NOT &RCPUPT(1) AND NOT &ALL OR &RCPUPT(2)).NOUPT
&RCPUPT(2) SETB 1
         TITLE 'USER PROFILE TABLE'
*        IKJUPT ,
         IKJUPT ,
UPTLNGTH EQU   *-UPT
.NOUPT   ANOP  ,
         AIF   (NOT &RCPSDWA(1) AND NOT &ALL OR &RCPSDWA(2)).NOSDWA
&RCPSDWA(2) SETB 1
         TITLE 'SYSTEM DIAGNOSTIC WORK AREA'
*        IHASDWA ,
         IHASDWA ,
.NOSDWA  ANOP  ,
         AIF   (NOT &RCPFRRS(1) AND NOT &ALL OR &RCPFRRS(2)).NOFRRS
&RCPFRRS(2) SETB 1
         TITLE 'FUNCTION RECOVERY ROUTINE (FRR) STACK'
*        IHAFRRS ,
         IHAFRRS ,
.NOFRRS  ANOP  ,
         AIF   (NOT &RCPWSVT(1) AND NOT &ALL OR &RCPWSVT(2)).NOWSAVT
&RCPWSVT(2) SETB 1
         TITLE 'GLOBAL WORK/SAVE AREA VECTOR TABLE'
*        IHAWSAVT CLASS=GLOBAL
         IHAWSAVT CLASS=GLOBAL
         TITLE 'LOCAL WORK/SAVE AREA VECTOR TABLE'
*        IHAWSAVT CLASS=LOCAL
         IHAWSAVT CLASS=LOCAL
         TITLE 'CPU WORK/SAVE AREA VECTOR TABLE'
*        IHAWSAVT CLASS=CPU
         IHAWSAVT CLASS=CPU
.NOWSAVT ANOP  ,
         AIF   (NOT &RCPTSB(1) AND NOT &ALL OR &RCPTSB(2)).NOTSB
&RCPTSB(2) SETB 1
         TITLE 'TERMINAL STATUS BLOCK AND EXTENSION'
*        IKJTSB LIST=YES,EXT=YES
         IKJTSB LIST=YES,EXT=YES
.NOTSB   ANOP  ,
         AIF   (NOT &RCPCPPL(1) AND NOT &ALL OR &RCPCPPL(2)).NOCPPL
&RCPCPPL(2) SETB 1
         TITLE 'COMMAND PROCESSOR PARAMETER LIST'
*        IKJCPPL ,
         IKJCPPL ,
.NOCPPL  ANOP  ,
         AIF   (NOT &RCPPPL(1) AND NOT &ALL OR &RCPPPL(2)).NOPPL
&RCPPPL(2) SETB 1
         TITLE 'TSO PARSE PARAMETER LIST'
*        IKJPPL ,
         IKJPPL ,
PPLLEN   EQU   *-PPL
.NOPPL   ANOP  ,
         AIF   (NOT &RCPCSPL(1) AND NOT &ALL OR &RCPCSPL(2)).NOCSPL
&RCPCSPL(2) SETB 1
         TITLE 'TSO COMMAND SCAN PARAMETER LIST && OUTPUT AREA'
*        IKJCSPL ,
         IKJCSPL ,
CSPLLEN  EQU   *-CSPL
         SPACE 2
*        IKJCSOA ,
         IKJCSOA ,
CSOALEN  EQU   *-CSOA
.NOCSPL  ANOP  ,
         AIF   (NOT &RCPIOPL(1) AND NOT &ALL OR &RCPIOPL(2)).NOIOPL
&RCPIOPL(2) SETB 1
         TITLE 'TSO INPUT/OUTPUT PARAMETER LIST'
*        IKJIOPL ,
         IKJIOPL ,
IOPLLEN  EQU   *-IOPL
.NOIOPL  ANOP  ,
         AIF   (NOT &RCPALLC(1) AND NOT &ALL OR &RCPALLC(2)).NOALLOC
&RCPALLC(2) SETB 1
         TITLE 'DYNAMIC ALLOCATION PARAMETER LIST'
*        IEFZB4D0 ,
         IEFZB4D0 ,
         TITLE 'DYNAMIC ALLOCATION TEXT UNIT KEYS'
*        IEFZB4D2 ,
         IEFZB4D2 ,
         TITLE 'DAIRFAIL PARAMETER LIST'
.*       IKJEFFDF DFDSECT=YES,DFDSEC2=YES
         IKJEFFDF DFDSECT=YES,DFDSEC2=YES
.NOALLOC ANOP  ,
         AIF   (NOT &RCPCTLG(1) AND NOT &ALL OR &RCPCTLG(2)).NOCTLG
&RCPCTLG(2) SETB 1
         TITLE 'ACCESS METHOD DATA STATISTICS BLOCK'
*        IDAAMDSB ,
         IDAAMDSB ,
         TITLE 'CATALOG AUXILIARY WORK AREA'
*        IGGCAXWA ,
         IGGCAXWA ,
CAXLEN   EQU   *-IGGCAXWA
         TITLE 'CATALOG COMMUNICATION AREA'
*        IGGCCA ,
         IGGCCA ,
         TITLE 'CATALOG COMMUNICATION AREA EXTENSION'
*        IGGCCX ,
         IGGCCX ,
         TITLE 'CATALOG INTEGRITY CONTROL BLOCK'
*        CICB  ,
         CICB  ,
         TITLE 'CATALOG CONTROL VOLUME LIST'
*        IEZCTGCV ,
         IEZCTGCV ,
         TITLE 'CATALOG CAMLST PARAMETER LIST'
*        IEZCAML ,
         IEZCAML ,
         TITLE 'CATALOG FIELD PARAMETER LIST'
*        IEZCTGFL ,
         IEZCTGFL ,
         TITLE 'CATALOG FIELD VECTOR TABLE'
*        IEZCTGFV ,
         IEZCTGFV ,
         TITLE 'CATALOG PARAMETER LIST'
*        IEZCTGPL ,
IEZCTGPL DSECT ,
         IEZCTGPL
         TITLE 'CATALOG VOLUME LIST'
*        IEZCTGVL ,
         IEZCTGVL ,
         TITLE 'CATALOG WORK AREA'
*        IEZCTGWA ,
         IEZCTGWA ,
         TITLE 'CATALOG MANAGEMENT RETURN CODES'
*        COPY  #CATRC
         COPY  #CATRC
.NOCTLG  ANOP  ,
         AIF   (NOT &RCPCVAF(1) AND NOT &ALL OR &RCPCVAF(2)).NOCVAF
&RCPCVAF(2) SETB 1
         TITLE 'CVAF PARAMETER LIST'
*        ICVAFPL ,
         ICVAFPL ,
         TITLE 'CVAF BUFFER LIST'
*        ICVAFBFL ,
         ICVAFBFL ,
.NOCVAF  ANOP  ,
         AIF   (NOT &RCPEDT(1) AND NOT &ALL OR &RCPEDT(2)).NOEDT
&RCPEDT(2) SETB 1
         TITLE 'ELIGIBLE DEVICES TABLE AND UCB POINTER LIST'
*        IEFZB421 ,
         IEFZB421 ,
         SPACE 3
*        IEFZB461 ,
         IEFZB461 ,
.NOEDT   ANOP  ,
         AIF   (NOT &RCPZ4UV(1) AND NOT &ALL OR &RCPZ4UV(2)).NOZ4UV
&RCPZ4UV(2) SETB 1
         TITLE 'IEFAB4UV/IEFEB4UV PARAMETER LIST'
*        IEFZB4UV ,
         IEFZB4UV ,
.NOZ4UV  ANOP  ,
         AIF   (NOT &RCPZ502(1) AND NOT &ALL OR &RCPZ502(2)).NOZ502
&RCPZ502(2) SETB 1
         TITLE 'SWA BLOCK HEADER'
*        IEFZB502 ,
         IEFZB502 ,
SWPSIZE  EQU   *-ZB502
.NOZ502  ANOP  ,
         AIF   (NOT &RCPZ505(1) AND NOT &ALL OR &RCPZ505(2)).NOZ505
&RCPZ505(2) SETB 1
         TITLE 'SWA MANAGER EXTERNAL PARAMETER AREA - LOCATE MODE'
*        IEFZB505 ,
         IEFZB505 ,
ZB505L   EQU   *-ZB505
.NOZ505  ANOP  ,
         AIF   (NOT &RCPZ506(1) AND NOT &ALL OR &RCPZ506(2)).NOZ506
&RCPZ506(2) SETB 1
         TITLE 'SWA MANAGER EXTERNAL PARAMETER AREA - MOVE MODE'
*        IEFZB506 ,
         IEFZB506 ,
.NOZ506  ANOP  ,
         AIF   (NOT &RCPQMPA(1) AND NOT &ALL OR &RCPQMPA(2)).NOQMPA
&RCPQMPA(2) SETB 1
         TITLE 'QUEUE MANAGER PARAMETER AREQ (QMPA)'
*        IEFQMNGR ,
         IEFQMNGR ,
.NOQMPA  ANOP  ,
         AIF   (NOT &RCPJES(1) AND NOT &ALL OR &RCPJES(2)).NOJES
&RCPJES(2) SETB 1
         TITLE 'JES CONTROL TABLE'
*        IEFJESCT ,
         IEFJESCT ,
.NOJES   ANOP  ,
         AIF   (NOT &RCPSSS(1) AND NOT &ALL OR &RCPSSS(2)).NOSSS
&RCPSSS(2) SETB 1
         TITLE 'SUBSYSTEM COMMUNICATIONS VECTOR TABLE'
*        IEFJSCVT ,
         IEFJSCVT ,
         TITLE 'SUBSYSTEM VECTOR TABLE'
*        IEFJSSVT ,
         IEFJSSVT ,
         TITLE 'SUBSYSTEM IDENTIFICATION BLOCK'
*        IEFJSSIB ,
         IEFJSSIB ,
         TITLE 'SUBSYSTEM OPTIONS BLOCK'
*        IEFJSSOB (SO,CS,JS,AL,EN,ET,WT,CM,US,JT,RQ,DM,VS,DA,RR,CF,
*              SI,CI,AG)
         IEFJSSOB (SO,CS,JS,AL,EN,ET,WT,CM,US,JT,RQ,DM,VS,DA,RR,CF,    X
               SI,CI,AG)
.NOSSS   ANOP  ,
         AIF   (NOT &RCPRCVT(1) AND NOT &ALL OR &RCPRCVT(2)).NORCVT
&RCPRCVT(2) SETB 1
         TITLE 'RACF COMMUNICATIONS VECTOR TABLE'
*        ICHPRCVT ,
         ICHPRCVT ,
.***NOTE: THE FOLLOWING STATEMENTS CAN BE REMOVED ONCE OUR
.***      ASSEMBLY BASE IS Z/OS 1.5 OR HIGHER
         AIF   (D'RCVTML2F).RCVT15   SKIP IF Z/OS 1.5 MACLIB
RCVTML2F EQU   RCVTSINT+L'RCVTSINT,1 DEFINE 1.5 LEVEL FIELD
RCVTSBYS EQU   X'10'                 DEFINE 1.5 LEVEL FLAG
.RCVT15  ANOP  ,
.NORCVT  ANOP  ,
         AIF   (NOT &RCPLPDAT(1) AND NOT &ALL OR &RCPLPDAT(2)).NOLPDAT
&RCPLPDAT(2) SETB 1
         TITLE 'SYSEVENT LPAR CAPACITY DATA PARAMETER LIST'
*        IRALPDAT
         IRALPDAT TITLE=NO,LIST=&LIST
         AIF   (D'LPDATIMGMSULIMIT).LPDAT80 SKIP IF 1.11 MACLIB
LPDATIMGMSULIMIT EQU LPDATRESERVED,4,C'F' DEFINE 1.11 FIELD
LPDATSERVICEUNUSEDGROUPCAPACITY EQU LPDATSERVICECAPPEDTIME+4,4,C'F'
.LPDAT80 ANOP  ,
         GBLC  &IRALPDAT_INCLUDED    IBM GLOBAL
&IRALPDAT_INCLUDED SETC 'YES'        SET IBM GLOBAL
.NOLPDAT ANOP  ,
         AIF   (NOT &RCPRMCT(1) AND NOT &ALL OR &RCPRMCT(2)).NORMCT
&RCPRMCT(2) SETB 1
         TITLE 'SYSTEM RESOURCES MANAGER CONTROL TABLE (RMCT)'
*        IRARMCT
         IRARMCT ,
         AIF   (D'RMCTX3).RMCT30     Skip if RMCTZ ptr defined
RMCTX3   EQU   RMCTR01,4,C'F'  Define ptr to RMCTZ
.RMCT30  ANOP  ,
.NORMCT  ANOP  ,
         AIF   (NOT &RCPRMCTZ(1) AND NOT &ALL OR &RCPRMCTZ(2)).NORMCTZ
&RCPRMCTZ(2) SETB 1
         TITLE 'RMCT EXTENSION 3 (RMCTZ)'
*        IRARMCTZ
         IRARMCTZ ,
.NORMCTZ ANOP  ,
         AIF   (NOT &RCPDSERV(1) AND NOT &ALL OR &RCPDSERV(2)).NODSERV
&RCPDSERV(2) SETB 1
         TITLE 'IAZDSERV'
*        IAZDSERV
         IAZDSERV ,
         AIF   (D'DSRVSZE8).DSRV8
DSRVSVR8 EQU   8                   Service version number of
*                                  IAZDSERV - z/OS 2.1
         ORG   DSERV+X'88'
DSRVCATC DS    A                   Pointer to CAT/GRPOBJ cache
*                                  if NOT a live version and
*                                  cache is requested.
DSRVSZE8 EQU   *-DSERV             DSERV Version 8 fixed
*                                  parameter length
.DSRV8   ANOP  ,
.NODSERV ANOP  ,
         TITLE ' '
&ZPRINT  SETC  '&SAVEZ'        RESTORE IBM PRINT CONTROL
&ZCBPRINT SETC '&SAVEZCB'      RESTORE OTHER IBM PRINT CONTROL
         AIF   (&PRT).DSE0500
         POP   PRINT
.DSE0500 MEND  ,

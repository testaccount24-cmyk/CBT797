         MACRO
&NAME    #GOIF &SW,&ON=,&OFF=,&ANY=,&NOTALL=,&MIXED=
         GBLA  &DCLDSW#             COUNTER OF # OF SWITCH BYTES.
         GBLA  &DCLGSW#             COUNTER OF # OF GENERIC BYTES.
         GBLB  &DCLDSWD(99)         DEFER DECLARE INDICATORS.
         GBLC  &DCLDSWN(99)         SWITCH BYTE NAMES.
         GBLC  &DCLDSWB(800)        SWITCH BIT NAMES.
         GBLC  &DCLGSWN(99)         GENERIC SWITCH BYTE NAMES.
         GBLC  &DCLGSWB(99)         GENERIC SWITCH BIT PREFIXES.
         LCLA  &A,&B,&C,&D,&E       LOCAL WORK SYMBOLS.
         LCLB  &F(20),&G
         LCLC  &K(20),&L(20),&M,&N,&O,&P(2),&Q
         AIF   ('&ON&OFF&ANY&NOTALL&MIXED' EQ '').GOI3400   ERROR.
.*
.* FIRST LOCATE THE SWITCHES.
.*
         AIF   ('&SW' EQ '').GOI3500   ERROR - NO SWITCHES.
&A       SETA  N'&SW                GET # SWITCHES REQUESTED.
&B       SETA  0                    INDEX INTO SUPPLIED SWITCHES.
&C       SETA  &DCLDSW#*8           POINT TO LAST DECLARED SWITCH.
&E       SETA  0                    COUNTER OF # BYTES FOUND.
.GOI0100 AIF   (&B EQ &A).GOI1300   FINISHED, EXIT SEARCH.
&B       SETA  &B+1                 POINT TO NEXT SWITCH.
&M       SETC  '&SYSLIST(1,&B)'     GRAB SUPPLIED SWITCH.
&G       SETB  0                    RESET NOT FLAG.
&D       SETA  1                    INDEX INTO # DECLARED SWITCHES.
         AIF   ('&M'(1,4) NE 'NOT-').GOI0200   NO NOT, CONTINUE.
&G       SETB  1                    TURN NOT FLAG ON.
&M       SETC  '&M'(5,K'&M-4)       STRIP OFF NOT.
.GOI0200 AIF   (&DCLDSW# EQ 0).GOI0400   NO DECLARED, TRY GENERICS.
.GOI0300 AIF   ('&M' EQ '&DCLDSWB(&D)').GOI0600   FOUND HIM.
&D       SETA  &D+1                 INDEX TO NEXT BIT.
         AIF   (&D LE &C).GOI0300   KEEP LOOKING.
.GOI0400 AIF   (&DCLGSW# EQ 0).GOI3600   ERROR - SWITCH NOT FOUND.
&D       SETA  1                    INDEX INTO # GENERIC SWITCHES.
.GOI0500 AIF   ('&M'(1,K'&DCLGSWB(&D)) EQ '&DCLGSWB(&D)').GOI0700
&D       SETA  &D+1                 NOT HIM, INDEX TO NEXT PREFIX.
         AIF   (&D LE &DCLGSW#).GOI0500   KEEP LOOKING.
         AGO   .GOI3600             ERROR - SWITCH NOT FOUND.
.*
.* INCOMING SWITCH IA A DECLARED SWITCH.
.*
.GOI0600 ANOP
&D       SETA  (&D+7)/8             INDEX TO DECARED BYTE NAME TABLE.
&N       SETC  '&DCLDSWN(&D)'       GET BYTE NAME.
         AGO   .GOI0800             CONTINUE.
.*
.* INCOMING SWITCH IA A GENERIC SWITCH.
.*
.GOI0700 ANOP
&N       SETC  '&DCLGSWN(&D)'       GET BYTE NAME.
.*
.* ADD SWITCH BYTE AND SWITCH BIT NAME TO A TABLE AS FOLLOWS:
.*
.*    - IF THE BYTE NAME IS NOT IN THE TABLE, ADD IT.
.*    - IF IT IS BUT THE NOT FLAGS DONT MATCH, ADD IT AS A NEW ENTRY.
.*    - OTHERWISE, CONCATENATE THE NEW SWITCH BIT NAME TO THE OLD
.*      SWITCH BIT NAME, WITH A '+' SIGN IN BETWEEN.
.*
.GOI0800 AIF   (&E EQ 0).GOI1100    FIRST ENTRY, CONTINUE.
&D       SETA  1                    INDEX INTO FOUND TABLES.
.GOI0900 AIF   ('&N' EQ '&K(&D)').GOI1000   MATCHING NAME, CONTINUE.
&D       SETA  &D+1                 POINT TO NEXT ENTRY.
         AIF   (&D LE &E).GOI0900   KEEP LOOKING.
         AGO   .GOI1100             THIS GUY IS NEW.
.GOI1000 AIF   (&G EQ &F(&D)).GOI1200   SAME SEX TOO...
&D       SETA  &D+1                 POINT TO NEXT ENTRY.
         AIF   (&D LE &E).GOI0900   KEEP LOOKING.
.*
.* THIS ENTRY IS A NEW BYTE NAME.
.*
.GOI1100 ANOP
&E       SETA  &E+1                 BUMP COUNTER OF # FOUND.
&K(&E)   SETC  '&N'                 SAVE BYTE NAME.
&L(&E)   SETC  '&M'                 SAVE BIT NAME.
&F(&E)   SETB  (&G)                 SAVE NOT FLAG.
         AGO   .GOI0100             GO, GET NEXT SUPPLIED SWITCH.
.*
.* THIS ENTRY IS AN OLD ENTRY.
.*
.GOI1200 ANOP
&L(&E)   SETC  '&L(&E).+&M'         CONCATENATE SWITCH BIT NAMES.
         AGO   .GOI0100             GO, GET NEXT SUPPLIED SWITCH.
.*
.* THE FOLLOWING IS FOR WHEN ALL SWITCHES BELONG TO THE SAME BYTE.
.*
.GOI1300 AIF   (&E EQ 0).GOI3500    ERROR - NO SWITCHES CODED.
         AIF   (&E GT 1).GOI2400    MORE THAN 1, CONTINUE.
&NAME    TM    &K(1),&L(1)
         AIF   ('&ON' EQ '').GOI1500   NO ON, CONTINUE.
         AIF   ('&ON'(1,1) EQ '(').GOI1400   REGISTER, CONTINUE.
         BO    &ON                  BRANCH IF ON.
         AGO   .GOI1500             CONTINUE.
.GOI1400 ANOP
         BOR   &ON(1)               BRANCH IF ON.
.GOI1500 AIF   ('&OFF' EQ '').GOI1700   NO OFF, CONTINUE.
         AIF   ('&OFF'(1,1) EQ '(').GOI1600   REGISTER, CONTINUE.
         BZ    &OFF                 BRANCH IF OFF.
         AGO   .GOI1700             CONTINUE.
.GOI1600 ANOP
         BZR   &OFF(1)              BRANCH IF OFF.
.GOI1700 AIF   ('&MIXED' EQ '').GOI1900   NO MIXED, CONTINUE.
         AIF   ('&MIXED'(1,1) EQ '(').GOI1800   REGISTER, CONTINUE.
         BM    &MIXED               BRANCH IF MIXED.
         AGO   .GOI1900             CONTINUE.
.GOI1800 ANOP
         BMR   &MIXED(1)            BRANCH IF MIXED.
.GOI1900 AIF   ('&ANY' EQ '').GOI2100   NO ANY, CONTINUE.
         AIF   ('&ANY'(1,1) EQ '(').GOI2000   REGISTER, CONTINUE.
         BNZ   &ANY                 BRANCH IF ANY ON.
         AGO   .GOI2100             CONTINUE.
.GOI2000 ANOP
         BNZR  &ANY(1)              BRANCH IF ANY ON.
.GOI2100 AIF   ('&NOTALL' EQ '').GOI2300   NO NOTALL, CONTINUE.
         AIF   ('&NOTALL'(1,1) EQ '(').GOI2200   REGISTER, CONTINUE.
         BNO   &NOTALL              BRANCH IF NOT ALL ON.
         AGO   .GOI2300             CONTINUE.
.GOI2200 ANOP
         BNOR  &NOTALL(1)           BRANCH IF NOT ALL ON.
.GOI2300 MEXIT                      EXIT.
.*
.* THE FOLLOWING IS FOR 2 OR MORE BYTES.
.*
.GOI2400 ANOP
&N       SETC  ''                   DEFAULT TO NON-REGISTER BRANCH.
&O       SETC  '&NAME'              SAVE THE NAME.
         AIF   ('&MIXED' NE '').GOI3700   ERROR - CANT HANDLE MIXED.
&A       SETA  N'&ON+N'&OFF+N'&ANY+N'&NOTALL   GET # EXITS.
         AIF   (&A NE 1).GOI3800    ERROR - CANT HANDLE MORE THAN 1.
&B       SETA  0                    INDEX OF TESTS.
         AIF   ('&ON' NE '').GOI2500   GO HANDLE ON.
         AIF   ('&OFF' NE '').GOI2600   GO HANDLE OFF.
         AIF   ('&ANY' NE '').GOI3000   GO HANDLE ANY.
         AIF   ('&NOTALL' NE '').GOI3100   GO HANDLE NOTALL.
         MNOTE 16,'GOI999X - This Macro Has a Bug In It...'
.GOI2500 ANOP
&A       SETA  4                    SET LENGTH OF FINAL BRANCH.
&P(1)    SETC  'O'                  BRANCH MASK.
&P(2)    SETC  'Z'                  BRANCH MASK WHEN 'NOT-'.
&M       SETC  '&ON'                GET EXIT PARAMETER.
         AIF   ('&ON'(1,1) NE '(').GOI2700   NOT A REGISTER, CONT.
&A       SETA  2                    SET BRANCH LENGTH = 2.
&N       SETC  'R'                  REGISTER OP CODE.
&M       SETC  '&ON'(2,K'&ON-2)     STRIP OFF BRACKETS.
         AGO   .GOI2700             CONTINUE.
.GOI2600 ANOP
&A       SETA  4                    LELNGTH OF FINAL BRANCH.
&P(1)    SETC  'Z'                  BRANCH MASK.
&P(2)    SETC  'O'                  BRANCH MASK WHEN 'NOT-'.
&M       SETC  '&OFF'               GET EXIT PARAMETER.
         AIF   ('&OFF'(1,1) NE '(').GOI2700   NOT A REGISTER, CONT.
&A       SETA  2                    SET BRANCH LENGTH =2.
&N       SETC  'R'                  STRIP OFF BRACKETS.
&M       SETC  '&OFF'(2,K'&OFF-2)   STRIP OFF BRACKETS.
.GOI2700 ANOP
&A       SETA  (&E-1)*8+&A          INITIAL BRANCH AROUND LENGTH.
.GOI2800 AIF   (&B GE &E).GOI3300   FINISHED, GET THE HELL OUT.
&B       SETA  &B+1                 N, GET NEXT TEST.
&O       TM    &K(&B),&L(&B)
&O       SETC  ''                   ONLY WANT LABEL ONCE.
&Q       SETC  '&P(&F(&B)+1)'       ESTIMATE THE BRANCH LENGTH.
         AIF   (&B EQ &E).GOI2900   LAST ONE, GO DO FINAL BRANCH.
         BN&Q  *+&A
&A       SETA  &A-8                 DECREMENT BRANCH LENGTH.
         AGO   .GOI2800             LOOP THRU ALL TESTS.
.GOI2900 B&Q&N &M                   EXIT IF CONDITION SATISFIED.
         MEXIT                      EXIT.
.GOI3000 ANOP
&P(1)    SETC  'Z'                  BRANCH MASK.
&P(2)    SETC  'O'                  BRANCH MASK FOR 'NOT-'.
&M       SETC  '&ANY'               GET PARAMETER.
         AIF   ('&ANY'(1,1) NE '(').GOI3200   NOT A REGISTER, CONT.
&N       SETC  'R'                  REGISTER OP CODE.
&M       SETC  '&ANY'(2,K'&ANY-2)   STRIP OFF BRACKETS.
         AGO   .GOI3200             CONTINUE.
.GOI3100 ANOP
&P(1)    SETC  'O'                  BRANCH MASK.
&P(2)    SETC  'Z'                  BRANCH MASK FOR 'NOT-'.
&M       SETC  '&NOTALL'            PICK UP PARAMETER.
         AIF   ('&NOTALL'(1,1) NE '(').GOI3200   NOT A REGISTER, CONT.*
&N       SETC  'R'                  REGISTER OP CODE.
&M       SETC  '&NOTALL'(2,K'&NOTALL-2)   STRIP OFF BRACKETS.
.GOI3200 AIF   (&B GE &E).GOI3300   FINISHED, GET THE HELL OUT.
&B       SETA  &B+1                 GET NEXT TEST.
&O       TM    &K(&B),&L(&B)
&O       SETC  ''                   WANT LABEL ONLY ONCE.
&Q       SETC  '&P(&F(&B)+1)&N'     GET BRANCH MASK.
         BN&Q  &M
         AGO   .GOI3200             LOOP THRU ALL TESTS.
.GOI3300 MEXIT                      EXIT.
.GOI3400 MNOTE 8,'GOI001A - No Branch Conditions Specified'
         MEXIT                      EXIT.
.GOI3500 MNOTE 8,'GOI002A - No Switches Specified'
         MEXIT                      EXIT.
.GOI3600 MNOTE 8,'GOI003A - Switch &M Not Declared'
         MEXIT                      EXIT.
.GOI3700 MNOTE 8,'GOI004A - "MIXED" Parameter Not Supported When'
         MNOTE 0,'          More Than 1 Byte Is Being Tested'
         MEXIT
.GOI3800 MNOTE 8,'GOI005A - Multiple Tests Not Supported When'
         MNOTE 0,'          More Than 1 Byte Is Being Tested'
         MEND

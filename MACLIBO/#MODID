         MACRO
&LABEL   #MODID &VERS,&LVL,&BR=NO,&ID=
         GBLA  &#COPYSZ
         GBLB  &STBEG                   START/BEGIN PRESENT
         LCLA  &N(12),&D,&Y,&M,&X
         LCLC  &MON(12),&DAY,&YR,&VRS,&LEV,&MTH,&IDENT,&Q
         AIF   (NOT &STBEG).EXPAND
*  #MODID REDUNDANT DUE TO #START/BEGIN MACRO -- IGNORED
         MEXIT ,
.EXPAND  ANOP  ,
&MON(1)  SETC  'Jan'
&MON(2)  SETC  'Feb'
&MON(3)  SETC  'Mar'
&MON(4)  SETC  'Apr'
&MON(5)  SETC  'May'
&MON(6)  SETC  'Jun'
&MON(7)  SETC  'Jul'
&MON(8)  SETC  'Aug'
&MON(9)  SETC  'Sep'
&MON(10) SETC  'Oct'
&MON(11) SETC  'Nov'
&MON(12) SETC  'Dec'
.*
.*   SET UP ARRAY FOR NUMBER OF DAYS PER MONTH
.*
&N(1)    SETA  31
&N(2)    SETA  28
&N(3)    SETA  31
&N(4)    SETA  30
&N(5)    SETA  31
&N(6)    SETA  30
&N(7)    SETA  31
&N(8)    SETA  31
&N(9)    SETA  30
&N(10)   SETA  31
&N(11)   SETA  30
&N(12)   SETA  31
.*
.*   PARSE OPERANDS (IF ANY)
.*
         AIF   ('&VERS' EQ '' OR T'&VERS EQ 'O').NOVERS
         AIF   (K'&VERS GT 1).ERR1
         AIF   ('&VERS' LT '1' OR '&VERS' GT '9').ERR1
         AIF   ('&SYSECT' EQ '').ERR4
.*
.*   IF NO VERSION NUMBER SPECIFIED, ASSUME VERSION 0
.*
&VRS     SETC  '&VERS'
         AGO   .CKLVL
.NOVERS  ANOP  ,
&VRS     SETC  '0'
.*
.*   SAME FOR LEVEL NO.
.*
.CKLVL   ANOP  ,
         AIF   ('&LVL' EQ '' OR T'&LVL EQ 'O').NOLVL
         AIF   (K'&LVL GT 1).ERR2
         AIF   ('&LVL' LT '0' OR '&LVL' GT '9').ERR2
&LEV     SETC  '&LVL'
         AGO   .GETDATE
.NOLVL   ANOP  ,
&LEV     SETC  '0'
.*
.*   GET THE DATE AND CONVERT IT TO JULIAN. THIS IS MESSY BUT IT'S
.*   THE ONLY WAY TO FIT IT INTO THE FORMAT. USE THE FORMAT OF THE DATE
.*   RETURNED TO DETERMINE WHICH ASSEMBLER WE ARE USING.
.*
.GETDATE ANOP  ,
&D       SETA  0
&M       SETA  0
         AIF   ('&SYSDATE'(3,1) EQ '/').NOTG
         MNOTE 12,'Assembler G Must Not Be Used'
         MEXIT ,
.*
.*   BUILD THE DAY FOR THE JULIAN DATE FROM THE ARRAY ABOVE
.*
.LOOP1   ANOP  ,
&M       SETA  &M+1
         AIF   (&M GT 12).ERR3
         AIF   ('&SYSDATE'(3,3) EQ '&MON(&M)').FOUND
&D       SETA  &D+&N(&M)
         AGO   .LOOP1
.FOUND   ANOP  ,
&DAY     SETC  '&SYSDATE'(6,2)
&X       SETA  &DAY
&D       SETA  &D+&X
         AIF   ('&SYSDATE'(1,2) EQ '00').NOTLEAP
&YR      SETC  '&SYSDATE'(1,2)
&X       SETA  &YR
         AIF   (((&X/4)*4)-&X NE 0).NOTLEAP
         AIF   (&M LT 3).NOTLEAP
&D       SETA  &D+1
         AGO   .NOTLEAP
.NOTG    ANOP  ,
&M       SETA  &M+1
         AIF   (&M GT 12).ERR3
&MTH     SETC  '&SYSDATE'(1,2)
&X       SETA  &MTH
         AIF   (&M EQ &X).ADD
&D       SETA  &D+&N(&M)
         AGO   .NOTG
.ADD     ANOP  ,
&DAY     SETC  '&SYSDATE'(4,2)
&X       SETA  &DAY
&D       SETA  &D+&X
         AIF   ('&SYSDATE'(7,2) EQ '00').NOTLEAP
&YR      SETC  '&SYSDATE'(7,2)
&X       SETA  &YR
         AIF   (((&X/4)*4)-&X NE 0).NOTLEAP
         AIF   (&M LT 3).NOTLEAP
&D       SETA  &D+1
.NOTLEAP ANOP  ,
.*
.*   PLAY A SILLY GAME TO ADD LEADING ZEROS
.*
         AIF   (K'&D EQ 3).GOOD
         AIF   (K'&D EQ 2).TWO
&DAY     SETC  '00&D'
         AGO   .CHKBR
.TWO     ANOP  ,
&DAY     SETC  '0&D'
         AGO   .CHKBR
.GOOD    ANOP  ,
&DAY     SETC  '&D'
.CHKBR   ANOP  ,
&Q       SETC  '#&VRS&LEV&YR&DAY'
         AIF   ('&BR' EQ 'NO').EQU
         #COPY SET
         B     &Q+&#COPYSZ                   AROUND THE DC'S
.EQU     ANOP  ,
.*
.*   EQUATE MODID TO CSECT NAME SO IT WILL SHOW IN LKED MAP
.*
.*       ENTRY &Q     (THIS IS UTTERLY USELESS IN AN SMP ENVIRONMENT)
         DC    CL8'&Q'                  MODULE ID
&IDENT   SETC  '&SYSECT'
         AIF   ('&ID' EQ '' OR T'&ID EQ 'O').DEFLT
&IDENT   SETC  '&ID'
.DEFLT   DC    CL8'&IDENT'              CSECT NAME
         DC    CL8'&SYSTIME'            TIME OF COMPILE
&Q       #COPY GEN                      COPYRIGHT NOTICE
*
         MEXIT ,
.ERR1    MNOTE 12,'Version Number Is Invalid'
         MEXIT ,
.ERR2    MNOTE 12,'Level Number Is Invalid'
         MEXIT ,
.ERR3    MNOTE 16,'More Than 12 Months, You Are In Trouble'
         MEXIT ,
.ERR4    MNOTE 12,'No CSECT Name Coded'
         MEND  ,

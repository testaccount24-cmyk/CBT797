         MACRO ,                   |
&LABEL   #DATE &TO,&FROM=,&FORMAT='YYDDD',&LIST=YES
.*--------------------------------------------------------------------*
.*                                                                    *
.*       TO     (REQUIRED) - OUTPUT BUFFER (WORKDATE OR (R2-R15))     *
.*                                                                    *
.*       FROM=             - SUPPLIED DATE (FULLWORD OR (R0-R15))     *
.*                                                                    *
.*       FORMAT= DAYOFWEEK - DAY OF WEEK (SUNDAY-SATURDAY)            *
.*               CCYY      - CENTURY & YEAR (1988)                    *
.*               DDD       - JULIAN DATE (000-365)                    *
.*               MMM       - MONTH OF YEAR (JAN-DEC)                  *
.*               DD        - DAY OF MONTH (01-31)                     *
.*               MM        - MONTH OF YEAR (01-12)                    *
.*               YY        - YEAR (88)                                *
.*               #D        - NUMBER OF DAYS IN YEAR                   *
.*               WD        - DAY OF THE WEEK (MON=1...SUN=7)          *
.*                                                                    *
.*       LIST=   YES|NO    - PRINT GENERATION OPTION                  *
.*                                                                    *
.*--------------------------------------------------------------------*
.*                                                                    *
.*       NOTE: THIS MACRO DOES NOT PERFORM ALL THE TESTS NECESSARY    *
.*             TO CHECK FOR A LEAP YEAR.  THIS SHOULDN'T BE A PROBLEM *
.*             UNLESS THE YEAR BEING TESTED IS 1900 OR 2100.          *
.*             BY THEN IT WILL HAVE BEEN FIXED.                       *
.*                                                                    *
.*--------------------------------------------------------------------*
         GBLB  &STF(10)            |
         GBLC  &STPREF             |
         LCLA  &A,&B,&C,&D,&N      |
         LCLB  &F,&G,&H            |
         LCLC  &K,&P,&Q,&X,&REG    |
&N       SETA  0                   | INITALIZE LABEL COUNTER
&STF(8)  SETB  1                   | INDICATE #STARTWA FIELDS WANTED
&X       SETC  'DT&SYSNDX'         | GENERATE LABEL PREFIX
&P       SETC  '&STPREF.DBL1'      | DOUBLE WORD WORKAREA #1
&Q       SETC  '&STPREF.DBL2'      | DOUBLE WORD WORKAREA #2
         AIF   ('&LIST' EQ 'YES').DAT0100
         AIF   ('&LIST' NE 'NO').DATERR1
         PUSH  PRINT
         PRINT NOGEN
.DAT0100 ANOP  ,                   |
         AIF   ('&LABEL' EQ '').DAT0200
&LABEL   DS    0H                  #DATE MACRO - START
.DAT0200 ANOP  ,                   |
*-------
*        #DATE INITIALIZATION
*-------
         AIF   ('&TO' EQ '').DATERR2
         AIF   ('&FROM' EQ '').DAT0500
         AIF   ('&FROM'(1,1) EQ '(').DAT0300
         ICM   R0,15,&FROM         R0 HAS DATE - 0CYYDDDF
         AGO   .DAT0400            |
.DAT0300 ANOP  ,                   |
&REG     SETC  '&FROM'(2,K'&FROM-2)
         AIF   ('&REG' EQ 'R0' OR '&REG' EQ '0').DAT0400
         LR    R0,&REG             R0 HAS DATE - 0CYYDDDF
.DAT0400 ANOP  ,                   |
         C     R0,&X.P             CHECK IF VALID DATE WAS SUPPLIED
         BE    &X.A                B. IF NOT
         LTR   R0,R0               CHECK IF VALID DATE WAS SUPPLIED
         BNZ   &X.B                B. IF YES
&X.A     DS    0H
.DAT0500 ANOP  ,                   |
         L     R1,16               LOAD CVT ADDRESS
         L     R0,56(,R1)          R0 HAS DATE - 0CYYDDDF (CVTDATE)
&X.B     DS    0H
         AIF   ('&TO'(1,1) EQ '(').DAT0600
         LA    R1,&TO              R1 HAS DESTINATION FIELD ADDRESS
         AGO   .DAT0700            |
.DAT0600 ANOP  ,                   |
&REG     SETC  '&TO'(2,K'&TO-2)
         LR    R1,&REG             R1 HAS DESTINATION FIELD ADDRESS
.DAT0700 ANOP  ,                   |
&A       SETA  K'&FORMAT-2         | LENGTH OF FORMAT FIELD
&B       SETA  0                   | INDEX INTO FORMAT
&K       SETC  '&FORMAT'(2,K'&FORMAT-2)
         MVC   0(&A,R1),&X.Q
.DAT0800 ANOP  ,                   |
&C       SETA  &A-&B               | CALCULATE # OF REMAINING BYTES
         AIF   (&C LT 9).DAT0900   | IF 8 TO GO, CONTINUE
         AIF   ('&K'(&A-&C+1,9) EQ 'DAYOFWEEK').DAT1200
.DAT0900 ANOP  ,                   |
         AIF   (&C LT 4).DAT1000   | IF 3 TO GO, CONTINUE
         AIF   ('&K'(&A-&C+1,4) EQ 'CCYY').DAT1400
.DAT1000 ANOP  ,                   |
         AIF   (&C LT 3).DAT1100   | IF 2 TO GO, CONTINUE
         AIF   ('&K'(&A-&C+1,3) EQ 'DDD').DAT1600
         AIF   ('&K'(&A-&C+1,3) EQ 'MMM').DAT1800
.DAT1100 ANOP  ,                   |
         AIF   (&C LT 2).DAT3000   | IF 1 TO GO, EXIT
         AIF   ('&K'(&A-&C+1,2) EQ 'DD').DAT2000
         AIF   ('&K'(&A-&C+1,2) EQ 'MM').DAT2200
         AIF   ('&K'(&A-&C+1,2) EQ 'YY').DAT2400
         AIF   ('&K'(&A-&C+1,2) EQ '#D').DAT2600
         AIF   ('&K'(&A-&C+1,2) EQ 'WD').DAT2800
&B       SETA  &B+1                | POINT TO NEXT CHARACTER
&D       SETA  &D+1                | POINT TO NEXT CHARACTER
         AGO   .DAT0800            |
.*                                 |
.DAT1200 ANOP  ,                   |
&N       SETA  &N+1                BUMP LABEL COUNTER
*-------
*        CONVERT "DAYOFWEEK" INTO DAY OF THE WEEK
*-------
         XC    &P,&P               CLEAR WORK AREA #1
         XC    &Q,&Q               CLEAR WORK AREA #2
         AIF   (&D EQ 0).DAT1300   |
         LA    R1,&D.(,R1)         ADVANCE OUTPUT AREA POINTER
&D       SETA  0                   | RESET INDEX INTO AREA
.DAT1300 ANOP  ,                   |
         STCM  R0,12,&P+6          SAVE "CCYY"
         MVO   &Q+6(2),&P+6(2)
         OI    &Q+7,X'0F'          CONVERT TO "CYYF'
         CVB   R15,&Q
         SLR   R14,R14
         D     R14,&X.R            DIVIDE YEAR BY LOOP FACTOR
         LA    R15,&X.T            LOAD "1ST DAY OF YEAR" TABLE ADDRESS
         IC    R14,0(R14,R15)      LOAD DAY INDEX
         STH   R0,&P+6             SAVE DDDF
         OI    &P+7,X'0F'          ENSURE SIGN IS VALID
         CVB   R15,&P              CONVERT DATE TO JULIAN
         AR    R15,R14             ADD INDEX TO CURRENT DATE
         SLR   R14,R14
         D     R14,&X.S            DIVIDE BY NUMBER OF DAYS IN A WEEK
         LA    R15,&X.U            LOAD "DAY OF WEEK" TABLE ADDRESS
&X.C&N   DS    0H
         CH    R14,0(,R15)         CHECK FOR DAY KEY
         BE    &X.D&N              B. IF FOUND
         LA    R15,14(,R15)        ADVANCE TO NEXT TABLE ENTRY
         B     &X.C&N
&X.D&N   DS    0H
         MVC   0(9,R1),2(R15)      INSERT - DAYOFWEEK
&B       SETA  &B+9                | POINT TO NEXT CHARACTER
&D       SETA  &D+9                | POINT TO NEXT CHARACTER
&G       SETB  1                   | INDICATE TABLE GENERATION REQUIRED
         AGO   .DAT0800            |
.*                                 |
.DAT1400 ANOP  ,                   |
*-------
*        CONVERT "CCYY" INTO CURRENT CENTURY & YEAR
*-------
         XC    &P,&P               CLEAR WORK AREA #1
         AIF   (&D EQ 0).DAT1500   |
         LA    R1,&D.(,R1)         ADVANCE OUTPUT AREA POINTER
&D       SETA  0                   | RESET INDEX INTO AREA
.DAT1500 ANOP  ,                   |
         STCM  R0,8,&P+3           SAVE # OF CENTURIES PAST 20TH
         LA    R15,19              LOAD STARTING POINT
         A     R15,&P              ADD # OF CENTURIES PAST 20TH
         CVD   R15,&P              CONVERT NUMBER TO DECIMAL
         UNPK  0(2,R1),&P+6(2)
         OI    1(R1),X'F0'
         LR    R15,R0              LOAD YEAR IN 0CYYDDDF FORMAT
         STCM  R15,4,3(R1)         SAVE "YY"
         SRL   R15,4               CONVERT TO   00CYYDDD FORMAT
         STCM  R15,4,2(R1)         SAVE "CY'
         OI    2(R1),X'F0'         CONVERT X'0889' TO X'F8F9' (IE. 89)
         OI    3(R1),X'F0'
&B       SETA  &B+4                | POINT TO NEXT CHARACTER
&D       SETA  &D+4                | POINT TO NEXT CHARACTER
         AGO   .DAT0800            |
.*                                 |
.DAT1600 ANOP  ,                   |
*-------
*        CONVERT "DDD" INTO JULIAN DATE
*-------
         XC    &P,&P               CLEAR WORK AREA #1
         AIF   (&D EQ 0).DAT1700   |
         LA    R1,&D.(,R1)         ADVANCE OUTPUT AREA POINTER
&D       SETA  0                   | RESET INDEX INTO AREA
.DAT1700 ANOP  ,                   |
         STH   R0,&P+6             SAVE DDDF
         OI    &P+7,X'0F'          ENSURE SIGN IS VALID
         UNPK  0(3,R1),&P+6(2)
&B       SETA  &B+3                | POINT TO NEXT CHARACTER
&D       SETA  &D+3                | POINT TO NEXT CHARACTER
         AGO   .DAT0800            |
.*                                 |
.DAT1800 ANOP  ,                   |
&N       SETA  &N+1                BUMP LABEL COUNTER
*-------
*        CONVERT "MMM" INTO MONTH OF YEAR
*-------
         XC    &P,&P               CLEAR WORK AREA #1
         XC    &Q,&Q               CLEAR WORK AREA #2
         AIF   (&D EQ 0).DAT1900   |
         LA    R1,&D.(,R1)         ADVANCE OUTPUT AREA POINTER
&D       SETA  0                   | RESET INDEX INTO AREA
.DAT1900 ANOP  ,                   |
         STCM  R0,12,&P+6          SAVE "CCYY"
         MVO   &Q+6(2),&P+6(2)
         OI    &Q+7,X'0F'          CONVERT TO "CYYF'
         CVB   R15,&Q
         STH   R15,&P+6
         LA    R14,&X.V            LOAD ADDRESS OF NON-LEAP YEAR TABLE
         TM    &P+7,3              CHECK IF YEAR DIVISIBLE BY 4
         BNZ   &X.E&N              B. IF NOT
         LA    R14,&X.V+2          LOAD ADDRESS OF LEAP     YEAR TABLE
&X.E&N   DS    0H
         STH   R0,&P+6             SAVE DDDF
         CVB   R15,&P
         CH    R15,0(,R14)         CHECK FOR DESIRED MONTH
         BH    &X.F&N              B. IF FOUND
         LA    R14,10(,R14)        LOAD ADDRESS OF NEXT MONTH
         B     &X.E&N
&X.F&N   DS    0H
         CLI   2(R14),C'X'         CHECK FOR LEAP YEAR
         BE    &X.G&N              B. IF YES
         LA    R14,2(,R14)         LOAD ADDRESS OF CURRENT MONTH
&X.G&N   DS    0H
         MVC   0(3,R1),3(R14)      INSERT - MMM
&B       SETA  &B+3                | POINT TO NEXT CHARACTER
&D       SETA  &D+3                | POINT TO NEXT CHARACTER
&F       SETB  1                   | INDICATE TABLE GENERATION REQUIRED
         AGO   .DAT0800            |
.*                                 |
.DAT2000 ANOP  ,                   |
&N       SETA  &N+1                BUMP LABEL COUNTER
*-------
*        CONVERT "DD" INTO DAY OF THE MONTH
*-------
         XC    &P,&P               CLEAR WORK AREA #1
         XC    &Q,&Q               CLEAR WORK AREA #2
         AIF   (&D EQ 0).DAT2100   |
         LA    R1,&D.(,R1)         ADVANCE OUTPUT AREA POINTER
&D       SETA  0                   | RESET INDEX INTO AREA
.DAT2100 ANOP  ,                   |
         STCM  R0,12,&P+6          SAVE "CCYY"
         MVO   &Q+6(2),&P+6(2)
         OI    &Q+7,X'0F'          CONVERT TO "CYYF"
         CVB   R15,&Q
         STH   R15,&P+6
         LA    R14,&X.V            LOAD ADDRESS OF NON-LEAP YEAR TABLE
         TM    &P+7,3              CHECK IF YEAR DIVISIBLE BY 4
         BNZ   &X.H&N              B. IF NOT
         LA    R14,&X.V+2          LOAD ADDRESS OF LEAP     YEAR TABLE
&X.H&N   DS    0H
         STH   R0,&P+6             SAVE DDDF
         OI    &P+7,X'0F'          ENSURE SIGN IS VALID
         CVB   R15,&P
         CH    R15,0(,R14)         CHECK FOR DESIRED MONTH
         BH    &X.I&N              B. IF FOUND
         LA    R14,10(,R14)        LOAD ADDRESS OF NEXT MONTH
         B     &X.H&N
&X.I&N   DS    0H
         SH    R15,0(,R14)         CALCULATE DAY OF CURRENT MONTH
         CVD   R15,&P
         UNPK  &Q.(3),&P+6(2)
         MVC   0(2,R1),&Q+1        INSERT - DD
         OI    1(R1),X'F0'
&B       SETA  &B+2                | POINT TO NEXT CHARACTER
&D       SETA  &D+2                | POINT TO NEXT CHARACTER
&F       SETB  1                   | INDICATE TABLE GENERATION REQUIRED
         AGO   .DAT0800            |
.*                                 |
.DAT2200 ANOP  ,                   |
&N       SETA  &N+1                BUMP LABEL COUNTER
*-------
*        CONVERT "MM" INTO MONTH OF THE YEAR
*-------
         XC    &P,&P               CLEAR WORK AREA #1
         XC    &Q,&Q               CLEAR WORK AREA #2
         AIF   (&D EQ 0).DAT2300   |
         LA    R1,&D.(,R1)         ADVANCE OUTPUT AREA POINTER
&D       SETA  0                   | RESET INDEX INTO AREA
.DAT2300 ANOP  ,                   |
         STCM  R0,12,&P+6          SAVE "CCYY"
         MVO   &Q+6(2),&P+6(2)
         OI    &Q+7,X'0F'          CONVERT TO "CYYF"
         CVB   R15,&Q
         STH   R15,&P+6
         LA    R14,&X.V            LOAD ADDRESS OF NON-LEAP YEAR TABLE
         TM    &P+7,3              CHECK IF YEAR DIVISIBLE BY 4
         BNZ   &X.J&N              B. IF NOT
         LA    R14,&X.V+2          LOAD ADDRESS OF LEAP     YEAR TABLE
&X.J&N   DS    0H
         STH   R0,&P+6             SAVE DDDF
         CVB   R15,&P
         CH    R15,0(,R14)         CHECK FOR DESIRED MONTH
         BH    &X.K&N              B. IF FOUND
         LA    R14,10(,R14)        LOAD ADDRESS OF NEXT MONTH
         B     &X.J&N
&X.K&N   DS    0H
         CLI   2(R14),C'X'         CHECK FOR LEAP YEAR
         BE    &X.L&N              B. IF YES
         LA    R14,2(,R14)         LOAD ADDRESS OF CURRENT MONTH
&X.L&N   DS    0H
         MVC   0(2,R1),6(R14)      INSERT - MM
&B       SETA  &B+2                | POINT TO NEXT CHARACTER
&D       SETA  &D+2                | POINT TO NEXT CHARACTER
&F       SETB  1                   | INDICATE TABLE GENERATION REQUIRED
         AGO   .DAT0800            |
.*                                 |
.DAT2400 ANOP  ,                   |
*-------
*        CONVERT "YY" INTO CURRENT YEAR
*-------
         AIF   (&D EQ 0).DAT2500   |
         LA    R1,&D.(,R1)         ADVANCE OUTPUT AREA POINTER
&D       SETA  0                   | RESET INDEX INTO AREA
.DAT2500 ANOP  ,                   |
         LR    R15,R0              LOAD YEAR IN 0CYYDDDF FORMAT
         STCM  R15,4,1(R1)         SAVE "YY"
         SRL   R15,4               CONVERT TO   00CYYDDD FORMAT
         STCM  R15,4,0(R1)         SAVE "CY'
         OI    0(R1),X'F0'         CONVERT X'0889' TO X'F8F9' (IE. 89)
         OI    1(R1),X'F0'
&B       SETA  &B+2                | POINT TO NEXT CHARACTER
&D       SETA  &D+2                | POINT TO NEXT CHARACTER
         AGO   .DAT0800            |
.*                                 |
.DAT2600 ANOP  ,                   |
&N       SETA  &N+1                BUMP LABEL COUNTER
*-------
*        CONVERT "#D" INTO NUMBER OF DAYS IN THE YEAR
*-------
         XC    &P,&P               CLEAR WORK AREA #1
         XC    &Q,&Q               CLEAR WORK AREA #2
         AIF   (&D EQ 0).DAT2700   |
         LA    R1,&D.(,R1)         ADVANCE OUTPUT AREA POINTER
&D       SETA  0                   | RESET INDEX INTO AREA
.DAT2700 ANOP  ,                   |
         STCM  R0,12,&P+6          SAVE "CCYY"
         MVO   &Q+6(2),&P+6(2)
         OI    &Q+7,X'0F'          CONVERT TO "CYYF'
         CVB   R15,&Q
         STH   R15,&P+6            SAVE "00YY"
         MVC   0(2,R1),=Y(365)     ASSUME NON-LEAP YEAR
         TM    &P+7,3              CHECK IF YEAR DIVISIBLE BY 4
         BNZ   &X.M&N              B. IF NOT
         MVC   0(2,R1),=Y(366)     SET NUMBER TO LEAP YEAR DAYS
&X.M&N   DS    0H
&B       SETA  &B+2                | POINT TO NEXT CHARACTER
&D       SETA  &D+2                | POINT TO NEXT CHARACTER
         AGO   .DAT0800            |
.*                                 |
.DAT2800 ANOP  ,                   |
&N       SETA  &N+1                BUMP LABEL COUNTER
*-------
*        CONVERT "WD" INTO CURRENT NUMERICAL DAY OF THE WEEK
*-------
         XC    &P,&P               CLEAR WORK AREA #1
         XC    &Q,&Q               CLEAR WORK AREA #2
         AIF   (&D EQ 0).DAT2900   |
         LA    R1,&D.(,R1)         ADVANCE OUTPUT AREA POINTER
&D       SETA  0                   | RESET INDEX INTO AREA
.DAT2900 ANOP  ,                   |
         STCM  R0,12,&P+6          SAVE "CCYY"
         MVO   &Q+6(2),&P+6(2)
         OI    &Q+7,X'0F'          CONVERT TO "CYYF'
         CVB   R15,&Q
         SLR   R14,R14
         D     R14,&X.R            DIVIDE YEAR BY LOOP FACTOR
         LA    R15,&X.T            LOAD "1ST DAY OF YEAR" TABLE
         IC    R14,0(R14,R15)      LOAD DAY INDEX
         STH   R0,&P+6             SAVE DDDF
         OI    &P+7,X'0F'          ENSURE SIGN IS VALID
         CVB   R15,&P              CONVERT DATE TO JULIAN
         AR    R15,R14             ADD INDEX TO CURRENT DATE
         SLR   R14,R14
         D     R14,&X.S            DIVIDE BY DAYS IN A WEEK
         LA    R15,&X.U            LOAD "DAY OF WEEK" TABLE
&X.N&N   DS    0H
         CH    R14,0(,R15)         CHECK FOR DAY KEY
         BE    &X.O&N              B. IF FOUND
         LA    R15,14(,R15)        ADVANCE TO NEXT TABLE ENTRY
         B     &X.N&N
&X.O&N   DS    0H
         MVC   0(2,R1),12(R15)     INSERT - DAY OF THE WEEK
&B       SETA  &B+2                | POINT TO NEXT CHARACTER
&D       SETA  &D+2                | POINT TO NEXT CHARACTER
&G       SETB  1                   | INDICATE TABLE REQUIRED
         AGO   .DAT0800            |
.*                                 |
.DAT3000 ANOP  ,                   |
         B     &X.W                BRANCH AROUND CONSTANTS
*-------
*        #DATE CONSTANTS AND CONVERSION TABLES
*-------
&X.P     DC    0F'0',X'0000000F'   PACKED DECIMAL ZEROS
&X.Q     DC    C&FORMAT            FORMAT FIELD OVERLAY
         AIF   (NOT &G).DAT3100
&X.R     DC    F'28'               1ST DAY OF YEAR DIVISION FACTOR
&X.S     DC    F'7'                DAY OF WEEK DIVISION FACTOR
&X.T     DS    0H                  DAY OF WEEK TABLE (1ST DAY OF YEAR)
         DC    X'00020304050001'
         DC    X'02030506000103'
         DC    X'04050601020304'
         DC    X'06000102040506'
&X.U     DS    0H                  DAY OF WEEK TABLE (DAY OF WEEK)
         DC    H'0',CL10'Saturday  ',C'06'
         DC    H'1',CL10'Sunday    ',C'07'
         DC    H'2',CL10'Monday    ',C'01'
         DC    H'3',CL10'Tuesday   ',C'02'
         DC    H'4',CL10'Wednesday ',C'03'
         DC    H'5',CL10'Thursday  ',C'04'
         DC    H'6',CL10'Friday    ',C'05'
.DAT3100 ANOP  ,                   |
         AIF   (NOT &F).DAT3200
&X.V     DS    0H                  DAY OF MONTH/MONTH OF YEAR TABLE
         DC    AL2(334,335),CL6'XDec12'
         DC    AL2(304,305),CL6'XNov11'
         DC    AL2(273,274),CL6'XOct10'
         DC    AL2(243,244),CL6'XSep09'
         DC    AL2(212,213),CL6'XAug08'
         DC    AL2(181,182),CL6'XJul07'
         DC    AL2(151,152),CL6'XJun06'
         DC    AL2(120,121),CL6'XMay05'
         DC    AL2(090,091),CL6'XApr04'
         DC    AL2(059,060),CL6'XMar03'
         DC    AL2(031,031),CL6'XFeb02'
         DC    AL2(000,000),CL6'XJan01'
.DAT3200 ANOP  ,                   |
&X.W     DS    0H                  #DATE MACRO - END
         AGO   .MEND               |
.DATERR1 MNOTE 8,'#DATE1E - "LIST=" Parameter Is Invalid (YES Or NO)'
         AGO   .MEND               |
.DATERR2 MNOTE 8,'#DATE2E - "TO" Positional Parameter Is Missing'
         AGO   .MEND               |
.MEND    ANOP  ,                   |
         AIF   ('&LIST' EQ 'YES').MEND2
         POP   PRINT
.MEND2   ANOP  ,                   |
         MEND  ,                   |
